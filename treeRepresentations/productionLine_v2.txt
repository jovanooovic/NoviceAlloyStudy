AK6zSxwyMTfqK4dc7
bNCCf9FMRZoxqobfX M: └──  user added theme options. same as previous submission
inv1 E:     ├──   
inv1 C:     │   └──  Worker in Human+Robot
inv2 U:     │       └──  all w : Workstation | some w.workers all w : Worker | some workers.w
inv2 C:     │           └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │               └──  all c : Component | one c.workstation
inv4 C:     │                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                       └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 S:     │                           └──  all c : Components | c not in c.^parts
inv6 C:     │                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                   └──  all d : Dangerous | d.^(~parts) in Dangerous
inv7 O:     │                                       └──  all d : Dangerous | parts.d in Dangerous
inv6 U:     │                                           └──  all c : Component | c not in c.parts
inv6 C:     │                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                   └──  all d : Dangerous | parts.d in Dangerous
inv8 O:     │                                                       └──  all d : Dangerous | d.workstation.workers in Robot
inv9 U:     │                                                           └──  no end.succ+succ.begin all w : Workstation-end-begin | one w.succ && one w.succ
inv9 U:     │                                                               └──  no end.succ+succ.begin all w : Workstation-end-begin | one w.succ && one succ.w
inv9 B:     │                                                                   └──  no end.succ+succ.begin one succ.end one begin.succ all w : Workstation-end-begin | one w.succ && one succ.w
inv9 B:     │                                                                       └──  no end.succ+succ.begin one succ.end one begin.succ begin != end all w : Workstation-end-begin | one w.succ && one succ.w
inv9 B:     │                                                                           └──  no end.succ+succ.begin one succ.end one begin.succ begin not in end all w : Workstation-end-begin | one w.succ && one succ.w
inv9 B:     │                                                                               └──  no end.succ+succ.begin one succ.end one begin.succ begin != end all w : Workstation-end-begin | one w.succ && one succ.w
inv9 O:     │                                                                                   └──  no end.succ+succ.begin one succ.end one begin.succ begin != end all w : Workstation-end-begin | one w.succ && one succ.w && w.succ != succ.w
inv9 S:     │                                                                                       └──  no end.succ+succ.begin one succ.end one begin.succ all w : Workstation | w != begin&suc all w : Workstation-end-begin | one w.succ && one succ.w && w.succ != succ.w
inv9 O:     │                                                                                           └──  no end.succ+succ.begin one succ.end one begin.succ all w : Workstation | w != begin&end all w : Workstation-end-begin | one w.succ && one succ.w && w.succ != succ.w
inv9 O:     │                                                                                               └──  no end.succ+succ.begin one succ.end one begin.succ all w : Workstation | w not in begin&end all w : Workstation-end-begin | one w.succ && one succ.w && w.succ != succ.w
inv7 O:     │                                                                                                   └──  all d : Dangerous | parts.d in Dangerous
inv6 E:     │                                                                                                       └──   
inv7 O:     │                                                                                                           └──  all d : Dangerous | parts.d in Dangerous
inv10 O:    │                                                                                                               └──  all c : Component, p : c.parts | c in c.workstation.^succ
inv10 O:    │                                                                                                                   └──  all c : Component, p : c.parts | p in c.workstation.^succ
inv10 B:    │                                                                                                                       └──  all c : Component, p : c.parts | p.workstation in c.workstation.^succ
inv10 B:    │                                                                                                                           └──  all c : Component, p : c.parts | p.workstation in c.workstation.succ.^succ
inv10 O:    │                                                                                                                               └──  all c : Component, p : c.parts | p.workstation in c.workstation.~succ.^~succ
inv10 B:    │                                                                                                                                   └──  all c : Component, p : c.parts | p.workstation in c.workstation.succ.^succ
inv10 O:    │                                                                                                                                       └──  all c : Component, p : c.parts | p.workstation in c.workstation.~succ.^~succ
inv10 B:    │                                                                                                                                           └──  all c : Component, p : c.parts | p.workstation in c.workstation.succ.^succ
inv10 T:    │                                                                                                                                               └──  all c : Component, p : c.parts | some p.workstation in c.workstation.succ.^succ
inv10 B:    │                                                                                                                                                   └──  all c : Component, p : c.parts | p.workstation in c.workstation.succ.^succ
inv10 O:    │                                                                                                                                                       └──  all c : Component, p : c.parts | p.workstation in c.workstation.~succ.^~succ
inv10 O:    │                                                                                                                                                           └──  all c : Component, p : c.parts | some p.workstation && p.workstation in c.workstation.~succ.^~succ
inv10 B:    │                                                                                                                                                               └──  all c : Component, p : c.parts | some p.workstation && p.workstation in c.workstation.succ.^succ
inv10 O:    │                                                                                                                                                                   └──  all c : Component, p : c.parts | p.workstation in c.workstation.~succ.^~succ
inv10 S:    │                                                                                                                                                                       └──  all c : Components | c.p.workstation in (^succ).(c.workstation)
inv10 S:    │                                                                                                                                                                           └──  all c : Components | c.parts.workstation in (^succ).(c.workstation)
inv10 C:    │                                                                                                                                                                               └──  all c : Component | c.parts.workstation in (^succ).(c.workstation)
inv9 C:     │                                                                                                                                                                                   └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv9 O:     │                                                                                                                                                                                       └──  all w : Workstation | no succ.w && w in begin and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv9 S:     │                                                                                                                                                                                           └──  all w : Workstation | no succ.w w in begin and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                                                                               └──  all w : Workstation | no succ.w <=> w in begin and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv9 C:     │                                                                                                                                                                                                   └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  all w: Workstation | some : wo : Worker | wo in w.workers and all wo : Worker | one w: Workstation | wo in w.workers
inv2 C:     │       └──  all w: Workstation | some wo : Worker | wo in w.workers and all wo : Worker | one w: Workstation | wo in w.workers
inv3 C:     │           └──  all c : Component | one ws : Workstation | ws in c.workstation
inv4 S:     │               └──  all c : Componente | some c.parts and all m : Material | no m.parts
inv4 U:     │                   └──  all c : Component | some c.parts and all m : Material | no m.parts
inv4 C:     │                       └──  all c : Component | some c.parts  all m : Material | no m.parts
inv5 T:     │                           └──  all w : Worker | all ws: Workstation | ws.workers in Robot implies no ws.workers in Human
inv5 T:     │                               └──  all w : Worker | all ws: Workstation | ws.workers & Robot implies no ws.workers & Human
inv4 C:     │                                   └──  all c : Component | some c.parts  all m : Material | no m.parts
inv4 U:     │                                       └──  all c : Component | some c.parts and all m : Material | no m.parts
inv4 C:     │                                           └──  (all c : Component | some c.parts) and (all m : Material | no m.parts)
inv2 C:     │                                               └──  all w: Workstation | some wo : Worker | wo in w.workers and all wo : Worker | one w: Workstation | wo in w.workers
inv4 C:     │                                                   └──  (all c : Component | some c.parts) and (all m : Material | no m.parts)
inv5 T:     │                                                       └──  all w : Worker | all ws: Workstation | ws.workers & Robot implies no ws.workers & Human
inv5 C:     │                                                           └──  all w: Workstation | no (w.workers & Robot) or no (w.workers & Human)
inv6 S:     │                                                               └──  all c : Components | no c in c.parts
inv6 T:     │                                                                   └──  all c : Component | no c in c.parts
inv6 U:     │                                                                       └──  all c : Component | not c in c.parts
inv6 C:     │                                                                           └──  all c : Component | not c in c.^parts
inv8 B:     │                                                                               └──  all ws: Workstation | all c : Component & Dangerous | ws in c.workstation implies no (ws.workers & Robot)
inv1 C:     ├──  Worker in (Human+Robot)
inv2 B:     │   └──  #Workstation.workers > 1 all worker: Worker | one ws: Workstation | worker in ws.workers
inv2 U:     │       └──  #Workstation.workers >= 1 all worker: Worker | one ws: Workstation | worker in ws.workers
inv2 T:     │           └──  all ws: Workstation | not none ws.workers all worker: Worker | one ws: Workstation | worker in ws.workers
inv2 C:     │               └──  all ws: Workstation | not no ws.workers all worker: Worker | one ws: Workstation | worker in ws.workers
inv3 C:     │                   └──  all co: Component | one co.workstation
inv4 S:     │                       └──  all product: Product | (product == Component implies not no product.parts) and  (product == Material implies no product.parts)
inv4 U:     │                           └──  all product: Product | (product = Component implies not no product.parts) and  (product = Material implies no product.parts)
inv4 B:     │                               └──  all product: Product | (product != Material implies some product.parts) and  (product = Material implies no product.parts)
inv4 U:     │                                   └──  all product: Product | (product != Material implies some product.parts) or  (product = Material implies no product.parts)
inv4 B:     │                                       └──  all product: Product | (product != Material implies some product.parts) and  (product = Material implies no product.parts)
inv4 O:     │                                           └──  all product: Product | (product != Material implies some product.parts) all mat: Material | no mat.parts
inv4 O:     │                                               └──  all product: Product | product != Material implies some product.parts all mat: Material | no mat.parts
inv4 O:     │                                                   └──  all product: Product | product != Material implies not no product.parts all mat: Material | no mat.parts
inv4 C:     │                                                       └──  all product: Component | not no product.parts all mat: Material | no mat.parts
inv4 O:     │                                                           └──  all product: Component | not no product.parts all product: Product | product != Material implies some product.parts all mat: Material | no mat.parts
inv4 C:     │                                                               └──  all product: Component | not no product.parts all product: Product | product not in Material implies some product.parts all mat: Material | no mat.parts
inv4 C:     │                                                                   └──  all product: Product | product not in Material implies some product.parts all mat: Material | no mat.parts
inv5 O:     │                                                                       └──  all ws: Workstation | all disj w1, w2: ws.workers | w1 in Human implies w2 in Human
inv6 C:     │                                                                           └──  all component: Component | component not in component.^parts
inv7 B:     │                                                                               └──  all component: Component | component.^parts in Dangerous implies component in Dangerous
inv7 T:     │                                                                                   └──  all c: Dangerous | all c1: *c | c1 in Dangerous
inv7 C:     │                                                                                       └──  all c: Component | all p : c.parts | p in Dangerous implies c in Dangerous
inv8 O:     │                                                                                           └──  all c: Component | c in Dangerous implies c.workstation.workers in Robot
inv1 C:     │                                                                                               └──  Worker in (Human+Robot)
inv1 C:     │                                                                                                   └──  Worker in (Human+Robot)
inv1 C:     │                                                                                                       └──  Worker in (Human+Robot)
FRQgXeE2vim7qakDW N:     │                                                                                                           └──  user added extra characters to pred name
5NrnatZNq899PcD2F N:     │                                                                                                               └──  user added extra characters to pred name
inv10 O:    │                                                                                                                   └──  
inv10 O:    │                                                                                                                       └──  
inv10 O:    │                                                                                                                           └──  
inv9 T:     │                                                                                                                               └──  no *begin and no end.succ
inv10 O:    │                                                                                                                                   └──  
inv10 O:    │                                                                                                                                       └──  
inv9 T:     │                                                                                                                                           └──  all be: begin | be not in Workstation.succ and be
inv9 U:     │                                                                                                                                               └──  all be: begin | be not in Workstation.succ
inv10 O:    │                                                                                                                                                   └──  
inv8 O:     │                                                                                                                                                       └──  all c: Component | c in Dangerous implies c.workstation.workers in Robot
inv10 O:    │                                                                                                                                                           └──  
inv10 O:    │                                                                                                                                                               └──  
inv10 O:    │                                                                                                                                                                   └──  
inv10 O:    │                                                                                                                                                                       └──  
inv1 C:     │                                                                                                                                                                           └──  Worker in (Human+Robot)
inv1 C:     │                                                                                                                                                                               └──  Worker in (Human+Robot)
inv1 C:     │                                                                                                                                                                                   └──  Worker in (Human+Robot)
inv10 O:    │                                                                                                                                                                                       └──  
inv9 S:     │                                                                                                                                                                                           └──  no (disj begin, end)
inv10 O:    │                                                                                                                                                                                               └──  
inv10 O:    │                                                                                                                                                                                                   └──  
inv9 E:     │                                                                                                                                                                                                       └──   
inv9 B:     │                                                                                                                                                                                                           └──  no begin - end
inv9 U:     │                                                                                                                                                                                                               └──  all b: begin | b not in Workstation.succ
inv9 U:     │                                                                                                                                                                                                                   └──  all b: begin, e: end | b not in Workstation.succ and no e.succ
inv9 U:     │                                                                                                                                                                                                                       └──  all b: begin, e: end | b not in Workstation.succ and no e.succ all w: Workstation | w not in w.^succ
inv9 U:     │                                                                                                                                                                                                                           └──  all b: begin, e: end | b not in Workstation.succ and no e.succ all w: Workstation | w not in w.^succ all w: Workstation | w not in end implies some w.succ all w: Workstation | w not in begin implies w in Workstation.succ
inv1 C:     │                                                                                                                                                                                                                               └──  Worker in (Human+Robot)
inv2 C:     │                                                                                                                                                                                                                                   └──  all ws: Workstation | some ws.workers  all w: Worker | one w.~workers
inv3 C:     │                                                                                                                                                                                                                                       └──  all co: Component | one co.workstation
inv4 C:     │                                                                                                                                                                                                                                           └──  all c: Component | some c.parts all mat: Material | no mat.parts
inv5 O:     │                                                                                                                                                                                                                                               └──  all ws: Workstation | all disj w1, w2: ws.workers | w1 in Human implies w2 in Human
inv5 O:     │                                                                                                                                                                                                                                                   └──  all ws: Workstation | ws.workers in Human or ws.workers in Robot
inv6 C:     │                                                                                                                                                                                                                                                       └──  all component: Component | component not in component.^parts
inv7 C:     │                                                                                                                                                                                                                                                           └──  all c: Component, p : c.parts | p in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                               └──  ^parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                                   └──  parts.Dangerous in Dangerous
inv7 B:     │                                                                                                                                                                                                                                                                       └──  all c: Component | some p : c.parts | p in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                                                                                                                                                           └──  all c: Component, p : c.parts | some p & Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                                                                                                                                                               └──  all c: Component, p : c.parts | p in Dangerous implies c in Dangerous
inv9 U:     │                                                                                                                                                                                                                                                                                   └──  all b: begin, e: end | b not in Workstation.succ and no e.succ all w: Workstation | w not in w.^succ all w: Workstation | w not in end implies some w.succ all w: Workstation | w not in begin implies w in Workstation.succ
inv9 C:     │                                                                                                                                                                                                                                                                                       └──  all w: Workstation | lone w.succ all w: Workstation | lone w.~succ all w: Workstation | w in begin.*succ no end.succ
inv9 C:     │                                                                                                                                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation Workstation in begin.*succ no end.succ
inv9 U:     │                                                                                                                                                                                                                                                                                               └──  all b: begin, e: end | b not in Workstation.succ and no e.succ all w: Workstation | w not in w.^succ all w: Workstation | w not in end implies some w.succ all w: Workstation | w not in begin implies w in Workstation.succ
inv9 C:     │                                                                                                                                                                                                                                                                                                   └──  all b: begin, e: end | b not in Workstation.succ and no e.succ all w: Workstation | w not in w.^succ all w: Workstation | w not in end implies one w.succ all w: Workstation | w not in begin implies w in Workstation.succ
inv10 B:    │                                                                                                                                                                                                                                                                                                       └──  all c: Component, p: Product | p in c.parts implies c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                           └──  all c: Component, p: Component | p in c.parts implies c.workstation in p.workstation.^succ
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv1 C:     │   └──  all w:Worker | w in Human or w in Robot
inv1 C:     │       └──  all w:Worker | w in Human or w in Robot
inv1 C:     │           └──  all w:Worker | w in Human or w in Robot
inv1 C:     │               └──  all w:Worker | w in Human or w in Robot
inv4 S:     │                   └──  all c:Component | c->p in parts
inv1 C:     ├──  Worker = Human + Robot
inv2 U:     │   └──  workers in Workstation -> some Worker
inv2 C:     │       └──  workers in Workstation one -> some Worker
inv3 C:     │           └──  workstation in Component -> one Workstation
inv4 S:     │               └──  parts in Component -> some Product parts in Material -> no Product
inv4 S:     │                   └──  parts in Component -> some Product parts in Material -> no Product
inv4 C:     │                       └──  parts in Component -> some Product
inv4 C:     │                           └──  parts in Component -> some Product no Material.parts
inv4 B:     │                               └──  some Component.parts no Material.parts
inv4 S:     │                                   └──  parts in Component -> some Product parts in Material set -> no Product
inv4 S:     │                                       └──  parts in Component -> some Product parts in Material -> no Product
inv4 O:     │                                           └──  parts in Component -> some Product parts in Material -> one Product
inv4 T:     │                                               └──  parts in Component -> some Product parts in Material -> none Product
inv4 C:     │                                                   └──  parts in Component -> some Product
inv4 C:     │                                                       └──  parts in Component -> some Product no Material.parts
inv5 O:     │                                                           └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv6 U:     │                                                               └──  all c:Component | c not in c.parts
inv6 O:     │                                                                   └──  all c:Component | c not in c.*parts
inv6 U:     │                                                                       └──  all c:Component | c not in c.parts
inv6 O:     │                                                                           └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                               └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                                   └──  all c:Component | Dangerous in c.^parts => c in Dangerous
inv7 B:     │                                                                                       └──  all c:Component | c.^parts in Dangerous => c in Dangerous
inv7 U:     │                                                                                           └──  all c:Component | c.*parts in Dangerous => c in Dangerous
inv7 O:     │                                                                                               └──  all c:Component | some c.^parts & Dangerous => c in Dangerous
inv7 O:     │                                                                                                   └──  all c:Component | some c.^parts & Dangerous => c in Dangerous
inv8 O:     │                                                                                                       └──  all c:Dangerous | c.workstation.workers in Robot
inv9 U:     │                                                                                                           └──  Workstation in begin.*succ
inv9 C:     │                                                                                                               └──  Workstation in begin.*succ no end.succ all w:Workstation-end | one w.succ
inv10 B:    │                                                                                                                   └──  all c:Component | some c.workstation => some c.parts
inv10 U:    │                                                                                                                       └──  all c:Component | some c.workstation => some c.*parts
inv10 B:    │                                                                                                                           └──  all c:Component | some c.workstation => Component = c.*parts
inv10 B:    │                                                                                                                               └──  all c:Component | some c.workstation => Component = c.^parts
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
X9k8oyGXN9uBfpBDJ M:     │   └──  user added theme options. same as previous submission
inv1 E:     ├──   
inv1 C:     │   └──  all w : Worker | w in Human+Robot
inv2 S:     │       └──  all w1, w2 : Worker | all ws1,ws2: Worstation | ws1!=ws2 and w1 in ws1.worker and w2 in ws2.worker implies w1=w2
inv2 S:     │           └──  all w1, w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.worker and w2 in ws2.worker implies w1=w2
inv2 T:     │               └──  all w1, w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.Worker and w2 in ws2.Worker implies w1=w2
inv2 T:     │                   └──  all w1, w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.Worker and w2 in ws2.Worker implies w1=w2
inv2 T:     │                       └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.Worker and w2 in ws2.Worker implies w1=w2
inv2 T:     │                           └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.Worker and w2 in ws2.Worker implies w1=w2
inv2 B:     │                               └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1=w2
inv2 B:     │                                   └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1=w2 all w : Worker | w in Workstation.workers
inv2 B:     │                                       └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1=w2 all ws : Workstation | Worker in ws.workers
inv2 B:     │                                           └──  all ws : Workstation | Worker in ws.workers
inv2 U:     │                                               └──  all w : Worker | w in Workstation.workers
inv2 E:     │                                                   └──   
inv2 E:     │                                                       └──   
inv2 U:     │                                                           └──  all w : Worker | w in Workstation.workers
inv2 U:     │                                                               └──  Worker in Workstation.workers
inv2 U:     │                                                                   └──  all w : Worker | w in Workstation.workers
inv2 B:     │                                                                       └──  all w : Worker | all ws : Workstation | w in ws.workers
inv2 B:     │                                                                           └──  all ws : Workstation | all w : Worker | w in ws.workers
inv2 U:     │                                                                               └──  all ws : Workstation | some w : Worker | w in ws.workers
inv2 B:     │                                                                                   └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1=w2 all ws : Workstation | some w : Worker | w in ws.workers
inv2 U:     │                                                                                       └──  all ws : Workstation | some w : Worker | w in ws.workers
inv2 U:     │                                                                                           └──  all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | w in Workstation.workers
inv2 B:     │                                                                                               └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1=w2 all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | w in Workstation.workers
inv2 C:     │                                                                                                   └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | w in Workstation.workers
inv2 U:     │                                                                                                       └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2  all w : Worker | w in Workstation.workers
inv2 T:     │                                                                                                           └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 all ws : Workstation | some Worker in ws.workers all w : Worker | w in Workstation.workers
inv2 C:     │                                                                                                               └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 all ws : Workstation | some ws.workers all w : Worker | w in Workstation.workers
inv2 U:     │                                                                                                                   └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 some Workstation.workers all w : Worker | w in Workstation.workers
inv3 E:     │                                                                                                                       └──   
inv2 U:     │                                                                                                                           └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 some Workstation.workers all w : Worker | w in Workstation.workers
inv2 C:     │                                                                                                                               └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2 all ws : Workstation | some ws.workers all w : Worker | w in Workstation.workers
inv3 E:     │                                                                                                                                   └──   
inv3 C:     │                                                                                                                                       └──  all c : Component | one c.workstation
inv3 C:     │                                                                                                                                           └──  all c : Component | one c.workstation
inv4 C:     │                                                                                                                                               └──  all m : Material | no m.parts all c : Component | some c.parts
inv5 S:     │                                                                                                                                                   └──  all w : Workstation | (Robot in w.worker implies no Human in w.worker) and (Human in w.worker implies no Robot in w.worker)
inv5 T:     │                                                                                                                                                       └──  all w : Workstation | (Robot in w.workers implies no Human in w.workers) and (Human in w.workers implies no Robot in w.workers)
inv5 T:     │                                                                                                                                                           └──  all w : Workstation | (Robot in w.workers implies no(Human in w.workers)) and (Human in w.workers implies no(Robot in w.workers))
inv5 T:     │                                                                                                                                                               └──  all w : Workstation | Robot in w.workers implies no(Human in w.workers) all w : Workstation | Human in w.workers implies no(Robot in w.workers)
inv5 B:     │                                                                                                                                                                   └──  all w : Workstation | Robot in w.workers implies Human not in w.workers all w : Workstation | Human in w.workers implies Robot not in w.workers
inv5 B:     │                                                                                                                                                                       └──  all w : Workstation | Robot in w.workers implies Human not in w.workers all w : Workstation | Human in w.workers implies Robot not in w.workers
inv5 B:     │                                                                                                                                                                           └──  all w : Workstation | Robot in w.workers implies Human not in w.workers all w : Workstation | Human in w.workers implies Robot not in w.workers
inv4 C:     │                                                                                                                                                                               └──  all m : Material | no m.parts all c : Component | some c.parts
inv5 B:     │                                                                                                                                                                                   └──  all w : Workstation | Robot in w.workers implies Human not in w.workers all w : Workstation | Human in w.workers implies Robot not in w.workers
inv5 C:     │                                                                                                                                                                                       └──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not in w.workers all w : Workstation | all r : Robot | all h : Human | h in w.workers implies r not in w.workers
inv5 O:     │                                                                                                                                                                                           └──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not in w.workers all w : Workstation | all r : Robot | all h : Human | h in w.workers implies r not in w.workers all w : Workstation | w.workers=w.workers&Robot
inv5 O:     │                                                                                                                                                                                               └──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not in w.workers all w : Workstation | all r : Robot | all h : Human | h in w.workers implies r not in w.workers all w : Workstation | w.workers=w.workers&Robot or w.workers=w.workers&Human
inv5 O:     │                                                                                                                                                                                                   └──  all w : Workstation | w.workers=w.workers&Robot or w.workers=w.workers&Human
inv6 U:     │                                                                                                                                                                                                       └──  all c : Component | c not in c.parts
inv6 S:     │                                                                                                                                                                                                           └──  all c : Component | c not in c.parts+
inv6 S:     │                                                                                                                                                                                                               └──  all c : Component | c not in c.parts*
inv6 S:     │                                                                                                                                                                                                                   └──  all c : Component | c not in c.parts^
inv6 T:     │                                                                                                                                                                                                                       └──  all c : Component | c not in ^c.parts
inv6 C:     │                                                                                                                                                                                                                           └──  all c : Component | c not in c.^parts
inv6 C:     │                                                                                                                                                                                                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                                                                                                                                                                                                   └──  all c : Component | all d : Dangerous | d in c.^parts implies c in Dangerous
inv8 T:     │                                                                                                                                                                                                                                       └──  all d : Dangerous | Human not d.workstation.workers
inv7 O:     │                                                                                                                                                                                                                                           └──  all c : Component | all d : Dangerous | d in c.^parts implies c in Dangerous
inv7 O:     │                                                                                                                                                                                                                                               └──  all c : Component | all d : Dangerous | d in c.^parts implies c in Dangerous
inv8 C:     │                                                                                                                                                                                                                                                   └──  all d : Dangerous | no d.workstation.workers&Human
inv8 C:     │                                                                                                                                                                                                                                                       └──  all d : Dangerous | no d.workstation.workers&Human
inv9 B:     │                                                                                                                                                                                                                                                           └──  all b : begin | all e : end | e in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                               └──  all b : begin | all e : end | b!=e and e in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                                   └──  all b : begin | b not in Workstation.succ all b : begin | all e : end | b!=e and e in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                                       └──  all b : begin | b not in Workstation.succ all b : begin | all e : end | b!=e and e in b.^succ
inv9 S:     │                                                                                                                                                                                                                                                                           └──  all b : begin | b not in Workstation.succ all c : Component | all e : end | c in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                                               └──  all b : begin | b not in Workstation.succ all c : Component | all e : end | e in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                   └──  all b : begin | b not in Workstation.succ all c : Component | some e : end | e in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                       └──  all b : begin | b not in Workstation.succ all c : Component | some e : end | e in c.^succ and c not in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                           └──  all b : begin | b not in Workstation.succ all c : Component | c not in c.^succ all c : Component | some e : end | e in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                               └──  all b : begin | b not in Workstation.succ all c : Component | c not in c.^succ all c : Component | all e : end | e in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                   └──  all b : begin | b not in Workstation.succ all c : Component | c not in c.^succ all c : Component | all e : end | e in c.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                       └──  all b : begin | b not in Workstation.succ  all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                           └──  all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                               └──  all b : begin | all e : end | e != b all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                   └──  all b : begin | all e : end | e != b all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 S:     │                                                                                                                                                                                                                                                                                                                       └──  all ws : Workstation | ws&beguin or ws&end all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 S:     │                                                                                                                                                                                                                                                                                                                           └──  all ws : Workstation | ws in beguin implies ws not in end all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                               └──  all ws : Workstation | ws in begin implies ws not in end all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                   └──  all ws : Workstation | ws in begin implies ws not in end all ws : Workstation | ws in end implies ws not in begin all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                       └──  all ws : Workstation | ws=begin implies ws!=end all ws : Workstation | ws in end implies ws not in begin all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                           └──  all ws : Workstation | ws=begin implies ws!=end all ws : Workstation | ws = end implies ws != begin all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                               └──  all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | all e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                   └──  all b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | one e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                       └──  one b : begin | b not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | one e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | one e : end | e in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | end in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | end in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                       └──  begin != end begin not in Workstation.succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | end in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation | end in ws.^succ
inv9 S:     │                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ all ws : Workstation-begin | in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ all ws : Workstation-begin | ws in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ no end.succ all ws : Workstation-begin | ws in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ no end.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ   all ws : Workstation | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ no end.succ   all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ no end.succ  all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ no end.succ all ws : Workstation-begin | ws in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ no end.succ Workstation in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ one Workstation.workers
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ all ws : Workstation | one ws.succ
inv9 E:     │                                                                                                                                                                                                                                                                                                                                                                                                                                       └──   
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  all ws : Workstation | ws not in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                               └──  Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ all ws : Workstation | one ws.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  Workstation in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.^succ all ws : Workstation | one ws.succ
inv9 E:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                               └──   
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  all ws : Workstation | one ws.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  no end.succ    all ws : Workstation | one ws.succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  no end.succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ  all ws : Workstation-end | end in ws.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ  all ws : Workstation-end | end in ws.succ all ws : Workstation | one ws.succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ  all ws : Workstation-end | end in ws.succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.^succ all ws : Workstation-end | end in ws.succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.succ all ws : Workstation-end | end in ws.succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.succ all ws : Workstation-end | end in ws.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               └──  begin not in Workstation.succ no end.succ Workstation-begin in begin.^succ all ws : Workstation | ws not in ws.succ all ws : Workstation-end | end in ws.succ all ws : Workstation | one ws.succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  begin not in Workstation.succ  no end.succ  all ws : Workstation | one ws.succ  Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | one ws.succ  Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ begin != end
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | one ws.succ  Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ
inv9 B:     │└──  begin not in Workstation.succ  no end.succ    Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ
inv9 B:     │└──  begin not in Workstation.succ  no end.succ     Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ
inv9 U:     │└──  begin not in Workstation.succ  no end.succ     Workstation-begin in begin.^succ
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | one ws.succ   Workstation-begin in begin.^succ
inv9 C:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.succ
inv9 C:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ    all ws : Workstation-end | end in ws.succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 C:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  begin not in Workstation.succ  no end.succ  all ws : Workstation | lone ws.succ
inv9 U:     │└──  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 U:     │└──  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ
inv9 O:     │└──  no end.succ  all ws : Workstation | one ws.succ   Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ   Workstation-begin in begin.^succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ  Workstation-begin in begin.^succ    all ws : Workstation-end | end in ws.^succ
inv9 U:     │└──  no end.succ    Workstation-begin in begin.^succ    all ws : Workstation-end | end in ws.^succ
inv9 U:     │└──  begin not in Workstation.succ  no end.succ    Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.^succ
inv9 O:     │└──  begin not in Workstation.succ  no end.succ  all ws : Workstation | one ws.succ  Workstation-begin in begin.^succ  all ws : Workstation | ws not in ws.succ  all ws : Workstation-end | end in ws.^succ
inv9 C:     │└──  no end.succ  all ws : Workstation | lone ws.succ  Workstation-begin in begin.^succ
inv10 S:    │└──  all c1, c2 : Compoment | c1!=c2 and c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  all c1, c2 : Component | c1!=c2 and c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c1!=c2 and c2 in c1.^parts implies c2.workstation in c1.workstation.*succ
inv10 B:    │└──  all c1, c2 : Component | c1!=c2 and c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2.workstation in c1.workstation.^succ implies c2 in c1.^parts
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation in c1.workstation.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation in c1.workstation.^succ all c1, c2 : Component | c2.workstation in c1.workstation.^succ implies c2 in c1.^parts
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c1.workstation in c2.workstation.^succ all c1, c2 : Component | c1.workstation in c2.workstation.^succ implies c2 in c1.^parts
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts <=> c2.workstation in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts <=> c2.workstation not in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation not in c1.workstation.^succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation not in c1.workstation.*succ
inv10 B:    │└──  all c1, c2 : Component | c2 in c1.^parts implies c2.workstation not in c1.workstation.*succ
JRuva2F38QMTdzuDQ M:     │└──  user added theme options. same as previous submission
inv5 C:     │└──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not in w.workers
inv1 C:     ├──  Worker in (Robot+Human)
inv1 C:     │   └──  Worker in (Robot+Human)
inv2 C:     │       └──  all ws : Workstation | some (ws.workers)  all w : Worker | one (w.~workers)
inv2 U:     │           └──  some (Workstation.workers)  all w : Worker | one (w.~workers)
inv2 C:     │               └──  all ws : Workstation | some (ws.workers)  all w : Worker | one (w.~workers)
inv3 C:     │                   └──  all c : Component | one (c.workstation)
inv5 T:     │                       └──  all w : workstation | no (w.Robot & w.Human)
inv5 T:     │                           └──  all w : workstation | not (w.Robot & w.Human)
inv5 T:     │                               └──  all w : workstation | no (w.Robot & w.Human)
inv4 C:     │                                   └──  all m : Material | no (m.parts) all c : Component |some (c.parts)
inv6 T:     │                                       └──  all w : workstation | w.Robot
inv5 E:     │                                           └──   
inv6 S:     │                                               └──  all w : workstation | w.works.Human
inv6 T:     │                                                   └──  all w : workstation | w.workers.Human
inv5 E:     │                                                       └──   
inv5 T:     │                                                           └──  all w : workstation | no (w.workers.Human & w.workers.Robot)
inv5 T:     │                                                               └──  all w : workstation | w.workers in Human or w.workers in Robot
inv5 T:     │                                                                   └──  all w : workstation | (w.workers in Human) or (w.workers in Robot)
inv5 T:     │                                                                       └──  all w : workstation | (w.workers in Human)
inv5 O:     │                                                                           └──  all w : Workstation | (w.workers in Human)
inv5 O:     │                                                                               └──  all w : Workstation | (w.workers in Human) or (w.workers in Robot)
inv5 T:     │                                                                                   └──  all w : Workstation | no (w.workers.Human & w.workers.Robot)
inv5 S:     │                                                                                       └──  all w : Workstation | w.wokers not in (Robot + Human)
inv5 B:     │                                                                                           └──  all w : Workstation | w.workers not in (Robot + Human)
inv5 B:     │                                                                                               └──  all w : Workstation | w.workers not in (Robot & Human)
inv5 C:     │                                                                                                   └──  no (Robot.~workers & Human.~workers)
inv6 C:     │                                                                                                       └──  all c : Component | c not in c.^(parts)
inv6 C:     │                                                                                                           └──  all c : Component | c not in c.^(parts)
inv7 B:     │                                                                                                               └──  all c : Component | c.^(parts) in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                   └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv7 B:     │                                                                                                                       └──  all c : Component | c.^(parts) in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                           └──  all c : Component , p :  c.^(parts) | p in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                               └──  all c : Component | c.^(parts) in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                                   └──  all c : Component , p : c.^(parts) | p in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                                       └──  all p : Product | p in Dangerous implies (parts.p) in Dangerous
inv7 T:     │                                                                                                                                           └──  all p : Product | p in Dangerous implies (parts).^p in Dangerous
inv7 O:     │                                                                                                                                               └──  all p : Product | p in Dangerous implies p.^(~parts) in Dangerous
inv8 S:     │                                                                                                                                                   └──  all c : Component | c in Dangerous implies (c.workstation).works not in Human
inv7 O:     │                                                                                                                                                       └──  all p : Product | p in Dangerous implies p.^(~parts) in Dangerous
inv8 B:     │                                                                                                                                                           └──  all c : Component | c in Dangerous implies (c.workstation).workers not in Human
inv8 B:     │                                                                                                                                                               └──  all c : Component | (Dangerous.workstation).workers not in Human
inv8 B:     │                                                                                                                                                                   └──  all d : Dangerous | d.workstation.workers not in Human
inv8 B:     │                                                                                                                                                                       └──  all d : Dangerous | (d.workstation).workers not in Human
inv8 B:     │                                                                                                                                                                           └──  all d : Dangerous | d in Component  implies (d.workstation).workers not in Human
inv8 T:     │                                                                                                                                                                               └──  all c : Component.Dangerous | c in Dangerous implies (c.workstation).workers not in Human
inv8 B:     │                                                                                                                                                                                   └──  all c : Component | c in Dangerous implies (c.workstation).workers not in Human
inv9 S:     │                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv8 B:     │                                                                                                                                                                                           └──  all c : Component | c in Dangerous implies (c.workstation).workers not in Human
inv9 C:     │                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 O:     │                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation in w.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 O:     │                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                           └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 S:     │                                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv9 S:     │                                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv9 S:     │                                                                                                                                                                                                                           └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 T:     │                                                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                                                           └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 B:     │                                                                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                                                                           └──  all w : Workstation | w in begin implies Workstation-{w
inv9 U:     │                                                                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                           └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv9 C:     │                                                                                                                                                                                                                                                                                       └──  all w : Workstation | w in begin implies Workstation-{w
inv10 S:    │                                                                                                                                                                                                                                                                                           └──  all c: Components | (c.^(~parts)).workstation in (c.workstation).^(succ)
inv9 C:     │                                                                                                                                                                                                                                                                                               └──  all w : Workstation | w in begin implies Workstation-{w
inv10 B:    │                                                                                                                                                                                                                                                                                                   └──  all c: Component| (c.^(~parts)).workstation in (c.workstation).^(succ)
inv1 T:     ├──  all w : Worker | w in (Human || Robot)
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv2 U:     │           └──  all w : Workstation | some w.workers
inv2 C:     │               └──  all w : Workstation | some w.workers and all w : Worker | one workers.w
inv2 C:     │                   └──  all w : Workstation | some w.workers and all w : Worker | one workers.w
inv3 C:     │                       └──  all c : Component | one c.workstation
inv4 E:     │                           └──   
inv3 C:     │                               └──  all c : Component | one c.workstation
inv4 S:     │                                   └──  all c : Component | some c.partd and all m : Material | no m.parts
inv4 U:     │                                       └──  all c : Component | some c.parts and all m : Material | no m.parts
inv4 T:     │                                           └──  all c : Component, m : Material, p : Product | some p in c.parts and no p in m.parts
inv4 T:     │                                               └──  all c : Component, m : Material, p : Product | some p in c.parts and p not in m.parts
inv4 T:     │                                                   └──  all c : Component, m : Material, p : Product | (some p in c.parts) and (p not in m.parts)
inv4 T:     │                                                       └──  all c : Component, m : Material, p : Product | (some p in c.parts) and (no p in m.parts)
inv4 S:     │                                                           └──  all c : Component, m : Material, p : Product |
inv4 C:     │                                                               └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv4 C:     │                                                                   └──  (all c : Component | some p : Product | p in c.parts) and (all m : Material | no p : Product | m->p in parts)
inv4 C:     │                                                                       └──  (all c : Component | some p : Product | p in c.parts) and (all m : Material | no p : Product | p in m.parts)
inv5 B:     │                                                                           └──  all w : Workstation, ww : w.workers | ww in Human or ww in Robot
inv5 O:     │                                                                               └──  all w : Workstation | w.^(workers) in Human or w.^(workers) in Robot
inv5 O:     │                                                                                   └──  all w : Workstation | w.^(workers) in Human or w.^(workers) in Robot
inv5 O:     │                                                                                       └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 T:     │                                                                                           └──  all w : Workstation | w.workers in (Human || Robot)
inv5 O:     │                                                                                               └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 C:     │                                                                                                   └──  all c : Component | c not in c.^(parts)
inv7 T:     │                                                                                                       └──  all c : Component | some c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                           └──  all c : Component | (some c.parts in Dangerous) implies c in Dangerous
inv7 T:     │                                                                                                               └──  all c : Component | (some c.^(parts) in Dangerous) implies c in Dangerous
inv7 O:     │                                                                                                                   └──  all c : Component, p : Product | p in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                       └──  all c : Component, p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv7 O:     │                                                                                                                           └──  all c : Component, p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 B:     │                                                                                                                               └──  all c : Component | c.workstation.workers not in Human
inv8 B:     │                                                                                                                                   └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 C:     │                                                                                                                                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                           └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                                                                                                               └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) and all w : Workstation | w not in w.^(succ) and all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                   └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                       └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                           └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                               └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv1 S:     ├──  all p : Worker implies p : Human | p : Robot
inv1 T:     │   └──  all p : Worker implies p in Human | p in Robot
inv1 S:     │       └──  all p : Workers implies p in Human | p in Robot
inv1 S:     │           └──  all p in Workers implies p in Human | p in Robot
inv1 C:     │               └──  Worker = Human + Robot
inv1 C:     │                   └──  Worker in Human + Robot
inv1 C:     │                       └──  all w:Worker | w in Human + Robot
inv1 T:     │                           └──  all w:Worker | w in Human or Robot
inv1 C:     │                               └──  all w:Worker | w in Human or w in Robot
inv1 C:     │                                   └──  no Worker - Robot - Human
inv2 U:     │                                       └──  workers in Workstation one -> Worker
inv2 S:     │                                           └──  all w:Workers | one workers.w all w:Workstation | some w.workers
inv2 C:     │                                               └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv3 T:     │                                                   └──  all c:Component | one c.Workstation
inv3 T:     │                                                       └──  all c:Component | one c.Workstation
inv3 C:     │                                                           └──  all c:Component | one c.workstation
inv2 U:     │                                                               └──  Workstation = workers.Worker
inv2 C:     │                                                                   └──  all w:Worker | one workers.w  Workstation = workers.Worker
inv4 S:     │                                                                       └──  all c:Component | some p:Product
inv4 S:     │                                                                           └──  all c:Component | some p:Product
inv3 T:     │                                                                               └──  all c:Component | one c.Workstation
inv3 C:     │                                                                                   └──  all c:Component | one c.workstation
inv4 C:     │                                                                                       └──  all c:Component | some c.parts all m:Material | m.parts = none
inv4 C:     │                                                                                           └──  parts in Component -> some Product
inv4 C:     │                                                                                               └──  Component = parts.Product
inv5 S:     │                                                                                                   └──  all w:Workstation, h:Human , r:Robot | h not in w.Workers or r not in w.Workers
inv5 C:     │                                                                                                       └──  all w:Workstation, h:Human , r:Robot | h not in w.workers or r not in w.workers
inv5 O:     │                                                                                                           └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                                                                                               └──  no workers.Human & workers.Robot
inv5 C:     │                                                                                                                   └──  no workers.Human & workers.Robot
inv6 S:     │                                                                                                                       └──  all c:Component : c not in c.^parts
inv6 C:     │                                                                                                                           └──  all c:Component | c not in c.^parts
inv6 O:     │                                                                                                                               └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                                                                                   └──  all c:Component | c not in c.^parts
inv6 U:     │                                                                                                                                       └──  not iden in ^parts
inv6 T:     │                                                                                                                                           └──  not iden & ^parts
inv6 O:     │                                                                                                                                               └──  no iden & ^parts
inv7 O:     │                                                                                                                                                   └──  parts.Dangerous in Dangerous
inv7 C:     │                                                                                                                                                       └──  all c:Component | some c.parts & Dangerous implies c in Dangerous
inv8 S:     │                                                                                                                                                           └──  all c:Component, ws:c.worstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 S:     │                                                                                                                                                               └──  all c:Component, ws:c.Worstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 T:     │                                                                                                                                                                   └──  all c:Component, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C:     │                                                                                                                                                                       └──  all c:Component, ws:c.workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C:     │                                                                                                                                                                           └──  all c:Dangerous, ws:c.workstation, w:ws.workers | w not in Human
inv8 C:     │                                                                                                                                                                               └──  all c:Dangerous, w:c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                                                                   ├──  no Dangerous.workstation.workers & Human
inv9 T:     │                                                                                                                                                                                   │   └──  all w:Workstation-end | one w.succ no end.succ begin.*succ
inv9 U:     │                                                                                                                                                                                   │       └──  all w:Workstation-end | one w.succ no end.succ end in begin.*succ
inv9 C:     │                                                                                                                                                                                   │           └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
JHkm9wkYHFBxpnzJ2 M:     │                                                                                                                                                                                   └──  user added theme options. same as previous submission
inv5 S:     ├──  sll w:Workstation | w.workers in Human or w.workers in Robot
inv5 O:     │   └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 S:     │       └──  all w:Workstation | no w:workers & Robot or no w.workers & Human
inv5 C:     │           └──  all w:Workstation | no w.workers & Robot or no w.workers & Human
inv5 U:     │               └──  all w:Workstation | no Human & Robot
inv6 S:     │                   └──  Components not in *(components.Parts)
inv6 T:     │                       └──  Component not in *(Component.parts)
inv6 T:     │                           └──  Component not in *(parts.Component)
inv6 S:     │                               └──  Component not in Compoent.^(parts)
inv6 B:     │                                   └──  Component not in Component.^(parts)
inv6 C:     │                                       └──  all c:Component | c not in c.^(parts)
inv6 O:     │                                           └──  no iden & ^parts
inv7 B:     │                                               └──  all d:Dangerous | Dangerous in d.^parts
inv7 B:     │                                                   └──  all d:Dangerous | Dangerous = d.^parts
inv7 B:     │                                                       └──  all d:Dangerous | all p:Product | p in d.^parts => p in Dangerous
inv7 S:     │                                                           └──  all c:Components | some Dangerous & c.^parts => c in Dangerous
inv7 O:     │                                                               └──  all c:Component | some Dangerous & c.^parts => c in Dangerous
inv9 T:     │                                                                   └──  begin.^succ.end
inv9 T:     │                                                                       └──  begin.^succ.end in Workstation
inv7 O:     │                                                                           └──  ^parts.Dangerous in Dangerous
inv9 B:     │                                                                               └──  all w:Workstation | w in begin.^succ & ^succ.end
inv9 B:     │                                                                                   └──  all w:Workstation | w in begin.^succ & ^succ.end and begin != end
inv9 S:     │                                                                                       └──  aWorkstation in begin.^succ & ^succ.end
inv9 B:     │                                                                                           └──  Workstation in begin.^succ & ^succ.end
inv9 U:     │                                                                                               └──  Workstation in begin.*succ & *succ.end
inv9 U:     │                                                                                                   └──  Workstation in begin.*succ succ in Workstation lone -> lone Workstation
inv9 B:     │                                                                                                       └──  Workstation in begin.*succ succ in Workstation lone -> lone Workstation no succ.end
inv9 C:     │                                                                                                           └──  Workstation in begin.*succ succ in Workstation lone -> lone Workstation no end.succ
inv9 U:     │                                                                                                               └──  all w:Workstation-begin | one succ.w no end.succ Workstation in begin.*succ
inv9 C:     │                                                                                                                   └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv1 E:     ├──   
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 E:     │       └──   
inv1 C:     │           └──  all w : Worker | w in Human or w in Robot
inv2 C:     │               └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │                   └──  all c : Component | one c.workstation
inv4 C:     │                       └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 S:     │                           └──  all w : Workstation | w.works in Human or w.works in Robot
inv5 O:     │                               └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 O:     │                                   └──  no (^parts & iden)
inv6 O:     │                                       └──  no (*parts & iden)
inv6 O:     │                                           └──  no (^parts & iden)
inv6 O:     │                                               └──  no (*parts & iden)
inv6 O:     │                                                   └──  no (^parts & iden)
inv7 C:     │                                                       └──  all c : Component | some (c.parts & Dangerous) => c in Dangerous
inv8 O:     │                                                           └──  all c : Component | c in Dangerous => c.workstation.workers in Robot
inv8 B:     │                                                               └──  all c : Component | c in Dangerous => c.workstation.workers not in Human
inv9 B:     │                                                                   └──  end in begin.^succ
inv9 U:     │                                                                       └──  end in begin.*succ
inv9 U:     │                                                                           └──  end in begin.*succ no (^succ & iden)
inv10 C:    │                                                                               └──  all c : Component | c.parts.workstation in (^succ).(c.workstation)
inv10 C:    │                                                                                   └──  all c : Component | c.parts.workstation in (^succ).(c.workstation)
inv9 B:     │                                                                                       └──  Workstation in begin.^succ
inv9 U:     │                                                                                           └──  Workstation in begin.*succ
inv9 U:     │                                                                                               └──  begin.*succ = Workstation
inv9 T:     │                                                                                                   └──  all w : Workstation | no succ.w <=> w = begin all w : workstation | no w.succ <=> w = end
inv9 T:     │                                                                                                       └──  all w : Workstation | no succ.w <=> w = begin all w : workstation | no w.succ <=> w = end
E8c2jbvMGuFdDDkHt N:     │                                                                                                           └──  user added extra characters to pred name
inv9 T:     │                                                                                                               └──  all w : Workstation | no succ.w <=> w in begin all w : workstation | no w.succ <=> w in end
inv9 U:     │                                                                                                                   └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end
inv9 O:     │                                                                                                                       └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | w in begin.^succ
inv9 U:     │                                                                                                                           └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | w in begin.*succ
inv9 O:     │                                                                                                                               └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | w in begin.^succ
inv9 O:     │                                                                                                                                   └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | w in begin.^succ no (^succ & iden)
inv9 U:     │                                                                                                                                       └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation - begin | w in begin.^succ no (^succ & iden)
inv9 C:     │                                                                                                                                           └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation - begin | w in begin.^succ all w : Workstation | lone w.succ no (^succ & iden)
inv9 C:     │                                                                                                                                               └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | lone w.succ no (^succ & iden)
inv9 U:     │                                                                                                                                                   └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | lone w.succ
inv9 C:     │                                                                                                                                                       └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | lone w.succ no (^succ & iden)
inv9 U:     │                                                                                                                                                           └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | lone w.succ
inv9 C:     │                                                                                                                                                               └──  all w : Workstation | no succ.w <=> w in begin all w : Workstation | no w.succ <=> w in end all w : Workstation | lone w.succ no (^succ & iden)
inv9 U:     │                                                                                                                                                                   └──  all w : Workstation | lone w.succ no (^succ & iden)
inv9 C:     │                                                                                                                                                                       └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) all w : Workstation | lone w.succ no (^succ & iden)
inv9 C:     │                                                                                                                                                                           └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) and lone w.succ no (^succ & iden)
inv9 C:     │                                                                                                                                                                               └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
S3EeYkkGghbHvPXpB M:     │                                                                                                                                                                                   └──  user added theme options. same as previous submission
inv9 C:     │                                                                                                                                                                                       └──  all w : Workstation | (no succ.w <=> w in begin) and (no w.succ <=> w in end) and lone w.succ and w not in w.^succ
inv5 O:     ├──  all w : Workstation | w.workers in Human or w.workers in Robot
inv2 C:     ├──  all ws : Workstation | some (ws.workers)  all w : Worker | one (workers.w)
inv1 S:     ├──  all w : Workers | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv2 U:     │           └──  all ws : Workstation | some w : Worker | w in ws.workers
inv2 C:     │               └──  all ws : Workstation | some w : Worker | w in ws.workers all w :  Worker | one ws : Workstation | w in ws.workers
inv1 S:     ├──  Workers in Human+Robot
inv1 C:     │   └──  Worker in Human+Robot
inv2 S:     │       └──  Workstation in workers.Worker all w : Worker, one w : Workstation | w in ww.workers
inv2 S:     │           └──  Workstation in workers.Worker all w : Worker | one w : Workstation | w in ww.workers
inv2 C:     │               └──  Workstation in workers.Worker all w : Worker | one ww : Workstation | w in ww.workers
inv3 C:     │                   └──  all c : Component | one w : Workstation | c.workstation = w
inv5 E:     │                       └──   
inv5 E:     │                           └──   
inv5 E:     │                               └──   
inv5 E:     │                                   └──   
inv5 E:     │                                       └──   
inv5 E:     │                                           └──   
inv4 S:     │                                               └──  all c : Component | no lone c.parts all m : Material | no (m.parts)-m
inv5 E:     │                                                   └──   
inv4 U:     │                                                       └──  all c : Component | some c.parts all m : Material | no (m.parts)-m
inv4 C:     │                                                           └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 S:     │                                                               └──  all w : Wortkstation | w.workers in Human or w.workers in Robot
inv5 O:     │                                                                   └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 O:     │                                                                       └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 O:     │                                                                           └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 C:     │                                                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                                                   └──  all c : Component | (some c.^parts & Dangerous) iff (c in Dangerous)
inv7 O:     │                                                                                       └──  all c : Component | (some c.^parts & Dangerous) implies (c in Dangerous)
inv8 O:     │                                                                                           └──  all d : Dangerous | d.workstation.workers in Robot
inv9 S:     │                                                                                               └──  Workstation in begin^succs and no end.succs
inv9 T:     │                                                                                                   └──  Workstation in begin^succ and no end.succ
inv9 S:     │                                                                                                       └──  (Workstation in begin*succ) and (no end.succ)
inv9 S:     │                                                                                                           └──  (Workstation in begin*succ) and (no end.succ)
inv9 U:     │                                                                                                               └──  (Workstation in begin.*succ) and (no end.succ)
inv9 U:     │                                                                                                                   └──  all w : Workstation | w not in w.^succ (Workstation in begin.*succ) and (no end.succ)
inv9 O:     │                                                                                                                       └──  all w : Workstation | one w.succ and w not in w.succ (Workstation in begin.*succ) and (no end.succ)
inv8 O:     │                                                                                                                           └──  all d : Dangerous | d.workstation.workers in Robot
inv8 O:     │                                                                                                                               └──  all d : Dangerous | d.workstation.workers in Robot
inv9 C:     │                                                                                                                                   └──  all w : Workstation-end | one w.succ and w not in w.succ (Workstation in begin.*succ) and (no end.succ)
inv10 S:    │                                                                                                                                       └──  all c : Component, p : c.parts | c.workstation in p.workstation.^succs
inv10 B:    │                                                                                                                                           └──  all c : Component, p : c.parts | c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                                                               └──  all c : Component, p : c.parts | c.workstation in p.workstation.*succ
inv10 B:    │                                                                                                                                                   └──  all c : Component, p : c.parts | c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                                                                       └──  all c : Component, p : c.parts-Material | c.workstation in p.workstation.^succ
6jSC938ZSgzsNQKyb M:     │                                                                                                                                                           └──  user added theme options. same as previous submission
inv10 B:    ├──  all c:Component | c.workstation in c.parts.workstation.^succ
inv10 B:    │   └──  all c:Component | c.workstation in Component.parts.workstation.^succ
inv10 B:    │       └──  all c:Component | c.workstation in Component.parts.workstation.*succ
inv10 B:    │           └──  all c:Component | c.workstation in Component.parts.workstation.^succ
inv10 B:    │               └──  all c:Component | c.workstation in ((Component.parts).workstation).^succ
inv10 B:    │                   └──  all c:Component | c.workstation in Component.parts.workstation.^succ
inv10 T:    │                       └──  all c:Component | c.workstation in parts.workstation.^succ
inv10 B:    │                           └──  all c:Component | c.workstation in Product.parts.workstation.^succ
inv10 B:    │                               └──  all c:Component | c.workstation in (Product.^parts & Component).workstation.^succ
inv10 B:    │                                   └──  all c:Component | c.workstation in (Product.*parts & Component).workstation.^succ
inv10 B:    │                                       └──  all c:Component | c.workstation in (Product.^parts & Component).workstation.^succ
inv10 B:    │                                           └──  all c:Component | c.workstation in (c.parts & Component).workstation.^succ
inv10 B:    │                                               └──  all c:Component | c.workstation in (c.^parts & Component).workstation.^succ
inv10 B:    │                                                   └──  all c:Component | c.workstation in (c.parts & Component).workstation.^succ
inv10 B:    │                                                       └──  all c:Component | c.workstation in (c.^parts & Component).workstation.^succ
inv10 T:    │                                                           └──  all c:Component | c.workstation in (c.^parts & Component).workstation.^succ || no Component in (c.^parts & Component).workstation.^succ
inv10 B:    │                                                               └──  all c:Component | c.workstation in (c.^parts & Component).workstation.^succ || no (c.^parts & Component).workstation.^succ
inv10 B:    │                                                                   └──  all c:Component | c.workstation in (c.^parts & Component).workstation.*succ || no (c.^parts & Component).workstation.*succ
inv10 S:    │                                                                       └──  all c:Component | all part:c.parts | part is Material or c.workstation in part.workstation.succ
inv10 S:    │                                                                           └──  all c:Component | all part:(c.parts) | part is Material or c.workstation in part.workstation.succ
inv10 S:    │                                                                               └──  all c:Component | all part:c.parts | part is Material or c.workstation in part.workstation.succ
inv10 S:    │                                                                                   └──  all c:Component | part is Material or c.workstation in part.workstation.succ
inv10 T:    │                                                                                       └──  all c:Component | all p:c.parts | p is Material or c.workstation in p.workstation.succ
inv10 B:    │                                                                                           └──  all c:Component | all p:c.parts | p in Material or c.workstation in p.workstation.succ
inv10 B:    │                                                                                               └──  all c:Component | all p:c.parts | p in Material or c.workstation in p.workstation.succ
inv1 C:     ├──  all w : Worker | w in Human + Robot
inv1 C:     │   └──  Worker in Human + Robot
inv2 C:     │       └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv2 C:     │           └──  workers in Workstation one -> some Worker
inv3 C:     │               └──  all c : Component | one c.workstation
inv4 C:     │                   └──  parts in Component -> some Product
inv4 T:     │                       └──  Component -> parts.Product
inv4 C:     │                           └──  Component = parts.Product
inv5 O:     │                               └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                   └──  all w : Workstation| some w.workers & Robot => no w.workers & Human
inv5 T:     │                                       └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 T:     │                                           └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 T:     │                                               └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 T:     │                                                   └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 T:     │                                                       └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 T:     │                                                           └──  all w : Workstation | no w.workers & Robot or no w.workers in Human
inv5 C:     │                                                               └──  all w : Workstation | no w.workers & Robot or no w.workers & Human
inv6 C:     │                                                                   └──  all c : Component | c not in c.^parts
inv6 O:     │                                                                       └──  no iden & ^parts
inv7 O:     │                                                                           └──  all c : Component | some Dangerous & c.^parts => c in Dangerous
inv7 O:     │                                                                               └──  ^parts.Dangerous in Dangerous
inv9 C:     │                                                                                   └──  succ in Workstation lone -> lone Workstation no end.succ Workstation in begin.*succ
inv9 C:     │                                                                                       └──  all w : Workstation - end | one w.succ no end.succ Workstation in begin.*succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 O:     │   └──  all s : Workstation | some w : Worker | w in s.workers all s : Worker | some w : Workstation | s in workers.s
inv2 O:     │       └──  all s : Workstation | some w : Worker | w in s.workers all s : Worker | some w : Workstation | s in workers.w
inv2 O:     │           └──  all s : Workstation | some w : Worker | w in s.workers all s : Worker | some w : Workstation | s->w in workers
inv2 U:     │               └──  all s : Workstation | some w : Worker | w in s.workers all w : Worker | some s : Workstation | s->w in workers
inv2 U:     │                   └──  all s : Workstation | some w : Worker | w in s.workers all w : Worker | some s : Workstation | s in workers.w
inv2 U:     │                       └──  all s : Workstation | some w : Worker | w in s.workers all w : Worker | some s : Workstation | w in s.workers
inv2 C:     │                           └──  all s : Workstation | some w : Worker | w in s.workers all w : Worker | one s : Workstation | s in workers.w
inv2 C:     │                               └──  all s : Workstation | some w : Worker | w in s.workers all w : Worker | one s : Workstation | w in s.workers
inv3 C:     │                                   └──  all c : Component | one w : Workstation | w in c.workstation
inv4 U:     │                                       └──  all c : Component | some p : Product | p in c.parts
inv4 S:     │                                           └──  all c : Component | some p : Product | p in c.parts all m : Material | all p : Prodcut | p not in m.parts
inv4 C:     │                                               └──  all c : Component | some p : Product | p in c.parts all m : Material | all p : Product | p not in m.parts
inv5 B:     │                                                   └──  all s : Workstation | some w1, w2 : Worker | w1 in s.workers and w2 in s.workers and w1 in Human implies w2 not in Robot
inv5 C:     │                                                       └──  all s : Workstation | all w1, w2 : Worker | w1 in s.workers and w2 in s.workers and w1 in Human implies w2 not in Robot
inv6 C:     │                                                           └──  all c : Component | c not in c.^parts
inv7 S:     │                                                               └──  all c1, c2 : Component | c2 in Dangerous | c2 in c.^parts implies c2 in Dangerous
inv7 S:     │                                                                   └──  all c1, c2 : Component | c2 in Dangerous and c2 in c.^parts implies c2 in Dangerous
inv7 U:     │                                                                       └──  all c1, c2 : Component | c2 in Dangerous and c2 in c1.^parts implies c2 in Dangerous
inv7 U:     │                                                                           └──  all c1 : Component | some c2 : Component | c2 in Dangerous and c2 in c1.^parts implies c2 in Dangerous
inv7 U:     │                                                                               └──  all c1 : Component | some c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c2 in Dangerous
inv7 U:     │                                                                                   └──  all c1 : Component | all c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c2 in Dangerous
inv7 O:     │                                                                                       └──  all c1 : Component | all c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c1 in Dangerous
inv7 B:     │                                                                                           └──  all c1 : Component | all c2 : Component | c2 in Dangerous and c2 in c1.^parts implies c1 in Dangerous
inv7 O:     │                                                                                               └──  all c1 : Component | all c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c1 in Dangerous
inv7 U:     │                                                                                                   └──  all c1 : Component | some c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c1 in Dangerous
inv7 O:     │                                                                                                       └──  all c1 : Component | all c2 : Product | c2 in Dangerous and c2 in c1.^parts implies c1 in Dangerous
inv8 B:     │                                                                                                           └──  all c : Component | c in Dangerous implies some r : Robot | some w : Workstation | r in w.workers and w in c.workstation
inv9 S:     │                                                                                                               └──  all w : Worksation | one wb, we : Worksation | wb in w.^workstation and we in w.^workstation
inv9 S:     │                                                                                                                   └──  all w : Worksation | one wb, we : Workstation | wb in w.^workstation and we in w.^workstation
inv9 O:     │                                                                                                                       └──  all w : Workstation | one wb, we : Workstation | wb in w.^workstation and we in w.^workstation
inv9 O:     │                                                                                                                           └──  all w : Workstation | one wb, we : Workstation | wb in w.~^workstation and we in w.^workstation
inv9 S:     │                                                                                                                               └──  all w : Workstation | one wb, we : Workstation | wb in w~.^workstation and we in w.^workstation
inv9 B:     │                                                                                                                                   └──  all w : Workstation | one wb, we : Workstation | wb in w.^succ and we in w.^succ
inv9 B:     │                                                                                                                                       └──  all w : Workstation | one wb, we : Workstation | w in wb.^succ and we in w.^succ
inv9 B:     │                                                                                                                                           └──  all w : Workstation | one wb, we : Workstation | w in wb.^succ and we in w.^succ and wb!=we
inv9 B:     │                                                                                                                                               └──  all w : Workstation | one wb, we : Workstation | wb != w and w in wb.^succ and we in w.^succ and wb!=we
inv9 O:     │                                                                                                                                                   └──  all w : Workstation | all wb, we : Workstation | wb != w and w in wb.^succ and we in w.^succ and wb!=we
inv9 S:     │                                                                                                                                                       └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Worksation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                           └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one w.succ
inv9 B:     │                                                                                                                                                               └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | we in w.succ and we in end
inv9 U:     │                                                                                                                                                                   └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | we in w.^succ and we in end
inv9 S:     │                                                                                                                                                                       └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | some ws : Worksation| we in w.^succ and we in end and ws in w.succ
inv9 U:     │                                                                                                                                                                           └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | some ws : Workstation| we in w.^succ and we in end and ws in w.succ
inv9 U:     │                                                                                                                                                                               └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | some ws : Workstation| we in w.^succ and we in end and ws in w.succ and w != we
inv9 O:     │                                                                                                                                                                                   └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | some ws : Workstation| we in w.^succ and we in end and ws in w.succ and we in ws.^succ and w != we
inv9 O:     │                                                                                                                                                                                       └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one we : Workstation | some ws : Workstation| we in w.^succ and we in end and ws in w.succ and we in ws.^succ and w != we and ws != we and w != ws
inv9 C:     │                                                                                                                                                                                           └──  all w, wb : Workstation | wb in begin and w!=wb implies w in wb.^(succ) all w : Workstation | w not in w.^succ  all w : Workstation | w not in end implies one w.succ
YPrPBSAoAxrg5qhEp N:     │                                                                                                                                                                                               └──  user added extra characters to pred name
XNrYSBDJA7r3wG8EE N:     │                                                                                                                                                                                                   └──  user added extra characters to pred name
Jig5s6JYZkMLZth9S N:     │                                                                                                                                                                                                       └──  user added extra characters to pred name
inv10 S:    │                                                                                                                                                                                                           └──  all c : Component | all p : Component | all w, wa : Workstation | w in c.worksation and p in c.^parts and wa in p.workstation implies w in wa.^succ
inv10 B:    │                                                                                                                                                                                                               └──  all c : Component | all p : Component | all w, wa : Workstation | w in c.workstation and p in c.^parts and wa in p.workstation implies w in wa.^succ
inv10 B:    │                                                                                                                                                                                                                   └──  all c : Component | all p : Product | all w, wa : Workstation | w in c.workstation and p in c.^parts and wa in p.workstation implies w in wa.^succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 U:     │   └──  all w : Workstation | some t : Worker | w->t in workers
inv2 U:     │       └──  all w : Workstation | some t : Worker | w->t in workers all t : Worker | some w : Workstation | w->t in workers
inv2 B:     │           └──  all w : Workstation | all t : Worker | w->t in workers
inv2 U:     │               └──  all w : Workstation | some t : Worker | w->t in workers and all t : Worker | some w : Workstation | w->t in workers
inv2 C:     │                   └──  (all w : Workstation | some t : Worker | w->t in workers) and (all t : Worker | one w : Workstation | w->t in workers)
inv3 C:     │                       └──  all c : Component | one w : Workstation | c->w in workstation
inv4 C:     │                           └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | all p : Product | m->p not in parts)
inv5 C:     │                               └──  all h : Human | all r : Robot | all w : Workstation | (w->h in workers implies w->r not in workers) or (w->r in workers implies w->h not in workers)
inv6 S:     │                                   └──  all a,b : Component | a=b implies a->b not in partes
inv6 U:     │                                       └──  all a,b : Component | a=b implies a->b not in parts
inv6 S:     │                                           └──  all a,b : Component | a==b implies a->b not in parts
inv6 U:     │                                               └──  all a,b : Component | a=b implies a->b not in parts
inv6 U:     │                                                   └──  all c : Component | all p : Product | p->c in parts implies p!=c
inv7 C:     │                                                       └──  all d : Dangerous | all c : Component | c->d in parts implies c in Dangerous
inv6 U:     │                                                           └──  all p : Product | all m : Material | all c : Component | (p->m in parts implies p not in Component) or (p->c in parts implies p not in Material)
inv6 U:     │                                                               └──  all a : Component | all b : Component | a->b in parts implies b->a not in parts
inv6 U:     │                                                                   └──  all a : Component | all b : Component | (a->b in parts implies b->a not in parts) and (b->a in parts implies a->b not in parts)
inv6 U:     │                                                                       └──  all a : Component | all b : Component | a=b implies (a->b not in parts and b->a not in parts)
inv8 S:     │                                                                           └──  all c : Component | some d : Dangerous | c->d in parts implies (c->z in workers and z in Robot)
inv8 B:     │                                                                               └──  all c : Component | some d : Dangerous | c->d in parts implies (some w : Worker | c->w in workers and w in Robot)
inv8 B:     │                                                                                   └──  all c : Component | some d : Dangerous | c->d in parts implies (all w : Worker | c->w in workers implies w in Robot)
inv9 B:     │                                                                                       └──  all w : Workstation | w in begin implies (some k : Workstation | w->k in succ)
inv9 B:     │                                                                                           └──  all w : Workstation | w in begin implies (some k : Workstation | w->k in succ and k in end)
inv9 B:     │                                                                                               └──  all w : Workstation | (w in begin implies (some k : Workstation | w->k in succ and k in end)) or (w in begin and w in end)
inv9 B:     │                                                                                                   └──  all w : Workstation | w in begin implies (some k : Workstation | w->k in succ and (k in end or (k not in end and k not in begin)))
inv1 C:     ├──  Worker = Human + Robot
inv1 C:     │   └──  Worker in Human + Robot
inv1 C:     │       └──  all w:Worker | w in Human + Robot
inv1 C:     │           └──  all w:Worker | w in Human or w in Robot
inv1 C:     │               └──  no Worker-Human-Robot
inv1 C:     │                   └──  Worker = Human + Robot
inv2 C:     │                       └──  workers in Workstation one -> some Worker
inv2 S:     │                           └──  all w:Worker | one workers.w all w:Workstations | some w.workers
inv2 C:     │                               └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv2 C:     │                                   └──  all w:Worker | one w.~workers all w:Workstation | some w.workers
inv3 C:     │                                       └──  all c:Component | one c.workstation
inv2 C:     │                                           └──  all w:Worker | one workers.w   Workstation = workers.Worker
inv4 C:     │                                               └──  all c:Component | some c.parts all m:Material | m.parts = none
inv4 C:     │                                                   └──  parts in Component -> some Product
inv4 C:     │                                                       └──  Component = parts.Product
inv4 U:     │                                                           └──  parts.Product in Component
inv4 C:     │                                                               └──  parts.Product = Component
inv5 C:     │                                                                   └──  all w:Workstation,h:Human,r:Robot | h not in w.workers or r not in w.workers
inv5 O:     │                                                                       └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                                                           └──  no workers.Human & workers.Robot
inv6 T:     │                                                                               └──  all c:Component | c not c.parts
inv6 U:     │                                                                                   └──  all c:Component | c not in c.parts
inv6 T:     │                                                                                       └──  all c:Component | c not in c.parts and c not c.parts.parts
inv6 U:     │                                                                                           └──  all c:Component | c not in c.parts and c not in c.parts.parts
inv6 O:     │                                                                                               └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                                                   └──  all c:Component | c not in c.^parts
inv6 O:     │                                                                                                       └──  no iden & ^parts
inv7 O:     │                                                                                                           └──  ^parts.Dangerous in Dangerous
inv7 O:     │                                                                                                               └──  parts.Dangerous in Dangerous
inv7 S:     │                                                                                                                   └──  parts.Dangerous in Dangerous all c:Components | some c.parts & Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                       └──  parts.Dangerous in Dangerous all c:Component | some c.parts & Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                           └──  parts.Dangerous in Dangerous all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                               └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                   └──  all c:Component | some c.parts & Dangerous implies c in Dangerous
inv8 B:     │                                                                                                                                       └──  all c:Component,ws:c.workstation | c in Dangerous implies no w: ws.workers | w not in Human
inv8 C:     │                                                                                                                                           └──  all c:Component,ws:c.workstation | c in Dangerous implies no w: ws.workers | w in Human
inv8 C:     │                                                                                                                                               └──  all c:Dangerous,ws:c.workstation | no w: ws.workers | w in Human
inv8 C:     │                                                                                                                                                   └──  all c:Dangerous,ws:c.workstation | all w: ws.workers | w not in Human
inv8 C:     │                                                                                                                                                       └──  all c:Dangerous,ws:c.workstation,w: ws.workers | w not in Human
inv8 S:     │                                                                                                                                                           └──  all c:Dangerous,ws:c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                                               └──  all c:Dangerous,w:c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                                                   └──  all c:Dangerous | no c.workstation.workers & Human
inv8 C:     │                                                                                                                                                                       └──  no Dangerous.workstation.workers & Human
inv8 C:     │                                                                                                                                                                           └──  all c:Component,ws:c.workstation | c in Dangerous implies no w: ws.workers | w in Human all c:Dangerous,ws:c.workstation | no w: ws.workers | w in Human all c:Dangerous,ws:c.workstation,w: ws.workers | w not in Human all c:Dangerous | no c.workstation.workers & Human no Dangerous.workstation.workers & Human
inv9 U:     │                                                                                                                                                                               └──  all w:Workstation-end | one w.succ no end.succ
inv9 B:     │                                                                                                                                                                                   └──  all w:Workstation-end | one w.succ no end.succ end in begin.^succ
inv9 U:     │                                                                                                                                                                                       └──  all w:Workstation-end | one w.succ no end.succ end in begin.*succ
inv9 C:     │                                                                                                                                                                                           └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
gYhPme3YyGwdA8y8F M:     │                                                                                                                                                                                               └──  user added theme options. same as previous submission
inv10 T:    │                                                                                                                                                                                                   └──  Component implies historically (Component.parts)
inv10 T:    │                                                                                                                                                                                                       └──  all c:Component| c implies historically (Component.parts)
inv10 T:    │                                                                                                                                                                                                           └──  all c:Component| some c implies historically (Component.parts)
inv10 B:    │                                                                                                                                                                                                               └──  all c:Component| some c implies (historically some c.parts)
inv10 S:    │                                                                                                                                                                                                                   └──  all c:Component| all c implies (historically some c.parts)
inv10 T:    │                                                                                                                                                                                                                       └──  all c:Component| c implies (historically some c.parts)
inv10 T:    │                                                                                                                                                                                                                           └──  all c:Component| c in Product implies (historically some c.parts in Product)
inv1 B:     ├──  all w : Workstation | Human in w.workers or Robot in w.workers
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 B:     │       └──  all w : Workstation | Worker in w.workers all w1,w2 : Workstation | all wk : Worker | wk in w1.workers and wk in w2.workers implies w1=w2
inv2 U:     │           └──  all w1,w2 : Workstation | all wk : Worker | wk in w1.workers and wk in w2.workers implies w1=w2
inv2 U:     │               └──  all w : Worker | w in Workstation.workers all w1,w2 : Workstation | all wk : Worker | wk in w1.workers and wk in w2.workers implies w1=w2
inv1 C:     ├──  all worker : Worker | worker in Human or worker in Robot
inv2 T:     │   └──  all workstation : Workstation | all workers : Worker | workers in workstation.workers != none and worker in Workstation.workers
inv2 T:     │       └──  all workstation : Workstation | all workers : Worker | (workers in workstation.workers) != none and worker in Workstation.workers
inv2 T:     │           └──  all workstation : Workstation | all workers : Worker | workstation.workers != none and worker in Workstation.workers
inv2 T:     │               └──  all workstation : Workstation | all workers : Worker | Workstation.workers != none and worker in Workstation.workers
inv2 S:     │                   └──  all workers : Worker | workstation.workers != none and worker in Workstation.workers
inv2 T:     │                       └──  all workers : Worker | Workstation.workers != none and worker in Workstation.workers
inv2 U:     │                           └──  all worker : Worker | (Workstation.workers != none) and (worker in Workstation.workers)
inv2 U:     │                               └──  all worker : Worker | (Workstation.workers != none) and (all worker : Worker | one workstation : Workstation | worker in workstation.workers)
inv2 U:     │                                   └──  Workstation.workers != none and (all worker : Worker | one workstation : Workstation | worker in workstation.workers)
inv2 C:     │                                       └──  all w : Workstation | w.workers != none and (all worker : Worker | one workstation : Workstation | worker in workstation.workers)
inv3 C:     │                                           └──  all c : Component | one w : Workstation | w in c.workstation
inv4 S:     │                                               └──  all c : Component | all m : material | c.parts != none and m.parts is none
inv4 T:     │                                                   └──  all c : Component | all m : Material | c.parts != none and m.parts is none
inv4 S:     │                                                       └──  all c : Component | all m : Material | (c.parts != none) and (m.parts is none)
inv4 S:     │                                                           └──  all c : Component | all m : Material | (c.parts != none) and (m.parts is none)
inv4 S:     │                                                               └──  all c : Component | all m : Material | (c.parts != none) and (m.parts is none))
inv4 C:     │                                                                   └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 S:     │                                                                       └──  all w : Workstation | all w1,w2 : Worker | (w1 in w.workers and w2 in w.workers and w1 is Human) implies w2 is Human
inv5 T:     │                                                                           └──  all w : Workstation | all w1,w2 : Worker | w1 in w.workers and w2 in w.workers and w1 is Human implies w2 is Human
inv5 S:     │                                                                               └──  all w : Workstation | all w1,w2 : Worker | (w1 in w.workers and w2 in w.workers and w1 is Human) implies w2 is Human
inv5 S:     │                                                                                   └──  all w : Workstation | all w1,w2 : Worker | (w1 in w.workers and w2 in w.workers and w1 is Human) implies (w2 is Human)
inv5 S:     │                                                                                       └──  all w : Workstation | all w1,w2 : Worker | (w1 in w.workers and w2 in w.workers and w1 is Human) implies (w2 is Human
inv5 T:     │                                                                                           └──  all w : Workstation | all w1,w2 : Worker | w1 in w.workers and w2 in w.workers and w1 is Human implies w2 is Human
inv5 S:     │                                                                                               └──  all w : Workstation | all w1,w2 : Worker | (w1 in w.workers and w2 in w.workers and w1 is Human) implies w2 is Human
inv5 S:     │                                                                                                   └──  all w : Workstation | all w1,w2 : Worker | ((ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                                       └──  all w : Workstation | all w1,w2 : Worker |  (w1 in w.workers and w2 in w.workers and w1 is Human) implies w2 is Human
inv5 O:     │                                                                                                           └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 O:     │                                                                                                               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 C:     │                                                                                                                   └──  all c : Component | c not in c.^(parts)
inv7 B:     │                                                                                                                       └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                           └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 S:     │                                                                                                                               └──  all c : Component | all p : Product | all w : Workker | (p in Dangerous and p in c.^(parts) and w in c.workstation.workers) implies w not in Human
inv8 B:     │                                                                                                                                   └──  all c : Component | all p : Product | all w : Worker | (p in Dangerous and p in c.^(parts) and w in c.workstation.workers) implies w not in Human
inv8 C:     │                                                                                                                                       └──  all c : Component | all w : Worker | (c in Dangerous and w in c.workstation.workers) implies w not in Human
inv9 C:     │                                                                                                                                           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv1 T:     ├──  all w : Worker | w is Human or w is Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 C:     │       └──  Worker in (Robot+Human)
inv2 S:     │           └──  all ws : Workstation , some w : Worker | ws->w in workers
inv2 S:     │               └──  all ws : Workstation , some w : Worker | ws->w in workers
inv2 E:     │                   └──   
inv1 C:     │                       └──  Worker in (Robot+Human)
inv2 S:     │                           └──  all ws : Workstation , some w : Worker | ws->w in workers
inv2 U:     │                               └──  all ws : Workstation | some w : Worker | ws->w in workers
inv2 B:     │                                   └──  all ws : Workstation | one w : Worker | ws->w in workers
inv2 C:     │                                       └──  all ws : Workstation | some w : Worker | ws->w in workers all w : Worker | one ws : Workstation | ws->w in workers
inv3 C:     │                                           └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │                                               └──  all c : Component | some (c.parts) all m : Material | no (m.parts)
inv5 B:     │                                                   └──  all ws : Workstation | (Human+Robot) not in ws.workers
inv5 T:     │                                                       └──  all ws : Workstation | (Human+Robot) not in workers
inv5 T:     │                                                           └──  (Human+Robot) not in workers
inv5 B:     │                                                               └──  (Human+Robot) not in Workstation.workers
inv5 T:     │                                                                   └──  all h : Human, r : Robot | h in workers iff r not in workers
inv5 O:     │                                                                       └──  all h : Human, r : Robot | h in Workstation.workers iff r not in Workstation.workers
inv5 C:     │                                                                           └──  no (Robot.~workers & Human.~workers)
inv5 C:     │                                                                               └──  all h : Human, r : Robot, ws : Workstation | h in ws.workers implies r not in ws.workers
inv5 O:     │                                                                                   └──  all h : Human, r : Robot | h in Workstation.workers implies r not in Workstation.workers
inv5 C:     │                                                                                       └──  all h : Human, r : Robot, ws : Workstation | h in ws.workers implies r not in ws.workers
inv6 T:     │                                                                                           └──  Component not Component.parts
inv6 B:     │                                                                                               └──  Component not in Component.parts
inv6 U:     │                                                                                                   └──  all c : Component | c not in c.parts
inv6 C:     │                                                                                                       └──  all c : Component | c not in c.^parts
inv6 U:     │                                                                                                           └──  all c : Component | c not in c.parts
inv6 C:     │                                                                                                               └──  all c : Component | c not in c.^parts
inv7 B:     │                                                                                                                   └──  all c : Component | Dangerous in c.^parts implies c in Dangerous
inv7 B:     │                                                                                                                       └──  all c : Component | Dangerous in c.^parts iff c in Dangerous
inv7 T:     │                                                                                                                           └──  all c : Component | some Dangerous in c.^parts implies c in Dangerous
inv7 T:     │                                                                                                                               └──  all c : Component | (some Dangerous) in c.^parts implies c in Dangerous
inv7 B:     │                                                                                                                                   └──  all c : Component | some d : Dangerous | d in c.^parts implies c in Dangerous
inv7 B:     │                                                                                                                                       └──  all p : Product | some d : Dangerous | d in p.^parts implies p in Dangerous
inv7 O:     │                                                                                                                                           └──  all p : Product | p in Dangerous implies p.^(~parts) in Dangerous
inv8 B:     │                                                                                                                                               └──  all p : Product | p in Dangerous implies (Robot in p.workstation)
inv8 B:     │                                                                                                                                                   └──  all p : Product | p in Dangerous implies (Robot in p.workstation.workers)
inv8 B:     │                                                                                                                                                       └──  all p : Product | p in Dangerous implies (Robot in p.workstation.workers and Human not in p.workstation.workers)
inv8 B:     │                                                                                                                                                           └──  all c : Component | c in Dangerous implies (Robot in c.workstation.workers and Human not in c.workstation.workers)
inv8 B:     │                                                                                                                                                               └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 C:     │                                                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv10 B:    │                                                                                                                                                                       └──  all c: Component| (c.^(~parts)).workstation in (c.workstation).^(succ)
inv10 B:    │                                                                                                                                                                           └──  all c: Component| (c.^(~parts)).workstation in (c.workstation).^(succ)
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 C:     │   └──  (all ws:Workstation | some w:Worker | ws->w in workers) and (all w:Worker | one ws:Workstation | ws->w in workers)
inv3 C:     │       └──  all c:Component | one w:Workstation | c->w in workstation
inv4 C:     │           └──  (all c:Component | some p:Product | c->p in parts) and (all m:Material | all p:Product | m->p not in parts)
inv5 U:     │               └──  all h:Human, r:Robot, w:Workstation | h->w in workers implies h->r not in workers
inv5 U:     │                   └──  all h:Human, r:Robot, w:Workstation | (h->w in workers implies r->w not in workers)
inv5 U:     │                       └──  all h:Human, r:Robot, w:Workstation | (h->w in workers implies r->w not in workers) or (r->w in workers implies h->w not in workers)
inv5 S:     │                           └──  all ws:Workstation, w1,w2:Workers | w1->ws in workers and w2->ws in workers and w1 in Human implies w2 in Robot
inv5 U:     │                               └──  all ws:Workstation, w1,w2:Worker | w1->ws in workers and w2->ws in workers and w1 in Human implies w2 in Robot
inv5 O:     │                                   ├──  all ws:Workstation, w1,w2:Worker | ws->w1 in workers and ws->w2 in workers and w1 in Human implies w2 in Robot
inv5 C:     │                                   │   └──  all h:Human, r:Robot, w:Workstation | (w->h in workers implies w->r not in workers) or (w->r in workers implies w->h not in workers)
inv5 C:     │                                   │       └──  all h:Human, r:Robot, w:Workstation | (w->h in workers implies w->r not in workers)
inv6 U:     │                                   │           └──  all c1,c2:Component | c1->c2 in parts implies c1!=c2
inv6 C:     │                                   │               └──  all c : Component | c not in c.^(parts)
inv7 C:     │                                   │                   └──  all c:Component, p:Product | c->p in parts and p in Dangerous implies c in Dangerous
inv8 U:     │                                   │                       └──  all c:Component, ws:Workstation, w:Worker | c->w in workstation and c in Dangerous and ws->w in workers implies w not in Human
inv8 C:     │                                   │                           └──  all c:Component, ws:Workstation, w:Worker | c->ws in workstation and c in Dangerous and ws->w in workers implies w not in Human
inv5 O:     │                                   └──  all ws:Workstation, w1,w2:Worker | ws->w1 in workers and ws->w2 in workers and w1 in Human implies w2 in Robot
inv1 C:     ├──  all w : Worker | w in Human <=> w not in Robot
inv1 U:     │   └──  all w : Worker | w in Human implies w not in Robot
inv2 U:     │       └──  all t : Worker | all w1,w2 : Workstation | w1.workers!=none and w2.workers!=none and t in w1.workers and t in w2.workers implies w2=w1
inv2 C:     │           └──  all w1,w2 : Workstation | w1.workers!=none and w2.workers!=none all t : Worker | one w : Workstation | t in w.workers
inv2 C:     │               └──  all w : Workstation | w.workers!=none all t : Worker | one w : Workstation | t in w.workers
inv3 T:     │                   └──  all c : Component | one w : workstation | w in c.workstation
inv3 C:     │                       └──  all c : Component | one w : Workstation | w in c.workstation
inv4 C:     │                           └──  all p : Product | p.parts != none <=> p in Component
inv4 C:     │                               └──  all p : Product | p.parts != none <=> p in Component
inv5 T:     │                                   └──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not int w.workers
inv5 C:     │                                       └──  all w : Workstation | all r : Robot | all h : Human | r in w.workers implies h not in w.workers
inv6 U:     │                                           └──  all c : Component | c not in c.parts
inv6 C:     │                                               └──  all c : Component | c not in c.^(parts)
inv7 O:     │                                                   └──  all c : Component | all d : Dangerous | d in c.^(parts) implies c in Dangerous
inv8 S:     │                                                       └──  all d : Dangerous | all w : Workstation | all h : Human | w in d.workstaion implies h not in w.workers
inv8 S:     │                                                           └──  all d : Dangerous | all w : Workstation | all h : Human | w in d.workstaion implies h not in w.workers
inv8 C:     │                                                               └──  all d : Dangerous | all w : Workstation | all h : Human | w in d.workstation implies h not in w.workers
inv9 U:     │                                                                   └──  all w1,w2 : Workstation | w2 in w1.succ implies w1 not in w2.^(succ)
inv9 C:     │                                                                       └──  all w1,w2 : Workstation | w1 in begin and w1!=w2 implies w2 in w1.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv1 C:     ├──  Worker in (Human + Robot)
inv2 U:     │   └──  all ws: Workstation, w: Worker | some ws.workers and some w.~workers
inv2 U:     │       └──  all ws: Workstation| some ws.workers
inv2 T:     │           └──  all ws: Workstation| some ws.workers all w: Worker | w.~workers
inv2 U:     │               └──  all ws: Workstation| some ws.workers all w: Worker | some w.~workers
inv2 C:     │                   └──  all ws: Workstation| some ws.workers all w: Worker | one w.~workers
inv2 C:     │                       └──  all ws: Workstation| some ws.workers all w: Worker | one w.~workers all ws: Workstation, w: Worker | some ws.workers and one w.~workers
inv2 U:     │                           └──  all ws: Workstation, w: Worker | some ws.workers and one w.~workers
inv3 C:     │                               └──  all c: Component | one c.workstation
inv4 C:     │                                   └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 T:     │                                       └──  all ws: Workstation | no ws.Human & ws.Robot
inv5 T:     │                                           └──  all ws: Workstation | no (ws.Human & ws.Robot)
inv5 O:     │                                               └──  all ws: Workstation | ws.workers in Human or ws.workers in Robot
inv5 T:     │                                                   └──  all ws: Workstation | no ws.workers.Human & ws.workers.Robot
inv6 S:     │                                                       └──  all c: Components | c not in c.^parts
inv6 C:     │                                                           └──  all c: Component | c not in c.^parts
inv7 T:     │                                                               └──  all c: Component | some c.^parts in Dangerous implies c in Dangerous
inv6 E:     │                                                                   └──   
inv6 E:     │                                                                       └──   
inv6 E:     │                                                                           └──   
inv7 O:     │                                                                               └──  ^parts.Dangerous in Dangerous
inv7 B:     │                                                                                   └──  all c: Component | some p: c.^parts | p in Dangerous implies c in Dangerous
inv7 O:     │                                                                                       └──  all c: Component | all p: c.^parts | p in Dangerous implies c in Dangerous
inv8 O:     │                                                                                           └──  all c: Component | (c in Dangerous) implies (c.workstation.workers) in Robot
inv8 O:     │                                                                                               └──  all c: Component | (c in Dangerous) implies c.workstation.workers in Robot
inv8 O:     │                                                                                                   └──  all c: Component | (c in Dangerous) implies c.workstation.workers in Robot
inv9 C:     │                                                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv9 C:     │                                                                                                           └──  all ws: Workstation | lone ws.succ all ws: Workstation | lone ws.~succ all ws: Workstation | ws in begin.*succ no end.succ
inv9 C:     │                                                                                                               └──  all ws: Workstation | lone ws.succ all ws: Workstation | lone ws.~succ all ws: Workstation | ws in begin.*succ no end.succ
inv1 S:     ├──  all w: Workstation, w1: Worker | w->w1 in workers implies(w1 in Human or w2 in Robot)
inv1 U:     │   └──  all w: Workstation, w1: Worker | w->w1 in workers implies(w1 in Human or w1 in Robot)
inv1 U:     │       └──  all w: Workstation, w1: Worker | w->w1 in workers implies (w1 in Human or w1 in Robot)
inv1 B:     │           └──  all w: Workstation, w1: Worker | w->w1 in workers
inv1 U:     │               └──  all w: Workstation, w1: Worker | w->w1 in workers implies (w1 in Human or w1 in Robot)
inv1 C:     │                   └──  all w1: Worker | (w1 in Human or w1 in Robot)
inv1 C:     │                       └──  all w: Worker | w in Human or w in Robot
inv2 U:     │                           └──  all w: Workstation | some w1: Worker | w->w1 in workers and (one w2: Workstation | w2->w1 in workers)
inv2 S:     │                               └──  all w: Workstation | some w1: Worker | w->w1 in workers and (one w2: Workstation | all w3: Workers | w2->w3 in workers)
inv2 B:     │                                   └──  all w: Workstation | some w1: Worker | w->w1 in workers and (one w2: Workstation | all w3: Worker | w2->w3 in workers)
inv1 U:     ├──  all w : Worker | w in Human implies w not in Robot
inv1 U:     │   └──  all w : Worker | w in Human implies w not in Robot all w : Worker | w in Robot implies w not in Human
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot all w : Worker | w in Human implies w not in Robot all w : Worker | w in Robot implies w not in Human
inv1 C:     │           └──  all w : Worker | w in Human or w in Robot all w : Worker | w in Human implies w not in Robot all w : Worker | w in Robot implies w not in Human
inv1 C:     │               └──  all w : Worker | w in Human or w in Robot all w : Worker | w in Human implies w not in Robot all w : Worker | w in Robot implies w not in Human
inv1 C:     │                   └──  all w : Worker | w in Human or w in Robot all w : Worker | w in Human implies w not in Robot all w : Worker | w in Robot implies w not in Human
inv2 U:     │                       └──  all w : Workstation | some w.workers Workstation.workers = Worker
inv2 U:     │                           └──  Workstation.workers = Worker
inv2 U:     │                               └──  all w : Workstation | some w.workers Workstation.workers = Worker
inv2 U:     │                                   └──  all w : Workstation | some w.workers all w : Worker | one Workstation.workers&w
inv2 U:     │                                       └──  all w : Workstation | some w.workers all w : Worker | all disj w1,w2 : Workstation | w in w1.workers and w in w2.workers implies w1=w2
inv2 C:     │                                           └──  all w : Workstation | some w.workers Workstation.workers = Worker all w : Worker | all disj w1,w2 : Workstation | w in w1.workers and w in w2.workers implies w1=w2
inv3 C:     │                                               └──  all c : Component | one c.workstation
inv3 C:     │                                                   └──  all c : Component | one c.workstation
inv4 C:     │                                                       └──  all c : Component | some c.parts all c : Material | no c.parts
inv4 C:     │                                                           └──  all c : Component | some c.parts all c : Material | no c.parts
inv5 O:     │                                                               └──  all w : Workstation | no w.workers-Human or no w.workers-Robot
inv6 U:     │                                                                   └──  all c : Component | c not in c.parts
inv6 C:     │                                                                       └──  all c : Component | c not in c.^parts
inv6 C:     │                                                                           └──  all c : Component | c not in c.^parts
inv7 B:     │                                                                               └──  all c : Component | c.^parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                   └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv8 B:     │                                                                                       └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv7 B:     │                                                                                           └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv8 B:     │                                                                                               └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 B:     │                                                                                                   └──  one begin.succ all w : Workstation | w not in begin and w not in end implies one w.succ no end.succ
inv9 B:     │                                                                                                       └──  one begin.succ begin.succ != end all w : Workstation | w not in begin and w not in end implies one w.succ no end.succ begin != end
inv10 B:    │                                                                                                           └──  all c : Component | some c.workstation implies no c.parts
inv9 T:     │                                                                                                               └──  begin not in begin.^succ end begin.^succ no end.succ all w : Workstation - end | one w.succ
inv9 B:     │                                                                                                                   └──  begin not in begin.^succ end in begin.^succ no end.succ all w : Workstation - end | one w.succ
inv9 O:     │                                                                                                                       └──  begin not in begin.^succ end in begin.^succ no end.succ all w : Workstation | one w.succ
inv9 B:     │                                                                                                                           └──  begin not in begin.^succ end in begin.^succ no end.succ all w : Workstation - end - begin | one w.succ
inv9 B:     │                                                                                                                               └──  begin not in begin.^succ end in begin.^succ no end.succ all w : Workstation - end | one w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                   └──  begin not in begin.^succ one begin.succ implies end in begin.^succ no end.succ all w : Workstation - end | one w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                       └──  begin not in begin.^succ one begin.succ implies end in begin.^succ and end != begin no end.succ all w : Workstation - end | one w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                           └──  begin not in begin.^succ one begin.succ implies end in begin.^succ and end != begin no end.succ all w : Workstation - end | one w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                               └──  begin not in begin.^succ one begin.succ implies end in begin.^succ and end != begin no end.succ all w : Workstation - end | one w.succ and w not in w.^succ and end in w.^succ
inv9 U:     │                                                                                                                                                   └──  begin not in begin.^succ one begin.succ implies end in begin.^succ and end != begin no end.succ all w : Workstation - end | one w.succ and w not in w.^succ and end in w.^succ all w : Workstation - begin | begin not in w.^succ
inv9 C:     │                                                                                                                                                       └──  begin not in begin.^succ begin.^succ = Workstation-begin one begin.succ implies end in begin.^succ and end != begin no end.succ all w : Workstation - end | one w.succ and w not in w.^succ and end in w.^succ all w : Workstation - begin | begin not in w.^succ
inv10 B:    │                                                                                                                                                           └──  all c : Component | some c.workstation implies no c.parts
inv10 B:    │                                                                                                                                                               └──  all c : Component | begin in c.workstation implies no c.parts
inv10 B:    │                                                                                                                                                                   └──  all c : Component | begin in c.workstation implies no c.parts&Component
inv10 B:    │                                                                                                                                                                       └──  all c : Component | begin in c.^workstation implies no c.parts&Component
inv10 B:    │                                                                                                                                                                           └──  all c : Component | begin in c.workstation implies no c.^parts&Component
inv10 O:    │                                                                                                                                                                               └──  all c : Component | c in Component.parts implies no c.workstation
inv7 B:     │                                                                                                                                                                                   └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                       └──  all c : Component | c.^parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                           └──  all c : Product | c.^parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                               └──  all c : Product | c.^parts not in Dangerous implies c not in Dangerous all c : Product | c.^parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                                   └──  all c : Product | c.parts in Dangerous implies c in Dangerous
inv1 C:     ├──  all w: Worker | w in Human + Robot
inv2 B:     │   └──  all w: Worker | one w.workers all ws: Workstation | all w1, w2: ws.workers | w1 = w2
inv2 B:     │       └──  all w: Worker | one w.succ all ws: Workstation | all w1, w2: ws.workers | w1 = w2
inv2 B:     │           └──  all w: Worker | one w.succ
inv3 C:     │               └──  all c: Component | one c.workstation
inv2 S:     │                   └──  all ws: Workstation | some w: ws.workers all w: Worker | one w.workstation all w: Worker, ws1, ws2: w.workstation | ws1 != ws2 => ws1 not in ws2.^succ and ws2 not in ws1.^succ
inv2 S:     │                       └──  all ws,w | w in worstation.w
inv2 S:     │                           └──  all w | w in worstation.w
inv2 T:     │                               └──  Worker & Workstation
inv2 T:     │                                   └──  all w: Worker | w & Workstation
inv2 T:     │                                       └──  all w: Worker | w & workstation
inv2 S:     │                                           └──  all w: Worker | not in w - workstation
inv2 T:     │                                               └──  all w: Worker | ~(w not in workstation)
inv2 T:     │                                                   └──  all w: Worker | ~(w in workstation)
inv2 T:     │                                                       └──  all w: Worker | (w in workstation)
inv2 C:     │                                                           └──  workers in Workstation one -> some Worker
inv3 C:     │                                                               └──  all c: Component | one c.workstation
inv4 C:     │                                                                   └──  all c: Component | c.parts != none all m: Material | m.parts = none
inv5 E:     │                                                                       └──   
inv4 C:     │                                                                           └──  all c: Component | c.parts != none all m: Material | m.parts = none
inv4 U:     │                                                                               └──  all c: Component, m: Material | c.parts != none and m.parts = none
inv4 C:     │                                                                                   └──  all c: Component | c.parts != none all m: Material | m.parts = none
inv5 U:     │                                                                                       └──  no disj w1, w2: Human + Robot | w1.workers & w2.workers != none
inv4 C:     │                                                                                           └──  all c: Component | c.parts != none all m: Material | m.parts = none
inv4 C:     │                                                                                               └──  all c: Component | c.parts != none all m: Material | m.parts = none
inv5 U:     │                                                                                                   └──  all h: Human, r: Robot | no h.workers & r.workers
inv5 T:     │                                                                                                       └──  all w: Workstation | no w.workers.Human & w.workers.Robot
inv5 T:     │                                                                                                           └──  all h: Human, r: Robot | no h.workers = r.workers
inv4 C:     │                                                                                                               └──  all c: Component | some c.parts all m: Material | m.parts = none
inv4 C:     │                                                                                                                   └──  all c: Component | some c.parts all m: Material | m.parts = none
inv6 U:     │                                                                                                                       └──  no c: Component | c in c.parts
inv6 U:     │                                                                                                                           └──  all c: Component | c not in c.parts
inv5 T:     │                                                                                                                               └──  Human & Robot
inv5 S:     │                                                                                                                                   └──  all h: Human, r: Robot: h in w.workers & r in w.workers
inv5 S:     │                                                                                                                                       └──  all h: Human, r: Robot | h in w.workers & r in w.workers
inv5 T:     │                                                                                                                                           └──  all h: Human, r: Robot, w: Worker | h in w.workers & r in w.workers
inv5 O:     │                                                                                                                                               └──  all disj h, r: Worker | no w: Workstation | h in w.workers and r in w.workers
inv5 C:     │                                                                                                                                                   └──  all h: Human, r: Robot, ws: Workstation | h not in ws.workers or r not in ws.workers
inv5 T:     │                                                                                                                                                       └──  all h: Human, r: Robot, ws: Workstation | h not in ws.workers & r not in ws.workers
inv5 C:     │                                                                                                                                                           └──  all h: Human, r: Robot, ws: Workstation | h not in ws.workers or r not in ws.workers
inv6 U:     │                                                                                                                                                               └──  all c: Component | c not in c.parts
inv7 O:     │                                                                                                                                                                   └──  all c: Component | c in Dangerous <=> some p: c.parts | p in Dangerous
inv5 C:     │                                                                                                                                                                       └──  all h: Human, r: Robot, ws: Workstation | h not in ws.workers or r not in ws.workers
inv5 B:     │                                                                                                                                                                           └──  Workstation = workers.Human + workers.Robot
inv5 S:     │                                                                                                                                                                               └──  all workers.Human + workers.Robot
inv5 T:     │                                                                                                                                                                                   └──  univ workers.Human + workers.Robot
inv5 T:     │                                                                                                                                                                                       └──  univ workers.Human - workers.Robot
inv5 B:     │                                                                                                                                                                                           └──  no workers.Human - workers.Robot
inv5 S:     │                                                                                                                                                                                               └──  all workers.Human - workers.Robot
inv5 C:     │                                                                                                                                                                                                   └──  no workers.Human & workers.Robot
inv6 T:     │                                                                                                                                                                                                       └──  Component.~Component
inv6 T:     │                                                                                                                                                                                                           └──  Component.~Component
inv6 S:     │                                                                                                                                                                                                               └──  all c: Component: c not in c.^(c.parts)
inv6 T:     │                                                                                                                                                                                                                   └──  all c: Component | c not in c.^(c.parts)
inv6 C:     │                                                                                                                                                                                                                       └──  all c: Component | c not in c.^(parts)
inv7 O:     │                                                                                                                                                                                                                           └──  all c: Component | c in Dangerous <=> some p: c.parts | p in Dangerous
inv8 C:     │                                                                                                                                                                                                                               └──  all c: Component, ws: c.workstation | c in Dangerous implies no w: ws.workers | w in Human
inv10 U:    │                                                                                                                                                                                                                                   └──  all c: Component | all p: c.parts | p in c.*(parts-prev)
inv10 U:    │                                                                                                                                                                                                                                       └──  all c: Component | all p: c.parts | p in c.*(parts - prev)
inv7 O:     │                                                                                                                                                                                                                                           └──  all c: Component | c in Dangerous <=> some p: c.parts | p in Dangerous
inv8 C:     │                                                                                                                                                                                                                                               └──  all c: Component, ws: c.workstation | c in Dangerous implies no w: ws.workers | w in Human
inv8 S:     │                                                                                                                                                                                                                                                   └──  all c: Component, ws: c.workstation | c in Dangerous implies no w: workers.Human
inv8 C:     │                                                                                                                                                                                                                                                       └──  all c: Component, ws: c.workstation | c in Dangerous implies no w: ws.workers | w in Human
inv7 O:     │                                                                                                                                                                                                                                                           └──  all c: Component | c in Dangerous <=> some p: c.parts | p in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                               └──  all c: Component | c in Dangerous iff some p: c.parts | p in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                                   └──  all c: Component | c in Dangerous iff some p: c.parts | p in Dangerous
inv7 S:     │                                                                                                                                                                                                                                                                       └──  parts.dangerous in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                                           └──  parts.Dangerous in Dangerous
inv8 O:     │                                                                                                                                                                                                                                                                               └──  all c: Component | c in Dangerous implies no workers.Human
inv8 T:     │                                                                                                                                                                                                                                                                                   └──  all c: Component, ws: Workstation | c in Dangerous implies no ws.workers.Human
inv8 T:     │                                                                                                                                                                                                                                                                                       └──  all c: Component, ws: Workstation | c in Dangerous implies no ws.Human
inv8 T:     │                                                                                                                                                                                                                                                                                           └──  all c: Component, ws: Workstation | c in Dangerous implies no c.workstation.Human
inv8 U:     │                                                                                                                                                                                                                                                                                               └──  all c: Dangerous | no w: Human | w.workers & c.workstation != none
inv8 C:     │                                                                                                                                                                                                                                                                                                   └──  all c: Component, ws: c.workstation | c in Dangerous implies no w: ws.workers | w in Human
inv8 S:     │                                                                                                                                                                                                                                                                                                       └──  all c:Dangerous, w:c.worstation.workrs | w not in Human
inv8 C:     │                                                                                                                                                                                                                                                                                                           └──  all c:Dangerous, w:c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                                                                                                                                                                                               └──  all c:Dangerous | no c.workstation.workers & Human
inv8 C:     │                                                                                                                                                                                                                                                                                                                   └──  no Dangerous.workstation.workers & Human
inv9 S:     │                                                                                                                                                                                                                                                                                                                       └──  all w:Workstation - end | one w.succ no end : succ Workstation in begin.*succ
inv9 S:     │                                                                                                                                                                                                                                                                                                                           └──  all w:Workstation - end | one w.succ no end : succ Workstation in begin.*succ
inv9 C:     │                                                                                                                                                                                                                                                                                                                               └──  all w:Workstation - end | one w.succ no end.succ Workstation in begin.*succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 U:     │   └──  all ws : Workstation | some w : Worker | ws->w in workers all w : Worker | some ws : Workstation | ws->w in workers
inv2 C:     │       └──  all ws : Workstation | some w : Worker | ws->w in workers workers in Workstation one -> set Worker
inv3 C:     │           └──  workstation in Component set -> one Workstation
inv4 S:     │               └──  all c : Component | some p : Product | p->c in parts all m,p : univ | m in Material and p in Products implies not parts in m->p
inv4 B:     │                   └──  all c : Component | some p : Product | p->c in parts all m,p : univ | m in Material and p in Product implies not parts in m->p
inv4 B:     │                       └──  all c : Component | some p : Product | c->p in parts all m,p : univ | m in Material and p in Product implies not parts in m->p
inv4 B:     │                           └──  all c : Component | some p : Product | c->p in parts all m,p : univ | m in Material and p in Product implies not parts in p->m
inv4 B:     │                               └──  all c : Component | some p : Product | c->p in parts all m,p : univ | m in Material and p in Product implies not p->m in parts
inv4 B:     │                                   └──  all c : Component | some p : Product | p->c in parts all m,p : univ | m in Material and p in Product implies not p->m in parts
inv4 C:     │                                       └──  all c : Component | some p : Product | c->p in parts all m,p : univ | m in Material and p in Product implies not m->p in parts
inv5 C:     │                                           └──  all ws,r : univ | ws in Workstation and r in Robot and ws->r in workers implies all w : Worker | ws->w in workers implies w not in Human all ws,h : univ | ws in Workstation and h in Human and ws->h in workers implies all w : Worker | ws->w in workers implies w not in Robot
inv6 U:     │                                               └──  all c,p : univ | c in Component and p in Product and c->p in parts implies p!=c
inv6 U:     │                                                   └──  all c,p : univ | c in Component and p in Product and c->p in parts implies all par : Product | p->par in parts implies par!=c
inv6 O:     │                                                       └──  all c,p : univ | c in Component and p in Product and p->c in parts implies all par : Product | p->par in parts implies par!=c
inv6 S:     │                                                           └──  all disj c,p : univ | c in Component and p in Product and c->p in parts implies all par : Product | p->par in parts implies par!=c and
inv6 U:     │                                                               └──  all disj c,p : univ | c in Component and p in Product and c->p in parts implies all par : Product | p->par in parts implies par!=c
inv6 U:     │                                                                   └──  all c : Component | not c->c in parts
inv6 U:     │                                                                       └──  all p : Product | p in Component implies not p->p in parts
inv6 U:     │                                                                           └──  all c : Component | not c->c in parts all disj c,p : univ | c in Component and p in Product and c->p in parts implies all par : Product | p->par in parts implies par!=c
inv8 S:     │                                                                               └──  all d,ws | ws in Workstation and d in Dangerous implies all w : Worker | ws->w in workers implies w not in Human
inv8 O:     │                                                                                   └──  all d,ws : univ | ws in Workstation and d in Dangerous implies all w : Worker | ws->w in workers implies w not in Human
inv8 C:     │                                                                                       └──  all d,ws : univ | ws in Workstation and d in Dangerous and d->ws in workstation implies all w : Worker | ws->w in workers implies w not in Human
inv7 S:     │                                                                                           └──  all p,d : univ | c in Component and d in Dangerous and c->d in parts implies c in Dangerous
inv7 C:     │                                                                                               └──  all c,d : univ | c in Component and d in Dangerous and c->d in parts implies c in Dangerous
inv6 S:     │                                                                                                   └──  all c,p : c in Component and p in Product and c->p in parts implies p!=c
inv6 U:     │                                                                                                       └──  all c,p : univ | c in Component and p in Product and c->p in parts implies p!=c
inv6 U:     │                                                                                                           └──  all disj c,p : univ | c in Component and p in Product and c->p in parts implies p->c not in parts
inv6 U:     │                                                                                                               └──  all c,p : univ | c in Component and p in Product and c->p in parts implies p!=c and p->c not in parts
inv6 C:     │                                                                                                                   └──  all c,p : univ | c in Component and p in Product and c->p in parts implies p!=c and p->c not in parts and all p1 : Product | p->p1 in parts implies p1->c not in parts
RYJEnCJt7wu2poSY9 M:     │                                                                                                                       └──  user added theme options. same as previous submission
inv1 T:     │                                                                                                                           └──  Worker in Human or Robot
inv1 O:     │                                                                                                                               └──  Worker in Human
inv1 C:     │                                                                                                                                   └──  Worker in Human+Robot
inv2 B:     │                                                                                                                                       └──  some Workstation.workers one workers.Worker
inv2 B:     │                                                                                                                                           └──  some Workstation.workers lone workers.Worker
inv2 B:     │                                                                                                                                               └──  all w : Workstation | some w.workers lone workers.Worker
inv2 S:     │                                                                                                                                                   └──  all w : Workstation | some w.workers all w : Worker ! one workers.w
inv2 C:     │                                                                                                                                                       └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │                                                                                                                                                           └──  all c : Component | one c.workstation
inv4 C:     │                                                                                                                                                               └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 T:     │                                                                                                                                                                   └──  all w : Workstation | some w.workstation.Robot implies no w.workstation.Human all w : Workstation | some w.workstation.Human implies no w.workstation.Robot
inv5 U:     │                                                                                                                                                                       └──  all w : Workstation | some w.workstation & Robot implies no w.workstation & Human all w : Workstation | some w.workstation & Human implies no w.workstation & Robot
inv5 C:     │                                                                                                                                                                           └──  all w : Workstation | some w.workers & Robot implies no w.workers & Human all w : Workstation | some w.workers & Human implies no w.workers & Robot
inv5 O:     │                                                                                                                                                                               └──  all w : Workstation | w.workers in Robot or w.workers in Human
pzq2uGsLWCZX7efb9 M:     │                                                                                                                                                                                   ├──  user added theme options. same as previous submission
inv1 C:     │                                                                                                                                                                                   │   ├──  Worker in Human+Robot
inv6 S:     │                                                                                                                                                                                   │   └──  all c : Compenent | c not in c.^parts
inv5 O:     │                                                                                                                                                                                   │       └──  all w : Workstation | w.workers in Robot or w.workers in Human
inv6 C:     │                                                                                                                                                                                   │           └──  all c : Component | c not in c.^parts
inv4 C:     │                                                                                                                                                                                   │               └──  all c : Component | some c.parts all m : Material | no m.parts
inv7 B:     │                                                                                                                                                                                   │                   └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                   │                       └──  all c : Component | c.^parts in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                                                                   │                           └──  all c : Component | some c.parts & Dangerous implies c in Dangerous
inv8 O:     │                                                                                                                                                                                   │                               └──  Dangerous.workstation.workers in Robot
inv9 U:     │                                                                                                                                                                                   │                                   └──  all w : Workstation | no succ.w iff w = begin all w : Workstation | no w.succ iff w = end
inv9 O:     │                                                                                                                                                                                   │                                       └──  all w : Workstation | no succ.w iff w = begin all w : Workstation | no w.succ iff w = end all w : Workstation | end in w.^succ and begin in w.^~succ
inv9 O:     │                                                                                                                                                                                   │                                           └──  all w : Workstation | no succ.w iff w = begin all w : Workstation | no w.succ iff w = end all w : Workstation | end in w.^succ and begin in w.^~succ end != begin
inv9 T:     │                                                                                                                                                                                   │                                               └──  all w : Workstation | no succ.w iff w = begin all w : Workstation | no w.succ iff w = end all w : Workstation | end in w.^succ and begin in w.^~succ none end & begin
inv9 O:     │                                                                                                                                                                                   │                                                   └──  all w : Workstation | no succ.w iff w = begin all w : Workstation | no w.succ iff w = end all w : Workstation | end in w.^succ and begin in w.^~succ no end & begin
inv6 C:     │                                                                                                                                                                                   └──  all c : Component | c not in c.^parts
98NSbMiTAE8ewLMx9 M:     │                                                                                                                                                                                       └──  user added theme options. same as previous submission
inv1 U:     ├──  no Human & Robot
inv1 B:     │   └──  Workstation.workers & Human = Workstation.workers || Workstation.workers & Robot = Workstation.workers
inv1 B:     │       └──  all w : Workstation | w.workers in Human || w.workers in Robot
inv1 B:     │           └──  Workstation.workers in Human || Workstation.workers in Robot
inv2 U:     │               └──  all w : Workstation | some w.workers all w : Worker | some workers.w
inv2 C:     │                   └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 O:     │                       └──  all c : Component | one workstation.c
inv3 C:     │                           └──  all c : Component | one c.workstation
inv4 C:     │                               └──  all c : Component | some c.parts all m : Material | no m.parts
inv1 O:     │                                   └──  Worker in Human || Worker in Robot
inv5 O:     │                                       └──  all w : Workstation | w.workers in Human || w.workers in Robot
inv6 S:     │                                           └──  all c : Components | c not in c.parts
inv6 U:     │                                               └──  all c : Component | c not in c.parts
inv6 C:     │                                                   └──  all c : Component | c not in c.^parts
inv7 C:     │                                                       └──  all c : Component | some Dangerous & c.parts => c in Dangerous
inv8 B:     │                                                           └──  all w : Workstation | Dangerous in workstation.w => w.workers in Robot
inv8 O:     │                                                               └──  all w : Workstation | some Dangerous & workstation.w => w.workers in Robot
inv9 U:     │                                                                   └──  end in begin.*succ all w : Workstation | w not in w.^succ
inv9 O:     │                                                                       └──  end in begin.*succ all w : Workstation | w not in w.^succ && some succ.w
inv9 U:     │                                                                           └──  end in begin.*succ all w : Workstation | w not in w.^succ && (w != begin => some succ.w)
inv9 U:     │                                                                               └──  end in begin.*succ no end.succ all w : Workstation | w not in w.^succ && (w != begin => some succ.w)
inv9 U:     │                                                                                   └──  no succ.begin no end.succ all w : Workstation | w != begin => one succ.w all w : Workstation | w != end => one w.succ
inv9 C:     │                                                                                       └──  no succ.begin no end.succ all w : Workstation | w != begin => one succ.w all w : Workstation | w != end => one w.succ all w : Workstation | w not in w.^succ
inv9 C:     │                                                                                           └──  no end.succ all w : Workstation | w != begin => one succ.w all w : Workstation | w != end => one w.succ all w : Workstation | w not in w.^succ
inv9 C:     │                                                                                               └──  all w : Workstation | w != begin => one succ.w all w : Workstation | w != end => one w.succ all w : Workstation | w not in w.^succ
inv9 U:     │                                                                                                   └──  all w : Workstation | w != end => one w.succ all w : Workstation | w not in w.^succ
inv10 B:    │                                                                                                       └──  all c : Component, p : c.parts | p in Component => p.workstation not in c.workstation.*succ
inv1 C:     │                                                                                                           └──  Worker in Human+Robot
inv1 E:     │                                                                                                               └──   
inv1 E:     │                                                                                                                   └──   
inv1 C:     │                                                                                                                       └──  Worker in Human+Robot
inv2 C:     │                                                                                                                           └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │                                                                                                                               └──  all c : Component | one c.workstation
inv4 C:     │                                                                                                                                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                                                                                                                                       └──  all w : Workstation | w.workers in Human || w.workers in Robot
inv6 C:     │                                                                                                                                           └──  all c : Component | c not in c.^parts
inv7 C:     │                                                                                                                                               └──  all c : Component | some Dangerous & c.parts => c in Dangerous
inv8 O:     │                                                                                                                                                   └──  all w : Workstation | some Dangerous & workstation.w => w.workers in Robot
inv9 C:     │                                                                                                                                                       └──  all w : Workstation | w != begin => one succ.w all w : Workstation | w != end => one w.succ all w : Workstation | w not in w.^succ
inv10 B:    │                                                                                                                                                           └──  all c : Component, p : c.parts | p in Component => p.workstation not in c.workstation.*succ
inv1 C:     ├──  Worker = Human + Robot
inv2 B:     │   └──  workers in Workstation some -> one Worker
inv2 C:     │       └──  workers in Workstation one -> some Worker
inv3 B:     │           └──  workstation in Component one -> set Workstation
inv4 C:     │               └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                   └──  all w: Workstation | w.workers in Human or w.workers in Robot
inv6 B:     │                       └──  Component<:parts not in iden
inv6 B:     │                           └──  all c: Component | c<:parts not in iden
inv6 U:     │                               └──  all c: Component | c not in c.parts
inv6 U:     │                                   └──  iden not in Component<:parts
inv6 U:     │                                       └──  all c: Component | c not in c.parts
inv6 C:     │                                           └──  all c: Component | c not in c.^parts
inv7 C:     │                                               └──  all c: Component | all d: Dangerous | d in c.parts => c in Dangerous
inv8 O:     │                                                   └──  no Component.workstation & workers.Human
inv8 C:     │                                                       └──  no Dangerous.workstation & workers.Human
inv9 U:     │                                                           └──  one w: Workstation | Workstation in w.*succ
inv9 U:     │                                                               └──  all b: begin | Workstation in b.*succ
inv9 B:     │                                                                   └──  all b: begin | Workstation in b.*succ all e: end | e in (Workstation-e).*succ
inv9 B:     │                                                                       └──  all w: Workstation | w = begin or w = end all b: begin | Workstation in b.*succ
inv9 U:     │                                                                           └──  all w: Workstation | w = begin or w = end or end in w.^succ all b: begin | Workstation in b.*succ
inv9 U:     │                                                                               └──  all w: Workstation | w = begin or w = end or end in w.^succ
inv9 B:     │                                                                                   └──  #Workstation > 1 all w: Workstation | w = begin or w = end or end in w.^succ
inv9 U:     │                                                                                       └──  all w: Workstation | w = begin or w = end or end in w.^succ
inv9 U:     │                                                                                           └──  all w: Workstation | w = begin => Workstation in w.*succ
inv10 S:    │                                                                                               └──  all c : Component | all p : c.parts |
inv9 B:     │                                                                                                   └──  all w:Workstation-end | one succ all w: Workstation | w = begin => Workstation in w.*succ
inv9 U:     │                                                                                                       └──  all w:Workstation-end | one w.succ all w: Workstation | w = begin => Workstation in w.*succ
inv10 S:    │                                                                                                           └──  all c : Component | all p : c.parts |
inv10 B:    │                                                                                                               └──  all c : Component | all p : c.parts & Component | some (c.workstation) => some(p.workstation)
inv9 C:     │                                                                                                                   └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv10 B:    │                                                                                                                       └──  all c : Component | all p : c.parts & Component | some (c.workstation) => some(p.workstation)
4MHWSxJXuMyPMprJu M:     │                                                                                                                           └──  user added theme options. same as previous submission
7hKjsTsGqXxiRWC4g M:     │                                                                                                                               └──  user added theme options. same as previous submission
inv10 B:    │                                                                                                                                   └──  all c : Component | all p : c.parts & Component | some (c.workstation) => after(some(p.workstation))
inv10 B:    │                                                                                                                                       └──  all c : Component | all p : c.parts & Component | some (c.workstation) => before(some(p.workstation))
inv10 B:    │                                                                                                                                           ├──  all c : Component | all p : c.parts | some (c.workstation) => before(some(p.workstation))
inv10 B:    │                                                                                                                                           │   └──  all c : Component | all p : c.parts & Component | some (c.workstation) => some(p.workstation) and all w: p.workstation | c.workstation in w.^succ
inv10 B:    │                                                                                                                                           │       └──  all c : Component | all p : c.parts | some (c.workstation) => some(p.workstation) and all w: p.workstation | c.workstation in w.^succ
inv10 B:    │                                                                                                                                           │           └──  all c : Component | all p : c.parts & Component | some (c.workstation) => some(p.workstation) and all w: p.workstation | c.workstation in w.^succ
Pv4hWdDL5pN5ggLZT M:     │                                                                                                                                           │               ├──  user added theme options. same as previous submission
LukEPxpkvbLA7fgZz M:     │                                                                                                                                           │               │   └──  user added theme options. same as previous submission
inv10 B:    │                                                                                                                                           │               └──  all c : Component | all p : c.parts & Component | c.workstation in p.workstation.^succ
twxNeB5YzqXnBBPbt M:     │                                                                                                                                           └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker in Human + Robot
inv2 C:     │   └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 U:     │       └──  all c : Component | some c.workstation
inv3 C:     │           └──  all c : Component | one c.workstation
inv4 C:     │               └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                   └──  all h : Human, r : Robot, w : Workstation | h in w.workers <=> r not in w.workers
inv6 U:     │                       └──  all c : Component | c not in c.parts
inv6 C:     │                           └──  all c : Component | c not in c.(^parts)
inv7 O:     │                               └──  all c : Component | some Dangerous & c.(^parts) => c in Dangerous
inv8 C:     │                                   └──  all d : Dangerous | no Human & d.workstation.workers
inv9 U:     │                                       └──  all w : Workstation | w not in w.(^succ)
inv9 U:     │                                           └──  one begin one end  all w : Workstation | w not in w.(^succ) all w : Workstation | w in end => no w.succ
inv9 U:     │                                               └──  one begin one end  all w : Workstation | w not in w.(^succ) all w : Workstation | w in end => no w.succ and w not in end => one w.succ
inv9 U:     │                                                   └──  one begin one end  all w : Workstation | w not in w.(^succ) all w : Workstation | w in end => (no w.succ and w not in end => one w.succ)
inv9 U:     │                                                       └──  one begin one end  all w : Workstation | w not in w.(^succ) all w : Workstation | w in end => (no w.succ and (w not in end => one w.succ))
inv9 U:     │                                                           └──  one begin one end  all w : Workstation | w not in w.(^succ) all w : Workstation | (w in end => no w.succ) and (w not in end => one w.succ)
inv9 U:     │                                                               └──  one begin one end  all w : Workstation | w in begin => w not in Workstation.succ all w : Workstation | w not in w.(^succ) all w : Workstation | (w in end => no w.succ) and (w not in end => one w.succ)
inv9 C:     │                                                                   └──  one begin one end  all w : Workstation | w in begin => w not in Workstation.succ all w,w2 : Workstation | w in w2.succ => w not in (Workstation -w2).succ all w : Workstation | w not in w.(^succ) all w : Workstation | (w in end => no w.succ) and (w not in end => one w.succ)
inv10 O:    │                                                                       └──  all c : Component | (Component & c.parts).workstation in c.(^succ)
inv10 O:    │                                                                           └──  all c : Component | (Component & c.parts).workstation in c.(^succ)
inv10 O:    │                                                                               └──  all c : Component | (Component & (c.parts)).workstation in c.(^succ)
inv10 B:    │                                                                                   └──  all c : Component | (Component & c.parts).workstation in c.workstation.(^succ)
inv1 S:     ├──  Worker in (Robots+Human)
inv1 C:     │   └──  Worker in (Robot+Human)
inv1 C:     │       └──  all w : Worker | w in (Robot + Human)
inv1 U:     ├──  all w: Worker | w in Human => w not in Robot
inv1 C:     │   └──  all w: Worker | w in Human => w not in Robot all w: Worker | w not in Human => w in Robot
inv1 C:     │       └──  all w: Worker | w in Human <=> w not in Robot
inv1 C:     │           └──  all w: Worker | w in Human <=> w not in Robot
inv2 S:     │               └──  all ws: Workstation | some w.workers all w: Worker | some workers.w
inv2 S:     │                   └──  all ws: Workstation | some w.workers all w: Worker | w in workers
inv2 U:     │                       └──  all ws: Workstation | some ws.workers all w: Worker | some workers.w
inv2 T:     │                           └──  all ws: Workstation | some ws.workers all w: Worker | w in workers
inv2 U:     │                               └──  all ws: Workstation | some ws.workers all w: Worker | w in Workstation.workers
inv2 U:     │                                   └──  all ws: Workstation | some ws.workers all w: Worker, ws1, ws2: Workstation | w in ws1.workers && w in ws2.workers => ws1=ws2
inv2 T:     │                                       └──  all ws: Workstation | some ws.workers all w: Worker | some w in Workstation.workers
inv2 U:     │                                           └──  all ws: Workstation | some ws.workers all w: Worker | some workers.w
inv2 S:     │                                               └──  all ws: Workstation | some ws.workers all w: Worker, ws: workStation | w in ws.workers
inv2 B:     │                                                   └──  all ws: Workstation | some ws.workers all w: Worker, ws: Workstation | w in ws.workers
inv2 C:     │                                                       └──  all ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 S:     │                                                           └──  all c: Component | one ws: Worstation  | ws in c.workstation
inv2 C:     │                                                               └──  all ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 C:     │                                                                   └──  all c: Component | one ws: Workstation  | ws in c.workstation
inv3 U:     │                                                                       └──  all c: Component | some ws: Workstation  | ws in c.workstation
inv4 T:     │                                                                           └──  all c: Component | some c.parts all m: Material | none m.parts
inv4 T:     │                                                                               └──  all c: Component | some c.parts all m: Material | none m.parts
inv4 C:     │                                                                                   └──  all c: Component | some c.parts all m: Material | not some m.parts
inv4 C:     │                                                                                       └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 O:     │                                                                                           └──  all ws: Workstation, r: Robot, h: Human | r in ws.workers <=> h not in ws.workers
inv6 C:     │                                                                                               └──  all c: Component | c not in c.^(parts)
inv6 C:     │                                                                                                   └──  all c: Component | c not in c.^(parts)
inv4 C:     │                                                                                                       └──  all c: Component | some c.parts no Material.parts
inv4 B:     │                                                                                                           └──  some Component.parts no Material.parts
inv6 C:     │                                                                                                               └──  all c: Component | c not in c.^(parts)
inv7 O:     │                                                                                                                   └──  all c: Component, p: Product | p in Dangerous && p in c.^(parts) => c in Dangerous
inv8 S:     │                                                                                                                       └──  all c: Component| c in Dangerous => c.workstation.workers not in Humans
inv8 B:     │                                                                                                                           └──  all c: Component | c in Dangerous => c.workstation.workers not in Human
inv9 B:     │                                                                                                                               └──  Workstation.*(succ)	in begin+end
inv9 B:     │                                                                                                                                   └──  all w: Workstation | w.*(succ) in begin+end && w not in w.^(succ)
inv9 U:     │                                                                                                                                       └──  all w: Workstation | w not in w.^(succ)
inv9 B:     │                                                                                                                                           └──  all w: Workstation | w.*(succ) in begin+end && w not in w.^(succ)
inv9 O:     │                                                                                                                                               └──  all w: Workstation | w in begin && w.^(succ) in end && w not in w.^(succ)
inv9 T:     │                                                                                                                                                   └──  all w: workstation | w not in Workstation.succ => w in begin all w: Workstation | w not in w.^(succ) all w: Workstation | no w.succ => w in end
inv9 U:     │                                                                                                                                                       └──  all w: Workstation | w not in Workstation.succ => w in begin all w: Workstation | w not in w.^(succ) all w: Workstation | no w.succ => w in end
inv9 C:     │                                                                                                                                                           └──  all w: Workstation | w not in Workstation.succ => w in begin all w: Workstation | w not in w.^(succ) all w: Workstation | lone w.succ all w: Workstation | no w.succ => w in end
inv9 U:     │                                                                                                                                                               └──  all w: Workstation | w not in Workstation.succ => w in begin  all w: Workstation | lone w.succ all w: Workstation | no w.succ => w in end
inv9 C:     │                                                                                                                                                                   └──  all w: Workstation | w not in Workstation.succ => w in begin all w: Workstation | w not in w.^(succ) all w: Workstation | lone w.succ all w: Workstation | no w.succ => w in end
inv10 O:    │                                                                                                                                                                       └──  all w: Workstation, c: Component, p: Product | p in c.^(parts) => p in w && c in w.^(succ)
inv10 O:    │                                                                                                                                                                           └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2 && w.^(succ) in c1
inv10 B:    │                                                                                                                                                                               └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation
inv10 B:    │                                                                                                                                                                                   └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B:    │                                                                                                                                                                                       └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B:    │                                                                                                                                                                                           └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation
inv10 O:    │                                                                                                                                                                                               └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w.^(succ) not in c2.workstation
inv10 B:    │                                                                                                                                                                                                   └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B:    │                                                                                                                                                                                                       └──  all w: Workstation, c: Component | w in c.^(parts).workstation && w.^(succ) in c.workstation
inv10 B:    │                                                                                                                                                                                                           └──  all w: Workstation, c: Product | w in c.^(parts).workstation && w.^(succ) in c.workstation
inv10 B:    │                                                                                                                                                                                                               └──  all w: Workstation, c: Product | some c.parts => w in c.^(parts).workstation && w.^(succ) in c.workstation
inv1 C:     │                                                                                                                                                                                                                   └──  all w: Worker | w in Human <=> w not in Robot
inv10 B:    │                                                                                                                                                                                                                       └──  all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation && w.^(succ) in p.workstation
inv10 B:    │                                                                                                                                                                                                                           └──  all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation-p.workstation && w.^(succ) in p.workstation-p.^(parts).workstation
inv10 B:    │                                                                                                                                                                                                                               └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B:    │                                                                                                                                                                                                                                   └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B:    │                                                                                                                                                                                                                                       └──  all w: Workstation, c1, c2: Product | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 O:    │                                                                                                                                                                                                                                           └──  all w: Workstation, c1, c2: Component | c1 in c2.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
fQ42nbyfnKdYsSWFA N:     │                                                                                                                                                                                                                                               └──  user added extra characters to pred name
qKWJFNiNL3swDnwy2 N:     │                                                                                                                                                                                                                                                   └──  user added extra characters to pred name
inv10 B:    │                                                                                                                                                                                                                                                       └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B:    │                                                                                                                                                                                                                                                           └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.succ in c1.workstation-c2.workstation
inv10 B:    │                                                                                                                                                                                                                                                               └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation-p.workstation && w.^(succ) in p.workstation-p.^(parts).workstation
inv10 B:    │                                                                                                                                                                                                                                                                   └──  all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B:    │                                                                                                                                                                                                                                                                       └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                           └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.parts => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                               └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                                   └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ) && w1 != w2
inv10 B:    │                                                                                                                                                                                                                                                                                       └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ) && w1 != w2
inv10 B:    │                                                                                                                                                                                                                                                                                           └──  all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 O:    │                                                                                                                                                                                                                                                                                               └──  all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 O:    │                                                                                                                                                                                                                                                                                                   └──  all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                                                       └──  all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w2 in w1.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                                                           └──  all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 S:    │                                                                                                                                                                                                                                                                                                               └──  all w1, w2: Workstation, c1, c2: Components | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                                                                   └──  all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 O:    │                                                                                                                                                                                                                                                                                                                       └──  all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ)
inv10 O:    │                                                                                                                                                                                                                                                                                                                           └──  all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ)
inv10 B:    │                                                                                                                                                                                                                                                                                                                               └──  all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv1 C:     ├──  all w:Worker | w in Robot or w in Human
inv2 U:     │   └──  all w: Workstation | w.workers != none
inv2 S:     │       └──  all w: Workstation | w.workers != none and (some w1: Workstation, all p:Worker | p in w1.workers)
inv2 B:     │           └──  all w: Workstation | w.workers != none and (some w1: Workstation | all p:Worker | p in w1.workers)
inv2 B:     │               └──  all w: Workstation | w.workers != none and (one w1: Workstation | all p:Worker | p in w1.workers)
inv2 B:     │                   └──  all w: Workstation | w.workers != none and (all w1: Workstation | one p:Worker | p in w1.workers)
inv3 S:     │                       └──  all c: Component, one w: Workstation | c in w.begin
inv3 T:     │                           └──  all c: Component | one w: Workstation | c in w.begin
inv3 O:     │                               └──  all c: Component | one w: Workstation | c in begin
inv3 B:     │                                   └──  all c: Component | one w: Workstation | c.workstation in begin
inv3 T:     │                                       └──  all c: Component | one w: Workstation | c.w in begin
inv3 T:     │                                           └──  all c: Component | one w: Workstation | w in c.begin
inv5 E:     │                                               └──   
inv5 E:     │                                                   └──   
inv4 U:     │                                                       └──  all c:Component, m:Material | (c.parts != none) and (m.parts = none)
inv4 U:     │                                                           └──  all c:Component, m:Material | (c.parts not in none) and (m.parts in none)
inv5 C:     │                                                               └──  all w1: Workstation, r:Robot, h:Human | r in w1.workers implies h not in w1.workers
kR8E8uKpCa5S4gkK7 M:     │                                                                   └──  user added theme options. same as previous submission
inv6 U:     │                                                                       └──  all p: Product | p in Component implies p not in p.parts
inv6 U:     │                                                                           └──  all c1,c2: Component | c1 in c2.parts implies c1!=c2
inv2 B:     │                                                                               └──  all ws: Workstation | some w: Worker | w in ws.workers and (all w1: Workstation | one p:Worker | p in w1.workers)
inv2 B:     │                                                                                   └──  (all ws: Workstation | some w: Worker | w in ws.workers) and (all w1: Workstation | one p:Worker | p in w1.workers)
inv2 B:     │                                                                                       └──  (all ws: Workstation | some w: Worker | w in ws.workers) and (one w1: Workstation | all p:Worker | p in w1.workers)
inv2 B:     │                                                                                           └──  (all ws: Workstation | some w: Worker | ws->w in workers) and (one w1: Workstation | all p:Worker | w1->p in workers)
inv2 C:     │                                                                                               └──  (all ws: Workstation | some w: Worker | ws->w in workers) and (all w:Worker |one ws: Workstation | ws->w in workers)
inv2 C:     │                                                                                                   └──  (all ws: Workstation | some w: Worker | w in ws.workers) and (all w:Worker |one ws: Workstation | w in ws.workers)
inv3 C:     │                                                                                                       └──  all c: Component | one ws: Workstation | ws in c.workstation
inv4 U:     │                                                                                                           └──  all c:Component | (c.parts != none) and (all m: Material | m.parts = none)
inv4 S:     │                                                                                                               └──  all c:Component, some p:Product | (p in c.parts) and (all m: Material, p: Product | p not in m.parts)
inv4 U:     │                                                                                                                   └──  all c:Component | some p:Product | (p in c.parts) and (all m: Material, p: Product | p not in m.parts)
inv4 S:     │                                                                                                                       └──  all c:Component | some p:Product | (p in c.parts) and (all m: Material, no p: Product | p in m.parts)
inv4 U:     │                                                                                                                           └──  all c:Component | some p:Product | (p in c.parts) and (all m: Material | no p: Product | p in m.parts)
inv4 C:     │                                                                                                                               └──  (all c:Component | some p:Product | p in c.parts) and (all m: Material | no p: Product | p in m.parts)
inv5 C:     │                                                                                                                                   └──  all w1: Workstation, r:Robot, h:Human | r in w1.workers implies h not in w1.workers
inv6 U:     │                                                                                                                                       └──  all c1,c2: Component | c1 in c2.parts implies c1!=c2
inv6 U:     │                                                                                                                                           └──  all c: Component | c not in c.parts
inv6 C:     │                                                                                                                                               └──  all c: Component | c not in c.^(parts)
inv7 B:     │                                                                                                                                                   └──  all c: Component | Dangerous in c.parts implies c in Dangerous
inv7 C:     │                                                                                                                                                       └──  all c: Component, p: Product |  p in Dangerous and p in c.parts implies c in Dangerous
inv8 O:     │                                                                                                                                                           └──  all c: Component, w: Worker | c in Dangerous implies w in Robot
inv8 O:     │                                                                                                                                                               └──  all c: Component, w: Worker, ws: Workstation | c in Dangerous and ws in c.workstation implies w in Robot and w in ws.workers
inv8 O:     │                                                                                                                                                                   └──  all c: Component, w: Worker, ws: Workstation | c in Dangerous and ws in c.workstation and w in ws.workers implies w in Robot
inv9 S:     │                                                                                                                                                                       └──  all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ) all ws: Workstation | ws not in ws.succ all ws: Workstation | ws not in end implies one w.succ
inv9 U:     │                                                                                                                                                                           └──  all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ) all ws: Workstation | ws not in ws.succ all ws: Workstation | ws not in end implies one ws.succ
inv9 U:     │                                                                                                                                                                               └──  all ws1,ws2: Workstation | (ws2 in begin and ws1 != ws2) implies ws1 in ws2.^(succ) all ws: Workstation | ws not in ws.succ all ws: Workstation | ws not in end implies one ws.succ
inv9 C:     │                                                                                                                                                                                   └──  all ws1,ws2: Workstation | (ws2 in begin and ws1 != ws2) implies ws1 in ws2.^(succ) all ws: Workstation | ws not in ws.^(succ) all ws: Workstation | ws not in end implies one ws.succ
inv10 B:    │                                                                                                                                                                                       └──  all c1,c2: Component, ws1,ws2: Workstation | ws1 in c1.workstation and ws2 in c2.workstation and c2 in c1.^(parts) implies ws1 in ws2.^(succ)
mKKuHJzaJsba9jYGQ M:     │                                                                                                                                                                                           └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker in Human+Robot
inv2 U:     │   └──  Workstation in workers.Worker and Worker in Workstation.workers
inv2 U:     │       └──  Workstation in workers.Worker and all w : Worker | lone workers.w
inv2 C:     │           └──  Workstation in workers.Worker and all w : Worker | one workers.w
inv3 C:     │               └──  all c : Component | one c.workstation
inv4 S:     │                   └──  Components in parts.Product
inv3 U:     │                       └──  iden :> Component in workstation.~workstation
inv3 B:     │                           └──  iden :> Component = workstation.~workstation
inv3 C:     │                               └──  (iden :> Component in workstation.~workstation) and  (~workstation.workstation in iden)
inv4 S:     │                                   └──  (iden :> Components in parts.~parts) and (no Material in parts.~parts)
inv4 T:     │                                       └──  (iden :> Component in parts.~parts) and (no Material in parts.~parts)
inv4 C:     │                                           └──  (iden :> Component in parts.~parts) and (no iden :> Material & parts.~parts)
inv5 O:     │                                               └──  all w : Workstation | w.workers in Human or w.workers in Robot
jpshnkBgJapHaN2H2 M:     │                                                   └──  user added theme options. same as previous submission
inv5 T:     ├──  all wb : Workstation | Robot in wb.workers implies no Human in wb.workers
inv5 T:     │   └──  all wb : Workstation | (Robot in wb.workers) implies (no Human in wb.workers)
inv1 E:     │       └──   
inv5 B:     │           └──  all wb : Workstation | (Robot in wb.workers) implies (Human not in wb.workers)
inv5 B:     │               └──  all wb : Workstation | (Robot in wb.workers) implies (Human not in wb.workers) all wb : Workstation | (Human in wb.workers) implies (Robot not in wb.workers)
inv5 B:     │                   └──  all wb : Workstation | (Robot in wb.workers) implies (Human not in wb.workers)
inv5 B:     │                       └──  all wb : Workstation | one r : Robot | one h : Human  | (r in wb.workers) implies (h not in wb.workers) all wb : Workstation | one r : Robot | one h : Human  | (h in wb.workers) implies (r not in wb.workers)
inv5 B:     │                           └──  all wb : Workstation | some r : Robot | some h : Human  | (r in wb.workers) implies (h not in wb.workers) all wb : Workstation | some r : Robot | some h : Human  | (h in wb.workers) implies (r not in wb.workers)
inv5 S:     │                               └──  None
inv5 S:     │                                   └──  None
inv5 S:     │                                       └──  None
inv5 S:     │                                           └──  None
inv5 S:     │                                               └──  None
inv5 S:     │                                                   └──  None
inv5 S:     │                                                       └──  None
inv6 C:     │                                                           └──  all c : Component | no (c & (c.^parts))
inv6 C:     │                                                               └──  all c : Component | no (c & c.^parts)
inv7 O:     │                                                                   └──  all c : Component | no (c.parts & Dangerous)
inv7 B:     │                                                                       └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv5 S:     │                                                                           └──  all wb : Workstation | some h : Human
inv7 C:     │                                                                               └──  all c : Component | some (c.parts & Dangerous) implies c in Dangerous
inv8 S:     │                                                                                   └──  all c : Component | c in Dangerous implies c in
inv8 S:     │                                                                                       └──  all c : Component | c in Dangerous implies c in
inv8 B:     │                                                                                           └──  all c : Component | all wb : Workstation | one h : Human | (c in Dangerous and h in wb.workers) implies wb not in c.workstation
inv5 S:     │                                                                                               └──  all wb : Workstation | sb.workers in Human or wb.workers in Robot
inv8 S:     │                                                                                                   └──  all c : Component | c in dangerous implies no ( c.worstaion.workers & Human )
inv8 S:     │                                                                                                       └──  all c : Component | c in Dangerous implies no ( c.worstaion.workers & Human )
inv8 S:     │                                                                                                           └──  all c : Component | c in Dangerous implies no ( c.workstaion.workers & Human )
inv8 S:     │                                                                                                               └──  all c : Component | c in Dangerous implies no ( c.workstaion.workers & Human )
inv8 C:     │                                                                                                                   └──  all c : Component | c in Dangerous implies no ( c.workstation.workers & Human )
inv8 B:     │                                                                                                                       └──  all c : Component | c in Dangerous implies ( c.workstation.workers in Human )
inv8 B:     │                                                                                                                           └──  all c : Component | c in Dangerous implies ( c.workstation.workers in Human )
inv8 S:     │                                                                                                                               └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human )
inv8 B:     │                                                                                                                                   └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv3 U:     │                                                                                                                                       └──  all c : Component | one wb : Workstation | c.workstation in wb
inv3 C:     │                                                                                                                                           └──  all c : Component | one wb : Workstation | one (c.workstation & wb)
inv3 C:     │                                                                                                                                               └──  all c : Component | one (c.workstation & Workstation)
inv1 S:     │                                                                                                                                                   └──  all w : Workers | w in Human or w in Robot
inv1 C:     │                                                                                                                                                       └──  all w : Worker | w in Human or w in Robot
inv2 S:     │                                                                                                                                                           └──  all wb : Worstation | (wb.workers & Worker)
inv2 T:     │                                                                                                                                                               └──  all wb : Workstation | (wb.workers & Worker)
inv2 U:     │                                                                                                                                                                   └──  all wb : Workstation | some (wb.workers & Worker)
inv2 T:     │                                                                                                                                                                       └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) and (w & workers)
inv2 T:     │                                                                                                                                                                           └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) and one (w & workers)
inv2 B:     │                                                                                                                                                                               └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) and one (w & wb.workers)
inv2 T:     │                                                                                                                                                                                   └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | one (workers & w)
inv2 T:     │                                                                                                                                                                                       └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | one (workers & w)
inv2 T:     │                                                                                                                                                                                           └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | one (workers & w)
inv2 S:     │                                                                                                                                                                                               └──  all wb : Workstation | w : Worker | some (wb.workers & Worker) and wb->w in workers
inv2 S:     │                                                                                                                                                                                                   └──  all wb : Workstation | w : Worker | some (wb.workers & Worker) and wb->w
inv2 B:     │                                                                                                                                                                                                       └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) and wb->w in workers
inv2 U:     │                                                                                                                                                                                                           └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker)
inv2 T:     │                                                                                                                                                                                                               └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) all w : Worker | workers.w
inv2 T:     │                                                                                                                                                                                                                   └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) all w : Worker | workers.w
inv2 U:     │                                                                                                                                                                                                                       └──  all wb : Workstation | all w : Worker | some (wb.workers & Worker) all w : Worker | one (w & Workstation.workers)
inv2 S:     │                                                                                                                                                                                                                           └──  all wb : Workstationn | some (wb.workers & Worker) all w : Worker | one (w & Workstation.workers)
inv2 U:     │                                                                                                                                                                                                                               └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | one (w & Workstation.workers)
inv2 B:     │                                                                                                                                                                                                                                   └──  all wb : Workstation | one (wb.workers & Worker) all w : Worker | one (w & Workstation.workers)
inv2 U:     │                                                                                                                                                                                                                                       └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | (w in Workstation.workers)
inv2 O:     │                                                                                                                                                                                                                                           └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | (w in Workstation.workers) all wb1,wb2 : Workstation | all w : Worker | (w in wb1.workers) implies (w not in wb2.workers)
inv2 O:     │                                                                                                                                                                                                                                               └──  all wb : Workstation | some (wb.workers & Worker) all w : Worker | one (w & Workstation.workers) all wb1,wb2 : Workstation | all w : Worker | (w in wb1.workers) implies (w not in wb2.workers)
inv1 E:     ├──   
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 T:     │   └──  all w: Workstation | some x : Worker | w->x
inv2 T:     │       └──  all w: Workstation | some x : Worker | w->x
inv2 U:     │           └──  all w: Workstation | some x : Worker | w->x in workers
inv2 S:     │               └──  all w: Workstation | some x : Worker | w->x in workers all x: Worker | some x: Workstation | x->w in workers
inv2 U:     │                   └──  all w: Workstation | some x : Worker | w->x in workers all w: Worker | some x: Workstation | x->w in workers
inv2 C:     │                       └──  all w: Workstation | some x : Worker | w->x in workers all w: Worker | one x: Workstation | x->w in workers
inv3 C:     │                           └──  all c : Component | one w : Workstation | c->w in workstation
inv4 S:     │                               └──  all c : Components | some p : Product | c->p in parts all m : Material | all p: Product | m->p not in parts
inv4 C:     │                                   └──  all c : Component | some p : Product | c->p in parts all m : Material | all p: Product | m->p not in parts
inv5 T:     │                                       └──  all h: Human | all w : Workstation | w->h in workers implies all r : Robot | w->r not in w
inv5 C:     │                                           └──  all h: Human | all w : Workstation | w->h in workers implies all r : Robot | w->r not in workers
inv6 U:     │                                               └──  all c0, c1 : Component | c0->c1 in parts implies c0!=c1
inv6 U:     │                                                   └──  all c0, c1 : Component | c0->c1 in parts implies c0!=c1 all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 U:     │                                                       └──  all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 U:     │                                                           └──  all c0, c1 : Component | c0->c1 in parts implies c0!=c1 all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 C:     │                                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                                   └──  all c : Component | all p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv8 B:     │                                                                       └──  all c : Component |  c in Dangerous implies c.workstation.workers not in Human
inv9 S:     │                                                                           └──  all w0, w1 : Workstations | w0 in begin and w0!=w1 implies w1 in w0.^parts all w : Workstation | w not in w.^succ all w0, w1 : Workstation | w0 in end and w0!=w1 implies w0->w1 not in succ
inv9 O:     │                                                                               └──  all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts all w : Workstation | w not in w.^succ all w0, w1 : Workstation | w0 in end and w0!=w1 implies w0->w1 not in succ
inv9 O:     │                                                                                   └──  all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts all w : Workstation | w not in w.^succ all w0 : Workstation | w0 in end implies all w1 : Workstation | w0->w1 not in succ
inv9 S:     │                                                                                       └──  None
inv9 S:     │                                                                                           └──  None
inv9 O:     │                                                                                               └──  all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                   └──  all w0, w1 : Workstation | w0 in begin and w1!=w0 implies w1 in w0.^succ all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                       └──  all c0, c1 : Component | all w0, w1 : Workstation | c0->w0 in workstation and c1->w1 in workstation and c1 in c0.^parts implies w0 in w1.^succ
inv1 S:     ├──  Workers in (Human + Robot)
inv1 C:     │   └──  Worker in (Human + Robot)
inv2 U:     │       └──  some Workstation.workers some workers.Worker
inv2 U:     │           └──  some Workstation.workers all w : Worker | workers.w in Workstation
inv2 U:     │               └──  some Workstation.workers all w : Worker | w in Workstation.workers
inv2 U:     │                   └──  some Workstation.workers some workers.Worker all w : Worker | lone workers.w
inv2 S:     │                       └──  some Workstation.workers all w : Worker | lone workers.w and w in Workstation.worker
inv2 U:     │                           └──  some Workstation.workers all w : Worker | lone workers.w and w in Workstation.workers
inv2 U:     │                               └──  some Workstation.workers all w : Worker | lone workers.w and w in Workstation.workers
inv2 U:     │                                   └──  some Workstation.workers all w : Worker | lone workers.w
inv2 U:     │                                       └──  some Workstation.workers all w : Worker | one workers.w
inv2 C:     │                                           └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv4 C:     │                                               └──  no Material.parts all c : Component | some c.parts
inv5 B:     │                                                   └──  all w : Workstation | (w.workers - Human) not in Robot and (w.workers - Robot) not in Human
inv5 C:     │                                                       └──  all r : Robot | r not in (workers.Human).workers all h : Human | h not in (workers.Robot).workers
inv6 U:     │                                                           └──  all c : Component | c not in c.parts
inv6 C:     │                                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                                   └──  all c : Component | some (c.*parts & Dangerous) implies c in Dangerous
inv8 O:     │                                                                       └──  all c : Component & Dangerous | c.workstation.workers in Robot
inv9 O:     │                                                                           └──  all w : Workstation | lone w.succ Workstation in begin.^succ no end.succ
inv9 O:     │                                                                               └──  all w : Workstation | lone w.succ Workstation in begin.^succ no end.succ begin not in end
inv9 B:     │                                                                                   └──  Workstation in begin.^succ no end.succ
inv9 B:     │                                                                                       └──  Workstation = begin.^succ no end.succ
inv9 O:     │                                                                                           └──  all w : Workstation | w in begin.^succ and w not in w.^succ no end.succ
Qh5tdwYwQT5rh5MoJ M:     │                                                                                               └──  user added theme options. same as previous submission
inv3 C:     │                                                                                                   └──  all c : Component | one c.workstation
inv9 C:     │                                                                                                       └──  Workstation in begin.*succ no end.^succ all w : Workstation | lone w.succ
inv10 O:    │                                                                                                           └──  all c : Component | c.parts in begin.*succ - c.workstation.*succ
inv10 O:    │                                                                                                               └──  all c : Component | c.parts in begin.*succ - c.workstation.^succ
inv10 B:    │                                                                                                                   └──  all c : Component | c.parts.workstation in c.workstation.^succ
inv10 B:    │                                                                                                                       └──  all c : Component | c.parts.workstation in c.workstation.*succ
inv10 B:    │                                                                                                                           └──  all c : Component | c.parts.workstation in c.workstation.^succ
inv10 B:    │                                                                                                                               ├──  all c : Component | c.parts.workstation in (begin.*succ - c.workstation.*succ)
hp9cz3Cr4PxnwPJqA M:     │                                                                                                                               │   └──  user added theme options. same as previous submission
tQRTSPYE9j8nsGtP5 M:     │                                                                                                                               └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker in Robot + Human
inv1 C:     │   └──  Worker in Robot + Human
inv2 C:     │       └──  all w : Workstation | some w.workers all w : Worker | one w.~workers
inv3 C:     │           └──  all c : Component | one c.workstation
inv4 C:     │               └──  all c : Component | some c.parts all m : Material | no m.parts
inv4 C:     │                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 C:     │                       └──  no Robot.~workers & Human.~workers
inv5 C:     │                           └──  no Robot.~workers & Human.~workers
inv6 U:     │                               └──  all c : Component | c not in c.parts
inv6 C:     │                                   └──  all c : Component | c not in c.^parts
inv6 C:     │                                       └──  all c : Component | c not in c.^parts
inv7 B:     │                                           └──  all c : Component | c in Dangerous implies c.parts in Dangerous
inv7 B:     │                                               └──  all c : Product | c in Dangerous implies c.parts in Dangerous
inv7 B:     │                                                   └──  all c : Component | c in Dangerous implies c.^parts in Dangerous
inv7 B:     │                                                       └──  all c : Component | c in Dangerous implies c.^~parts in Dangerous
inv7 O:     │                                                           └──  all c : Product | c in Dangerous implies c.^~parts in Dangerous
inv7 O:     │                                                               └──  all p : Product | p in Dangerous implies p.^~parts in Dangerous
inv7 O:     │                                                                   └──  all p : Product | p in Dangerous implies p.^~parts in Dangerous
inv8 O:     │                                                                       └──  all c : Component | c in Dangerous implies (c.workstation).~workers not in Human
inv8 B:     │                                                                           └──  all c : Component | c in Dangerous implies (c.workstation).workers not in Human
inv1 C:     ├──  Worker in Human+Robot
inv2 T:     │   └──  all w : Workstation | some w.workers all w : Worker | one Workstation.w
inv2 C:     │       └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │           └──  all c : Component | one c.workstation
inv4 B:     │               └──  some Component.parts no Material.parts
inv4 T:     │                   └──  some Component.parts-iden no Material.parts
inv4 T:     │                       └──  some Component:>parts - iden no Material.parts
inv4 S:     │                           └──  some Components(Component:>parts - iden) no Material.parts
inv4 T:     │                               └──  some Component.(Component:>parts - iden) no Material.parts
inv4 C:     │                                   └──  all c : Component | some c.parts no Material.parts
inv4 C:     │                                       └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                                           └──  all w : Workstation | w.workers in Human iff w.workers not in Robot
inv5 O:     │                                               └──  all w : Workstation | w.workers in Human iff w.workers not in Robot
inv6 B:     │                                                   └──  parts not in iden
inv6 B:     │                                                       └──  no parts & iden
inv6 O:     │                                                           └──  no ^parts & iden
inv6 C:     │                                                               └──  all c : Component | c not in c.^parts
inv6 O:     │                                                                   └──  all c : Component | c not in c.*parts
inv6 O:     │                                                                       └──  no *parts & iden
inv6 O:     │                                                                           └──  no ^parts & iden
inv7 C:     │                                                                               └──  all c : Component | c in parts.Dangerous implies c in Dangerous
inv8 C:     │                                                                                   └──  no Dangerous.workstation.workers & Human
inv8 C:     │                                                                                       └──  all d : Dangerous | d not in workstation.workers.Human
inv8 C:     │                                                                                           └──  all d : Dangerous | d not in workstation.workers.Human
inv9 T:     │                                                                                               └──  no Workstation.^succ & iden
inv9 U:     │                                                                                                   └──  no ^succ & iden
inv9 O:     │                                                                                                       └──  all w : Workstation | w in begin.^succ no ^succ & iden
inv9 O:     │                                                                                                           └──  all w : Workstation | w in begin.^succ no ^succ & iden no end.succ
inv1 S:     ├──  all w : Workstation | w.workers in Human or w.worker in Robot
inv1 B:     │   └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv1 U:     │       └──  all ws : Workstation, w : Worker |w in ws.workers implies w in Robot or w in Human
inv1 U:     │           └──  all ws : Workstation, w : Worker | w in ws.workers implies (w in Robot or w in Human)
inv1 C:     │               └──  all w : Worker | w in Human or w in Robot
inv2 U:     │                   └──  some Workstation.workers all w : Worker | w in Workstation.workers
inv2 U:     │                       └──  some Workstation.workers all w : Worker | one ws : Workstation | w in ws.workers
inv2 T:     │                           └──  Workstation.workers all w : Worker | one ws : Workstation | w in ws.workers
inv2 C:     │                               └──  all w : Workstation| some w.workers all w : Worker | one ws : Workstation | w in ws.workers
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws : Workstation | some w1 : Worker | w1->ws in worker
inv2 O:     │       └──  all ws : Workstation | some w1 : Worker | w1->ws in workers
inv2 S:     │           └──  all ws : Workstation | some w1 : Worker | w1->ws in workers all w1 : Workers | lone ws : Workstation | w1 -> ws in workers
inv2 O:     │               └──  all ws : Workstation | some w1 : Worker | w1->ws in workers all w1 : Worker | lone ws : Workstation | w1 -> ws in workers
inv2 O:     │                   └──  (all ws : Workstation | some w1 : Worker | w1->ws in workers) and (all w1 : Worker | one ws : Workstation | w1 -> ws in workers)
inv2 C:     │                       └──  (all ws : Workstation | some w1 : Worker | ws->w1 in workers) and (all w1 : Worker | one ws : Workstation | ws -> w1 in workers)
inv2 C:     │                           └──  (all ws : Workstation | some w1 : Worker | ws->w1 in workers) (all w1 : Worker | one ws : Workstation | ws -> w1 in workers)
inv3 C:     │                               └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 S:     │                                   └──  all c : Component | c in parts|
inv4 S:     │                                       └──  all c : Component | some p in Product| c->p in parts|
inv4 S:     │                                           └──  all c : Component | some p in Product| c->p in parts
inv3 C:     │                                               └──  all c : Component | one ws : Workstation | c->ws in workstation
inv5 S:     │                                                   └──  all w1,w2 : Worker | all ws : workstation | (w1->ws in works and w2->ws in works) implies (w1,w2 in Human) or (w1,w2 in Robot)
inv5 S:     │                                                       └──  all w1,w2 : Worker | all ws : workstation | (w1->ws in works and w2->ws in works) implies (w1,w2 in Human) or (w1,w2 in Robot)
inv5 S:     │                                                           └──  all w1,w2 : Worker | all ws : workstation | (w1->ws in works and w2->ws in works) implies (w1,w2 in Human) or (w1,w2 in Robot)
inv5 S:     │                                                               └──  all w1,w2 : Worker | all ws : workstation | (w1->ws in works and w2->ws in works) implies (w1,w2 in Human)
inv3 C:     │                                                                   └──  all c : Component | one ws : Workstation | c->ws in workstation
inv5 E:     │                                                                       └──   
inv5 S:     │                                                                           └──  all w1,w2 : Worker | all ws : Workstation | (w1->ws in works and w2->ws in works) implies (w1,w2 in Human) or (w1,w2 in Robot)
inv5 S:     │                                                                               └──  all w1,w2 : Worker | all ws : Workstation | (w1->ws in works and w2->ws in works)
inv5 O:     │                                                                                   └──  all w1,w2 : Worker | all ws : Workstation | (w1->ws in workers and w2->ws in workers)
inv5 B:     │                                                                                       └──  all w1,w2 : Worker | all ws : Workstation | (ws->w1 in workers and ws->w2 in workers)
inv5 S:     │                                                                                           └──  all w1,w2 : Worker | all ws : Workstation | (ws->w1 in workers and ws->w2 in workers) implies (w1,w2 in Human) or (w1,w2 in Robot)
inv5 S:     │                                                                                               └──  None
inv5 S:     │                                                                                                   └──  None
inv5 O:     │                                                                                                       └──  all w1,w2 : Worker | all ws : Workstation | (ws->w1 in workers and ws->w2 in workers and w2 in Human) implies (w1 in Human)
inv4 U:     │                                                                                                           └──  all c : Component | some p : Product| c->p in parts
inv4 S:     │                                                                                                               └──  all c : Component | some p : Product| c->p in parts all m : Material | no p :  Product | c->p in parts
inv4 C:     │                                                                                                                   └──  all c : Component | some p : Product| c->p in parts all m : Material | no p :  Product | m->p in parts
inv6 S:     │                                                                                                                       └──  all c1 : Components | c not in parts
inv6 T:     │                                                                                                                           └──  all c : Component | c not in parts
inv4 C:     │                                                                                                                               └──  all c : Component | some p : Product| c->p in parts all m : Material | no p :  Product | m->p in parts
inv6 O:     │                                                                                                                                   └──  all c : Component |all p : Product| c->p not in parts
inv6 U:     │                                                                                                                                       └──  all c : Component | c not in c.parts
inv6 C:     │                                                                                                                                           └──  all c : Component | c not in c.^(parts)
inv7 C:     │                                                                                                                                               └──  all c : Component | all p : Product | (c->p in parts and p in Dangerous) implies c in Dangerous
inv7 C:     │                                                                                                                                                   └──  all c : Component | all p : Product | (c->p in parts and p in Dangerous) implies c in Dangerous
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws : Workstation | ws.workers != none and (all w : Worker | one ws : Workstation | w in wks.workers)
inv2 C:     │       └──  all ws : Workstation | ws.workers != none and (all w : Worker | one ws : Workstation | w in ws.workers)
inv3 T:     │           └──  all c : Component | one ws : Workstation | ws in c.Workstation
inv3 C:     │               └──  all c : Component | one ws : Workstation | ws in c.workstation
inv4 S:     │                   └──  all c : Component | all m : Materials | c.parts != none and m.parts = none
inv4 U:     │                       └──  all c : Component | all m : Material | c.parts != none and m.parts = none
inv4 C:     │                           └──  (all c : Component | some p : Product | p in c.parts) and (all m : Material | no p : Product | p in m.parts)
inv5 S:     │                               └──  all ws : Workstation | all w1, w2 : Workers | (w1+w2) in ws.workers implies (w1+w2) in Human or (w1+w2) in Robot
inv5 O:     │                                   └──  all ws : Workstation | all w1, w2 : Worker | (w1+w2) in ws.workers implies (w1+w2) in Human or (w1+w2) in Robot
inv6 C:     │                                       └──  all c : Component | c not in c.^(parts)
inv7 O:     │                                           └──  all c : Component | all d : Dangerous | d in c.^(parts) implies c in Dangerous
inv8 O:     │                                               └──  all c : Component | all w : Worker | all ws : Workstation | c in Dangerous and w in c.workstation.workers implies  w in Robot
inv8 O:     │                                                   └──  all c : Component | all w : Worker | c in Dangerous and w in c.workstation.workers implies  w in Robot
inv9 C:     │                                                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv1 U:     ├──  Workstation.workers in Human + Robot
inv1 C:     │   └──  Worker in Human + Robot
inv2 U:     │       └──  (all w : Workstation | some w.workers) and (all t : Worker | some workers.t)
inv2 C:     │           └──  (all w : Workstation | some w.workers) and (all t : Worker | one workers.t)
inv3 C:     │               └──  all c : Component | one c.workstation
inv3 E:     │                   └──   
inv3 E:     │                       └──   
inv3 C:     │                           └──  all c : Component | one c.workstation
inv4 C:     │                               └──  (all c : Component | some c.parts) and (all m : Material | no m.parts)
inv5 T:     │                                   └──  all ws : Workstation.workers | no (ws.Human) & (ws.Robot)
inv5 T:     │                                       └──  all ws : Workstation | no (ws.workers.Human) & (ws.workers.Robot)
inv5 U:     │                                           └──  all ws : Workstation.workers | no (ws&Human) & (ws&Robot)
inv5 S:     │                                               └──  all ws : Workstation | Human&Robot not in we.workers
inv5 O:     │                                                   └──  all ws : Workstation | Human&Robot not in ws.workers
inv5 S:     │                                                       └──  all ws : Workstation | some h : Human | h in ws.workers implies no ws.worker&Robot
inv5 B:     │                                                           └──  all ws : Workstation | some h : Human | h in ws.workers implies no ws.workers&Robot
inv5 O:     │                                                               └──  all ws : Workstation | some h : Human | h in ws.workers implies no ws.workers&Robot all ws : Workstation | some r : Robot | r in ws.workers implies no ws.workers&Human
inv1 S:     ├──  all w : Workers | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 T:     │       └──  all wks : Workstation | some w : workers | wks->w in workers all w : workers | one wks: Workstation | wks->w in workers
inv2 T:     │           └──  all wks : Workstation | some w : workers | w->wks in workers all w : workers | one wks: Workstation | w->wks in workers
inv2 T:     │               └──  all wks : Workstation | some w : workers | wks->w in workers all w : Workers | one wks: Workstation | wks->w in workers
inv2 S:     │                   └──  all wks : Workstation | some w : Workers | wks->w in workers all w : Workers | one wks: Workstation | wks->w in workers
inv2 C:     │                       └──  all wks : Workstation | some w : Worker | wks->w in workers all w : Worker | one wks: Workstation | wks->w in workers
inv3 C:     │                           └──  all c : Component | one wks: Workstation | c->wks in workstation
inv4 S:     │                               └──  all c : Components, p : Product | c->p in parts all m : Material , p : Product | m->p not in parts
inv4 O:     │                                   └──  all c : Component, p : Product | c->p in parts all m : Material , p : Product | m->p not in parts
inv4 C:     │                                       └──  all c : Component | some p : Product | c->p in parts all m : Material , p : Product | m->p not in parts
inv4 B:     │                                           └──  all c : Component | lone p : Product | c->p in parts all m : Material , p : Product | m->p not in parts
inv4 C:     │                                               └──  all c : Component | some p : Product | c->p in parts all m : Material , p : Product | m->p not in parts
inv5 O:     │                                                   └──  all p1,p2 : Worker, wks : Workstation | wks->p1 in workers and wks->p2 in workers and p1 in Human implies p2 in Human
inv6 U:     │                                                       └──  all c : Component | c->c not in parts
inv6 U:     │                                                           └──  no c : Component | c->c in parts
inv6 U:     │                                                               └──  all c : Component | c->c not in parts
inv6 B:     │                                                                   └──  all c : Component | c->c not in parts all c1,c2 : Component | c1->c2 not in parts
inv6 U:     │                                                                       └──  all c : Component | c->c not in parts
inv6 U:     │                                                                           └──  all c : Component | c->c not in parts and c=c
inv6 U:     │                                                                               └──  all c1,c2 : Component |c1=c2 implies c1->c2 not in parts
inv6 C:     │                                                                                   └──  all c : Component | c not in c.^(parts)
inv7 C:     │                                                                                       └──  all c:Component,p:Product | c->p in parts and p in Dangerous implies c in Dangerous
inv8 O:     │                                                                                           └──  all c:Component, w : Worker, wks : Workstation, p : Product | (c in Dangerous and c->wks in workstation and wks->w in workers) implies w in Robot
inv8 O:     │                                                                                               └──  all c:Component, w : Worker, wks : Workstation | (c in Dangerous and c->wks in workstation and wks->w in workers) implies w in Robot
inv1 C:     ├──  no Worker - Human - Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv2 U:     │           └──  all w: Workstation, ws: Worker | some w.workers and one workers.ws
inv2 U:     │               └──  all w: Workstation, ws: Worker | some w.workers and one workers.ws
inv2 U:     │                   └──  all w: Workstation, ws: Worker | some w.workers and one workers.ws
inv3 C:     │                       └──  all c : Component | one c.workstation
inv5 S:     │                           └──  all  w: WorkStation, wr:Workers | wr in Human implies no Worker-Robot and wr in Robot implies no Worker-Human
inv5 S:     │                               └──  all  w: Workstation, wr:Workers | wr in Human implies no Worker-Robot and wr in Robot implies no Worker-Human
inv5 U:     │                                   └──  all  w: Workstation, wr:Worker | wr in Human implies no Worker-Robot and wr in Robot implies no Worker-Human
inv5 U:     │                                       └──  all  wr:Worker | wr in Human implies no Worker-Robot and wr in Robot implies no Worker-Human
inv1 C:     ├──  all w:Worker | w in (Human + Robot)
inv1 C:     │   └──  all w:Worker | w in (Human + Robot)
inv2 C:     │       └──  all ws:Workstation | some w:Worker | ws->w in workers all w:Worker | one ws:Workstation | ws->w in workers
inv1 C:     │           └──  Worker in (Human + Robot)
inv3 C:     │               └──  all c:Component | one ws:Workstation | c->ws in workstation
inv4 O:     │                   └──  all c:Component | some p:Product | c->p in parts all m:Material | no parts
inv4 S:     │                       └──  all c:Component | some p:Product | c->p in parts all m:Material, p:Products | no m->p in parts
inv4 T:     │                           └──  all c:Component | some p:Product | c->p in parts all m:Material, p:Product | no m->p in parts
inv4 C:     │                               └──  all c:Component | some p:Product | c->p in parts all m:Material, p:Product |  m->p not in parts
inv4 C:     │                                   └──  all c:Component | some p:Product | c->p in parts all m:Material, p:Product | m->p not in parts
inv2 O:     │                                       └──  all ws:Workstation | some ws.workers all w:Worker | one workers.workers
inv2 C:     │                                           └──  all ws:Workstation | some ws.workers all w:Worker | one workers.w
inv3 S:     │                                               └──  all c:Component | one c->ws.workstation
inv3 C:     │                                                   └──  all c:Component | one c.workstation
inv2 S:     │                                                       └──  workers in one Workstation -> some Worker
inv2 C:     │                                                           └──  workers in Workstation one -> some Worker
inv3 B:     │                                                               └──  one Component.workstation
inv3 C:     │                                                                   └──  all c:Component | one c.workstation
inv4 C:     │                                                                       └──  all c:Component | some p:Product | c->p in parts all m:Material, p:Product | m->p not in parts
inv5 S:     │                                                                           └──  Workers & Robots not in workers
inv5 T:     │                                                                               └──  Worker & Robot not in workers
inv5 S:     │                                                                                   └──  all ws:Worstation | not some w1, w2:Worker | ws->w and w1 in Human and w2 in Robot and w1!=w2
inv5 S:     │                                                                                       └──  all ws:Workstation | not some w1, w2:Worker | ws->w and w1 in Human and w2 in Robot and w1!=w2
inv5 T:     │                                                                                           └──  all ws:Workstation | not some w1, w2:Worker | ws->w1 and ws->w2 and w1 in Human and w2 in Robot and w1!=w2
inv5 C:     │                                                                                               └──  all ws:Workstation | not some w1, w2:Worker | ws->w1 in workers and ws->w2 in workers and w1 in Human and w2 in Robot and w1!=w2
inv5 C:     │                                                                                                   └──  all ws:Workstation | not some w1, w2:Worker | (ws->w1 + ws->w2) in workers and w1 in Human and w2 in Robot and w1!=w2
inv6 T:     │                                                                                                       └──  all c:Component | no c->c in parts
inv6 U:     │                                                                                                           └──  all c:Component | c->c not in parts
inv6 B:     │                                                                                                               └──  one c:Component | c->c not in parts
inv6 B:     │                                                                                                                   └──  lone c:Component | c->c not in parts
inv6 U:     │                                                                                                                       └──  all c:Component | c->c not in parts
inv4 B:     │                                                                                                                           └──  Component in Component.parts
inv6 U:     │                                                                                                                               └──  all c:Component | c->c not in parts
inv4 S:     │                                                                                                                                   └──  Component in parts.Product and Material.part = none
inv4 C:     │                                                                                                                                       └──  Component in parts.Product and Material.parts = none
inv4 C:     │                                                                                                                                           └──  Component = parts.Product
inv6 T:     │                                                                                                                                               └──  all c:Component | c->c.*parts = none
inv6 T:     │                                                                                                                                                   └──  all c:Component | c->c not in c.*parts
inv6 T:     │                                                                                                                                                       └──  all c:Component | c->c not in c.parts
inv6 U:     │                                                                                                                                                           └──  all c:Component | c->c not in parts
inv5 O:     │                                                                                                                                                               └──  all w:Workstation | w.workers in Robot or w.workers in Human
inv5 C:     │                                                                                                                                                                   └──  all w:Workstation | no w.workers & Robot or no w.workers & Human
inv7 S:     │                                                                                                                                                                       └──  all c:Component |
inv7 S:     │                                                                                                                                                                           └──  all c:Component |
inv7 S:     │                                                                                                                                                                               └──  all c:Component |
inv7 S:     │                                                                                                                                                                                   └──  all c:Component |
inv7 S:     │                                                                                                                                                                                       └──  all c:Component |
inv7 S:     │                                                                                                                                                                                           └──  all c:Component |
inv7 S:     │                                                                                                                                                                                               └──  all c:Component |
inv6 C:     │                                                                                                                                                                                                   └──  all c:Component | c not in c.^parts
inv7 S:     │                                                                                                                                                                                                       └──  all c:Component.Dangerous |
inv6 O:     │                                                                                                                                                                                                           └──  no iden & ^parts
inv7 S:     │                                                                                                                                                                                                               └──  all c:Component | some d:Dangerous & c.^parts
inv7 S:     │                                                                                                                                                                                                                   └──  all c:Component | some d:Dangerous & c.^parts implies c in Dangerous
inv7 O:     │                                                                                                                                                                                                                       └──  all c:Component | some Dangerous & c.^parts implies c in Dangerous
inv7 O:     │                                                                                                                                                                                                                           └──  ^parts.Dangerous in Dangerous
inv8 S:     │                                                                                                                                                                                                                               └──  all ws:Worstation |  ^parts.Dangerous
inv8 T:     │                                                                                                                                                                                                                                   └──  all ws:Workstation |  ^parts.Dangerous
inv8 T:     │                                                                                                                                                                                                                                       └──  all c:Component, ws:Workstation |  some Dangerous & c.^parts => not some Human in workers
inv8 T:     │                                                                                                                                                                                                                                           └──  all c:Component, ws:Workstation |  some Dangerous & c.^parts => not some Human in ws.workers
inv8 T:     │                                                                                                                                                                                                                                               └──  all c:Component, ws:Workstation |  some Dangerous & c.^parts => some Human not in workers
inv8 T:     │                                                                                                                                                                                                                                                   └──  all c:Component, ws:Workstation |  c.^parts in Dangerous  => some Human not in workers
inv9 T:     │                                                                                                                                                                                                                                                       └──  succ un Workstation lone -> lone Workstation
inv9 C:     │                                                                                                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation Workstation in begin.*succ no end.succ
inv9 C:     │                                                                                                                                                                                                                                                               └──  succ in Workstation lone -> lone Workstation  Workstation in begin.*succ no end.succ
inv1 T:     ├──  all w:Worker | w in Human or Robot
inv1 C:     │   └──  all w:Worker | w in Human + Robot
inv2 U:     │       └──  all ws:Workstation, w:Worker | some w1:Worker | ws->w1 in workers implies (one ws1:Workstation | ws1->w in workers)
inv2 S:     │           └──  all ws:Workstation | one ws1:Workstation | some w1:Worker | ws->w1 in workers and ws1->w in workers
inv2 U:     │               └──  all ws:Workstation | one ws1:Workstation | some w1:Worker | ws->w1 in workers and ws1->w1 in workers
inv2 C:     │                   └──  all ws:Workstation |some w1:Worker | ws->w1 in workers all w:Worker | one ws:Workstation | ws->w in workers
inv1 C:     │                       └──  all w:Worker | w in Human + Robot
inv1 C:     │                           └──  all w:Worker | w in Human + Robot
inv2 C:     │                               └──  all ws:Workstation |some w1:Worker | ws->w1 in workers all w:Worker | one ws:Workstation | ws->w in workers
inv3 C:     │                                   └──  all c:Component | one ws:Workstation | c->ws in workstation
inv4 B:     │                                       └──  all c1,c2:Component | c1->c2 in parts all m1,m2:Material | m1->m2 not in parts
inv4 B:     │                                           └──  all c1,c2:Component | c1->c2 in parts implies c1 != c2 all m1,m2:Material | m1->m2 not in parts implies m1 != m2
inv4 B:     │                                               └──  some c1,c2:Component | c1->c2 in parts all m1,m2:Material | m1->m2 not in parts
inv4 B:     │                                                   └──  some c1,c2:Component | c1->c2 in parts some m1,m2:Material | m1->m2 not in parts
inv4 B:     │                                                       └──  all c1,c2:Component | c1->c2 in parts all m1,m2:Material | m1->m2 not in parts
inv4 C:     │                                                           └──  all x : Component | some x.parts all x : Material | no x.parts
inv4 C:     │                                                               └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 U:     │                                                                   └──  all w:Worker | w in Human implies w not in Robot all w:Worker | w in Robot implies w not in Human
inv5 S:     │                                                                       └──  all ws:Workstation , all w:Worker| ws->w in workers implies w in Human or Robot
inv5 C:     │                                                                           └──  all x : Workstation | no x.workers & Human or no x.workers & Robot
inv5 C:     │                                                                               └──  all x : Workstation | no x.workers & Human or no x.workers & Robot
inv6 U:     │                                                                                   └──  all c1,c2:Component | c1->c2 in parts implies c1 != c2
inv6 B:     │                                                                                       └──  all c1,c2:Component | c1->c2 not in parts implies c1 = c2
inv6 B:     │                                                                                           └──  all c1,c2:Component | c1->c2 in parts implies c1 = c2
inv6 B:     │                                                                                               └──  all c1,c2:Component | c1->c2 not in parts
inv6 C:     │                                                                                                   └──  all c1:Component | no c1 & c1.^(parts)
inv6 O:     │                                                                                                       └──  all c1:Component | no c1.^(parts)
inv6 T:     │                                                                                                           └──  all c1,c2:Component | no c1->c2 in parts
inv6 T:     │                                                                                                               └──  all c1,c2:Component | no (c1->c2 in parts)
inv6 C:     │                                                                                                                   └──  all c1:Component | no c1 & c1.^parts
inv7 C:     │                                                                                                                       └──  all c:Component | no c.parts & Dangerous or one c & Dangerous
inv8 C:     │                                                                                                                           └──  no (Dangerous & Component).workstation.workers & Human
inv9 U:     │                                                                                                                               └──  all w:Workstation-end | one w.succ
inv1 U:     ├──  not some w:Worker | not w in Human + Worker
inv1 C:     │   └──  not some w:Worker | not w in Human + Robot
inv1 C:     │       └──  all w:Worker | w in Human + Robot
inv1 C:     │           └──  Worker in Human + Robot
inv1 C:     │               └──  Worker in Human + Robot
inv1 C:     │                   └──  all w:Worker | w in Human or w in Robot
inv1 E:     │                       └──   
inv2 C:     │                           └──  all w:Workstation | some w.workers all w:Worker | one workers.w
inv2 C:     │                               └──  all w:Workstation | some w.workers all w:Worker | one w.~workers
inv2 C:     │                                   └──  workers in Workstation one -> some Worker
inv3 C:     │                                       └──  all c:Component | one c.workstation
inv3 C:     │                                           └──  workstation in Component -> one Workstation
inv3 U:     │                                               └──  Component in workstation.Workstation
inv4 B:     │                                                   └──  Component in Component.parts and Material.parts = none
inv4 O:     │                                                       └──  Component in parts.Component and Material.parts = none
inv4 C:     │                                                           └──  Component in parts.Product and Material.parts = none
inv4 C:     │                                                               └──  Component = parts.Product
inv4 C:     │                                                                   └──  parts in Component -> some Product
inv5 O:     │                                                                       └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                                                           └──  all w:Workstation | some w.workers & Robot implies no w.workers & Human
inv5 C:     │                                                                               └──  all w:Workstation | no w.workers & Robot or no w.workers & Human
inv6 C:     │                                                                                   └──  all c:Component | c not in c.^parts
inv6 O:     │                                                                                       └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                                           └──  all c:Component | c not in c.^parts
inv6 U:     │                                                                                               └──  all c:Component | c not in c.parts
inv6 C:     │                                                                                                   └──  all c:Component | c not in c.^parts
inv6 O:     │                                                                                                       └──  no iden & ^parts
inv7 O:     │                                                                                                           └──  all c:Component | some Dangerous & c.^parts implies c in Dangerous
inv7 O:     │                                                                                                               └──  ^parts.Dangerous in Dangerous
inv9 C:     │                                                                                                                   └──  succ in Workstation lone -> lone Workstation no end.succ Workstation in begin.*succ
inv9 U:     │                                                                                                                       └──  Workstation in begin.*succ
inv9 U:     │                                                                                                                           └──  all w:Workstation-end | one w.succ Workstation in begin.*succ
inv9 U:     │                                                                                                                               └──  all w:Workstation-begin | one succ.w all w:Workstation-end | one w.succ Workstation in begin.*succ
inv9 C:     │                                                                                                                                   └──  no end.succ all w:Workstation-end | one w.succ Workstation in begin.*succ
inv1 C:     ├──  all w: Worker | w in Human || w in Robot
inv1 C:     │   └──  all w: Worker | w in Human+Robot
inv2 S:     │       └──  all w : Worker | all ws: Workstation |
inv2 S:     │           └──  all w : Worker | all ws: Workstation |
inv2 T:     │               └──  all w : Worker | all ws: Workstation | one w in ws
inv2 T:     │                   └──  all w : Worker | all ws: Workstation | one w in ws
inv2 T:     │                       └──  one Worker in Workstation
inv1 C:     │                           └──  Worker = Human + Robot
inv2 T:     │                               └──  one Worker in Workstation
inv2 T:     │                                   └──  one Worker in Workstation
inv2 T:     │                                       └──  all w : Worker | all ws: Workstation | one w in ws
inv2 T:     │                                           └──  one Worker in Workstation
inv2 T:     │                                               └──  all w : Worker, ws : Workstation | lone w in ws.workers
inv2 C:     │                                                   └──  all w:Workstation | some w.workers all w:Worker | one workers.w
inv3 C:     │                                                       └──  all c:Component | one c.workstation
inv2 U:     │                                                           └──  all w:Worker | one workers.w
inv2 C:     │                                                               └──  all w:Workstation | some w.workers all w:Worker | one workers.w
inv3 S:     │                                                                   └──  workstation in Component all -> one Workstation
inv3 S:     │                                                                       └──  workstation in Workstation one -> all Component
inv3 O:     │                                                                           └──  workstation in Component some -> one Workstation
inv3 C:     │                                                                               └──  workstation in Component -> one Workstation
inv4 S:     │                                                                                   └──  all c:Components| some c.parts all m:Material| none m.parts
inv4 T:     │                                                                                       └──  all c:Component | some c.parts all m:Material | none m.parts
inv4 C:     │                                                                                           └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 C:     │                                                                                               └──  not some c:Component | no c.parts not some m:Material | some m.parts
inv4 S:     │                                                                                                   └──  all p:Product | p in c.parts
inv4 B:     │                                                                                                       └──  all p:Product | p in Component.parts
inv4 T:     │                                                                                                           └──  all p:Product | p in Product.parts -> p in Component.parts
inv4 B:     │                                                                                                               └──  Component in Product.parts and Material.parts = none
inv4 C:     │                                                                                                                   └──  Component in parts.Product and Material.parts = none
inv4 C:     │                                                                                                                       └──  Component = parts.Product
inv5 S:     │                                                                                                                           └──  Robot in Workstation <-> no Human in Workstation
inv5 T:     │                                                                                                                               └──  Robot in Workstation <=> no Human in Workstation
inv5 T:     │                                                                                                                                   └──  Robot.Workstation <=> no Human.Workstation
inv5 T:     │                                                                                                                                       └──  Robot.Workstation <=> Human.Workstation
inv5 T:     │                                                                                                                                           └──  Robot in Workstation.workers <=> no Human in Workstation.workers
inv5 B:     │                                                                                                                                               └──  Robot in Workstation.workers <=> Human in Workstation.workers
inv5 T:     │                                                                                                                                                   └──  Robot in Workstation.workers <=> no Human in Workstation.workers
inv5 T:     │                                                                                                                                                       └──  Robot in Workstation.workers <=> no (Human in Workstation.workers)
inv5 B:     │                                                                                                                                                           └──  Robot in Workstation.workers <=> not Human in Workstation.workers
inv5 B:     │                                                                                                                                                               └──  Robot in Workstation.workers <=> not Human in Workstation.workers not Robot in Workstation.workers <=>  Human in Workstation.workers
inv5 T:     │                                                                                                                                                                   └──  some Robot in Workstation.workers <=> not some Human in Workstation.workers
inv5 C:     │                                                                                                                                                                       └──  all w:Workstation | some w.workers & Robot implies no w.workers & Human
inv5 S:     │                                                                                                                                                                           └──  Robot in Workstation.workers -> no Human in Workstation.workers
inv5 T:     │                                                                                                                                                                               └──  Robot in Workstation.workers -> none Human in Workstation.workers
inv5 S:     │                                                                                                                                                                                   └──  some Robot in Workstation.workers -> no Human in Workstation.workers
inv5 S:     │                                                                                                                                                                                       └──  some Robot in Workstation.workers -> no Human in Workstation.workers
inv6 T:     │                                                                                                                                                                                           └──  Component not in ^(Component.parts)
inv6 S:     │                                                                                                                                                                                               └──  all c: Components | c not in c.parts.^(Component.parts)
inv6 S:     │                                                                                                                                                                                                   └──  all c: Components | c not in c^(Component.parts)
inv6 S:     │                                                                                                                                                                                                       └──  all c: Components | c not in c.^(Component.parts)
inv6 S:     │                                                                                                                                                                                                           └──  all c: Components | c not in c.parts.^(Component.parts)
inv6 T:     │                                                                                                                                                                                                               └──  all c: Component | c not in c.parts.^(Component.parts)
inv6 C:     │                                                                                                                                                                                                                   └──  all c: Component | c not in c.^(parts)
inv7 T:     │                                                                                                                                                                                                                       └──  all c: Component | some c.^(parts) in Dangerous -> c in Dangerous
inv7 T:     │                                                                                                                                                                                                                           └──  all c: Component | c.^(parts) in Dangerous -> c in Dangerous
inv7 T:     │                                                                                                                                                                                                                               └──  all c: Component | c not in Dangerous -> c.^(parts) not in Dangerous
inv7 T:     │                                                                                                                                                                                                                                   └──  all c: Component | c not in Dangerous -> Dangerous not in c.^(parts)
inv7 B:     │                                                                                                                                                                                                                                       └──  all c: Component | c not in Dangerous
inv7 T:     │                                                                                                                                                                                                                                           └──  all c: Component | some c2: Component | c2 in c^parts && c2 in Dangerous -> c in Dangerous
inv7 T:     │                                                                                                                                                                                                                                               └──  all c: Component | some c2: Component | c2 in c.^(parts) && c2 in Dangerous -> c in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                   └──  ^parts.Dangerous in Dangerous
inv9 B:     │                                                                                                                                                                                                                                                       └──  no end.succ all w:Workstation-end | one succ.w Workstation in begin.*succ
inv9 C:     │                                                                                                                                                                                                                                                           └──  no end.succ all w:Workstation-end | one w.succ Workstation in begin.*succ
inv1 S:     ├──  all w:Worker | worke in Human imples worker not in Robot
inv1 S:     │   └──  all w:Worker | w in Human imples w not in Robot
inv1 U:     │       └──  all w:Worker | w in Human implies w not in Robot
inv1 S:     │           └──  Human disj Robot
inv1 B:     │               └──  no (Human + Robot)
inv1 U:     │                   └──  no (Human & Robot)
inv1 U:     │                       └──  all w:Worker | w in Human implies w not in Robot
inv1 C:     │                           └──  all w:Worker | w in Human or w in Robot
inv1 C:     │                               └──  all w:Worker | w in Human or w in Robot
inv2 U:     │                                   └──  all w:Worker | one workers.w
inv2 U:     │                                       └──  all w:Worker | lone workers.w
inv2 C:     │                                           └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv3 C:     │                                               └──  all c:Component | one c.workstation
inv3 C:     │                                                   └──  all c:Component | one c.workstation
inv4 C:     │                                                       └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 C:     │                                                           └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 B:     │                                                               └──  all w:Workstation | w.workers in Human implies w.workers not in Robot
inv5 O:     │                                                                   └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 S:     │                                                                       └──  Workstation.workers in Human or w.workers in Robot
inv5 O:     │                                                                           └──  Workstation.workers in Human or Workstation.workers in Robot
inv5 S:     │                                                                               └──  None
inv5 S:     │                                                                                   └──  None
inv5 S:     │                                                                                       └──  None
inv5 S:     │                                                                                           └──  None
inv5 O:     │                                                                                               └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv6 S:     │                                                                                                   └──  all c:Component | c not in c.part
inv5 O:     │                                                                                                       └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv6 U:     │                                                                                                           └──  all c:Component | c not in c.parts
inv6 B:     │                                                                                                               └──  no parts & iden
inv6 U:     │                                                                                                                   └──  all c:Component | c not in c.parts
inv6 C:     │                                                                                                                       └──  all c:Component | c not in c.^parts
inv7 T:     │                                                                                                                           └──  all c:Component | some c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                               └──  all c:Component | (some c.parts) in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                   └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                       └──  all c:Component | some (c.parts & Dangerous) implies c in Dangerous
inv8 S:     │                                                                                                                                           └──  all c:Component | c in Dangerous implies c.workstation.workes not in Human
inv8 B:     │                                                                                                                                               └──  all c:Component | c in Dangerous implies c.workstation.workers not in Human
inv8 O:     │                                                                                                                                                   └──  all c:Component | c in Dangerous implies c.workstation.workers in Robot
inv8 B:     │                                                                                                                                                       └──  all c:Component | c in Dangerous implies c.workstation.workers not in Human
inv9 U:     │                                                                                                                                                           └──  all w:Workstation | w not in w.^succ
inv9 O:     │                                                                                                                                                               └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ in Workstation - w
inv9 B:     │                                                                                                                                                                   └──  one w:Workstation | w.^succ in Workstation - w
inv9 O:     │                                                                                                                                                                       └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ in Workstation - w
inv9 U:     │                                                                                                                                                                           └──  all w:Workstation | w not in w.^succ some w:Workstation | w.^succ in Workstation - w
inv9 O:     │                                                                                                                                                                               └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ in Workstation - w one w:Workstation | no w.succ
inv9 O:     │                                                                                                                                                                                   └──  all w:Workstation | w not in w.^succ one w:Workstation | w in begin implies w.^succ in Workstation - w one w:Workstation | no w.succ
inv9 O:     │                                                                                                                                                                                       └──  all w:Workstation | w not in w.^succ one w:Workstation | w in begin implies w.^succ in Workstation - begin
inv9 U:     │                                                                                                                                                                                           └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = (Workstation - w)
inv9 U:     │                                                                                                                                                                                               └──  all w:Workstation | w not in w.^succ  begin.^succ in Workstation - begin
inv9 S:     │                                                                                                                                                                                                   └──  all w:Workstation | w not in w.^succ  begin.^succ == Workstation - begin
inv9 U:     │                                                                                                                                                                                                       └──  all w:Workstation | w not in w.^succ  begin.^succ = Workstation - begin
inv9 U:     │                                                                                                                                                                                                           └──  all w:Workstation | w not in w.^succ  begin.^succ = (Workstation - begin)
inv9 B:     │                                                                                                                                                                                                               └──  all w:Workstation | w not in w.^succ begin != end  begin.^succ = (Workstation - begin)
inv9 B:     │                                                                                                                                                                                                                   └──  all w:Workstation | w not in w.^succ all w:Workstation | w in begin implies w not in end  begin.^succ = (Workstation - begin)
inv9 O:     │                                                                                                                                                                                                                       └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ in Workstation - w
inv9 U:     │                                                                                                                                                                                                                           └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w
inv9 U:     │                                                                                                                                                                                                                               └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ
inv9 U:     │                                                                                                                                                                                                                                   └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin
inv9 S:     │                                                                                                                                                                                                                                       └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin all w.Workstation | lone w.succ
inv9 S:     │                                                                                                                                                                                                                                           └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin all w.Workstation | lone w.succ
inv9 U:     │                                                                                                                                                                                                                                               └──  all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin
inv9 C:     │                                                                                                                                                                                                                                                   └──  all w:Workstation | lone w.succ all w:Workstation | w not in w.^succ one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin
inv9 C:     │                                                                                                                                                                                                                                                       └──  all w:Workstation | lone w.succ  one w:Workstation | w.^succ = Workstation - w no end.succ no succ.begin
inv9 U:     │                                                                                                                                                                                                                                                           └──  all w:Workstation | lone w.succ  no end.succ no succ.begin
inv9 C:     │                                                                                                                                                                                                                                                               └──  all w:Workstation | lone w.succ one w:Workstation | w.^succ = Workstation - w  no end.succ no succ.begin begin.^succ = Workstation - begin
inv9 C:     │                                                                                                                                                                                                                                                                   └──  all w:Workstation | lone w.succ  no end.succ no succ.begin begin.^succ = Workstation - begin
inv9 C:     │                                                                                                                                                                                                                                                                       └──  all w:Workstation | lone w.succ one w:Workstation | w.^succ = Workstation - w and no succ.w no end.succ no succ.begin
inv9 U:     │                                                                                                                                                                                                                                                                           └──  all w:Workstation | lone w.succ one w:Workstation | w.^succ = Workstation - w and no succ.w no end.succ
inv10 O:    │                                                                                                                                                                                                                                                                               ├──  all c:Component | c.parts.workstation in succ.(c.workstation)
inv10 O:    │                                                                                                                                                                                                                                                                               │   └──  all c:Component | c.^parts.workstation in succ.(c.workstation)
inv10 O:    │                                                                                                                                                                                                                                                                               │       └──  all c:Component | c.^parts.workstation in ^succ.(c.workstation)
Xyxs4h3dKSz59peCr M:     │                                                                                                                                                                                                                                                                               │           └──  user added theme options. same as previous submission
inv10 O:    │                                                                                                                                                                                                                                                                               └──  all c:Component | c.parts.workstation in succ.(c.workstation)
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 C:     │   └──  all wk:Workstation | some w:Worker | w in wk.workers all w:Worker | one wk:Workstation | w in wk.workers
inv2 C:     │       └──  all wk:Workstation  | some wk.workers all w:Worker | one wk:Workstation | w in wk.workers
inv2 C:     │           └──  all wk:Workstation | some wk.workers all w:Worker | one wk:Workstation | w in wk.workers
inv2 C:     │               └──  all wk:Workstation | some wk.workers all w:Worker | one wk:Workstation | w in wk.workers
inv2 O:     │                   └──  all wk:Workstation | some wk.workers all w:Worker | one wk:Workstation | w in wk
inv2 C:     │                       └──  all wk:Workstation | some wk.workers all w:Worker | one wk:Workstation | w in wk.workers
inv3 C:     │                           └──  all c:Component | one c.workstation
inv4 U:     │                               └──  all c:Component, m:Material | some c.parts and no m.parts
inv4 U:     │                                   └──  all c:Component, m:Material | some c.parts and #m.parts=0
inv4 B:     │                                       └──  all c:Component, m:Material | some c.parts and one m.parts
inv4 U:     │                                           └──  all c:Component, m:Material | some c.parts
inv4 U:     │                                               └──  all p:Product | some p.parts => p in Component
inv4 B:     │                                                   └──  all p:Product | no p.parts => p not in Material
inv4 U:     │                                                       └──  all p:Product | no p.parts => p in Material
inv4 C:     │                                                           └──  all p:Product | (no p.parts => p in Material) and (some p.parts => p in Component)
inv4 S:     │                                                               └──  all c:Component | some c.parts all m:Materia | no m.parts
inv4 C:     │                                                                   └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 U:     │                                                                       └──  all c:Component, m:Material | some c.parts and no m.parts
inv4 U:     │                                                                           └──  all c:Component, m:Material | (some c.parts) and no m.parts
inv4 U:     │                                                                               └──  all c:Component, m:Material | (some c.parts) and (no m.parts)
inv4 C:     │                                                                                   └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 B:     │                                                                                       └──  one wk:Workstation | Human in wk.workers <=> Robot not in wk.workers
inv5 B:     │                                                                                           └──  all wk:Workstation | Human in wk.workers <=> Robot not in wk.workers
inv5 O:     │                                                                                               └──  all wk:Workstation, h:Human, r:Robot | h in wk.workers <=> r not in wk.workers
inv6 U:     │                                                                                                   └──  all c:Component | c not in c.parts
inv6 B:     │                                                                                                       └──  one c:Component | c not in c.parts
inv6 U:     │                                                                                                           └──  all c:Component | c not in c.parts
inv6 O:     │                                                                                                               └──  all c:Component | c not in c.parts and c.parts not in c.parts
inv6 B:     │                                                                                                                   └──  all c:Component | c not in c.parts and c.parts not in c
inv6 U:     │                                                                                                                       └──  all c,c2:Component | (c not in c.parts) and (c2 in c.parts => c not in c2.parts)
inv6 B:     │                                                                                                                           └──  all c2:Component, p:Product | p in c2.parts => p not in Component
inv6 U:     │                                                                                                                               └──  all c:Component | c not in c.parts
inv6 U:     │                                                                                                                                   └──  all c:Component | c not in c.parts.parts
inv6 U:     │                                                                                                                                       └──  all c:Component | c not in c.parts.parts.parts
inv6 U:     │                                                                                                                                           └──  all c:Component | c not in c.parts
inv6 U:     │                                                                                                                                               └──  all c:Component | c not in c.parts
inv6 U:     │                                                                                                                                                   └──  all c:Component | c not in c.parts all p:Product | p in p.parts => p not in Component
inv6 B:     │                                                                                                                                                       └──  all c:Component | c not in c.parts all p:Product | p not in p.parts => p in Component
inv6 B:     │                                                                                                                                                           └──  all c:Component | c not in c.parts all p:Product | p not in p.parts => p in Component
inv6 B:     │                                                                                                                                                               └──  one c:Component | c not in c.parts
inv6 B:     │                                                                                                                                                                   └──  lone c:Component | c not in c.parts
inv6 B:     │                                                                                                                                                                       └──  some c:Component | c not in c.parts
inv6 S:     │                                                                                                                                                                           └──  let c:Component | c not in c.parts
inv6 B:     │                                                                                                                                                                               └──  no c:Component | c not in c.parts
inv6 U:     │                                                                                                                                                                                   └──  no c:Component | c in c.parts
inv6 B:     │                                                                                                                                                                                       └──  all c:Component | c in c.parts
inv6 U:     │                                                                                                                                                                                           └──  all c:Component | some c.parts => c not in c.parts
inv6 B:     │                                                                                                                                                                                               └──  all c:Product | c not in c.parts
inv6 U:     │                                                                                                                                                                                                   └──  all c : Component | c not in c.parts
inv6 U:     │                                                                                                                                                                                                       └──  all c : Component | c -> c not in parts
inv6 U:     │                                                                                                                                                                                                           └──  all c : Component | c not in c.parts
inv7 B:     │                                                                                                                                                                                                               └──  all c:Component | Dangerous in c.parts => c in Dangerous
inv7 C:     │                                                                                                                                                                                                                   └──  all c:Component, d:Dangerous | d in c.parts => c in Dangerous
inv8 B:     │                                                                                                                                                                                                                       └──  all c:Component | c in Dangerous => Human not in c.workstation.workers
inv8 C:     │                                                                                                                                                                                                                           └──  all c:Component, h:Human | c in Dangerous => h not in c.workstation.workers
inv8 C:     │                                                                                                                                                                                                                               └──  all c:Dangerous, h:Human | c in Component => h not in c.workstation.workers
inv8 C:     │                                                                                                                                                                                                                                   └──  all c:Component, h:Human | c in Dangerous => h not in c.workstation.workers
inv9 B:     │                                                                                                                                                                                                                                       └──  all wk:Workstation | wk in begin => wk in end
inv9 B:     │                                                                                                                                                                                                                                           └──  all wk:Workstation | wk in begin => wk.succ in end
TNmDHDPEJhA8kvHeX M:     │                                                                                                                                                                                                                                               ├──  user added theme options. same as previous submission
inv9 B:     │                                                                                                                                                                                                                                               │   └──  all wk:Workstation | wk in begin => wk in end
inv6 C:     │                                                                                                                                                                                                                                               │       └──  all c : Component | c not in c.^(parts)
inv9 S:     │                                                                                                                                                                                                                                               │           ├──  all wk:Workstation | wk in wk.^(succs)
inv9 B:     │                                                                                                                                                                                                                                               │           │   └──  all wk:Workstation | wk in wk.^(succ)
inv9 U:     │                                                                                                                                                                                                                                               │           │       └──  all e:end, b:begin | e in b.^(succ) or b=e
inv9 C:     │                                                                                                                                                                                                                                               │           │           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                                                                                                                                                                                                               │           │               └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w in end implies no w.succ
inv9 U:     │                                                                                                                                                                                                                                               │           │                   └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w in end implies no w.^(succ)
inv9 C:     │                                                                                                                                                                                                                                               │           │                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
tBEynWAJwXb5a67ke M:     │                                                                                                                                                                                                                                               │           │                           └──  user added theme options. same as previous submission
inv10 S:    │                                                                                                                                                                                                                                               │           │                               ├──  None
inv8 C:     │                                                                                                                                                                                                                                               │           │                               │   └──  all c:Component, h:Human | c in Dangerous => h not in c.workstation.workers
inv9 C:     │                                                                                                                                                                                                                                               │           │                               │       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 B:     │                                                                                                                                                                                                                                               │           │                               │           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w in end implies w not in Workstation.^(succ)
inv9 U:     │                                                                                                                                                                                                                                               │           │                               │               └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w in end implies no w.^(succ)
inv9 U:     │                                                                                                                                                                                                                                               │           │                               │                   └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w in end <=> no w.^(succ)
inv9 C:     │                                                                                                                                                                                                                                               │           │                               ├──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                               │   └──  all disj w,wb : Workstation | (wb in begin) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                               │       └──  all disj w,wb : Workstation | (wb in begin) => w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                               │           └──  all disj w,wb : Workstation | (wb in begin) => w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end => one w.succ
inv10 S:    │                                                                                                                                                                                                                                               │           │                               └──  None
inv10 S:    │                                                                                                                                                                                                                                               │           │                                   └──  None
inv1 C:     │                                                                                                                                                                                                                                               │           │                                       └──  all w:Worker | w in Human or w in Robot
inv3 C:     │                                                                                                                                                                                                                                               │           │                                           └──  all c:Component | one c.workstation
inv4 C:     │                                                                                                                                                                                                                                               │           │                                               └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 O:     │                                                                                                                                                                                                                                               │           │                                                   └──  all wk:Workstation, h:Human, r:Robot | h in wk.workers <=> r not in wk.workers
inv5 C:     │                                                                                                                                                                                                                                               │           │                                                       └──  all wk:Workstation, h:Human, r:Robot | h in wk.workers => r not in wk.workers
inv6 C:     │                                                                                                                                                                                                                                               │           │                                                           └──  all c : Component | c not in c.^(parts)
inv7 C:     │                                                                                                                                                                                                                                               │           │                                                               └──  all c:Component, d:Dangerous | d in c.parts => c in Dangerous
inv8 C:     │                                                                                                                                                                                                                                               │           │                                                                   └──  all c:Component, h:Human | c in Dangerous => h not in c.workstation.workers
inv9 C:     │                                                                                                                                                                                                                                               │           │                                                                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                                                                                                                                                                                                               │           │                                                                           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies some w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                                                                               └──  all disj w,wb : Workstation | (wb in begin) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                                                                                                                                                                                                               │           │                                                                                   └──  all disj w,wb : Workstation | (wb in begin) implies w in wb.^(succ) && w not in w.^(succ) && w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                                                                                       └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                                               │           │                                                                                           └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                                                                                                                                               │           │                                                                                               └──  all c:Component, m:Material, w:Workstation | m not in c.parts implies w not in c.workstation
inv10 B:    │                                                                                                                                                                                                                                               │           │                                                                                                   └──  all c:Component, m:Material, w:Workstation, p:Product | p not in c.parts implies w not in c.workstation
inv10 B:    │                                                                                                                                                                                                                                               │           │                                                                                                       └──  all c:Component, m:Material, w:Workstation | m not in c.parts implies w not in c.workstation
WFS8oQ6NmgcgH73xL M:     │                                                                                                                                                                                                                                               │           │                                                                                                           └──  user added theme options. same as previous submission
inv5 C:     │                                                                                                                                                                                                                                               │           │                                                                                                               └──  all wk:Workstation, h:Human, r:Robot | h in wk.workers => r not in wk.workers
inv5 O:     │                                                                                                                                                                                                                                               │           │                                                                                                                   └──  all wk:Workstation, h:Human, r:Robot | h in wk.workers <=> r not in wk.workers
inv9 C:     │                                                                                                                                                                                                                                               │           │                                                                                                                       └──  all disj w,wb : Workstation | wb in begin implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                                                                                                                                               │           │                                                                                                                           └──  all c:Component, m:Material, w:Workstation | m not in c.parts implies w not in c.workstation
YEpCTyrgFmuJXsB5Z M:     │                                                                                                                                                                                                                                               │           └──  user added theme options. same as previous submission
inv6 T:     │                                                                                                                                                                                                                                               └──  all c : Component | c not in c&parts
inv6 T:     │                                                                                                                                                                                                                                                   └──  all c : Component | c not in c&parts
inv6 U:     │                                                                                                                                                                                                                                                       └──  all c : Component | c not in c&c.parts
inv6 T:     │                                                                                                                                                                                                                                                           └──  all c : Component | not c&c.parts
inv6 U:     │                                                                                                                                                                                                                                                               └──  all c : Component | no c&c.parts
inv6 U:     │                                                                                                                                                                                                                                                                   └──  all c : Component, p:Product | p=c => p not in c.parts
inv6 B:     │                                                                                                                                                                                                                                                                       └──  all c : Component, p:Product | p not in c.parts => p=c
inv6 U:     │                                                                                                                                                                                                                                                                           └──  all c : Component, p:Product | p in c.parts => p!=c
inv6 B:     │                                                                                                                                                                                                                                                                               └──  all c : Component, p:Product | p in c.parts => p not in Component
inv1 S:     ├──  all w : Workers | w in Robots or w in Human
inv1 C:     │   └──  all w : Worker | w in Robot or w in Human
inv1 C:     │       └──  all w : Worker | w in Robot+Human
inv2 U:     │           └──  all w : Worker | all w1,w2 : Workstation | w in w1.workers and w in w2.workers implies w1=w2
inv2 U:     │               └──  all ws : Workstation | some ws.workers
inv2 U:     │                   └──  all ws : Workstation | some ws.workers all w : Worker | w in Workstation.workers
inv2 U:     │                       └──  all w : Worker | w in Workstation.workers
inv2 U:     │                           └──  all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2
inv2 C:     │                               └──  all ws : Workstation | some ws.workers all w : Worker | w in Workstation.workers all w1,w2 : Worker | all ws1,ws2: Workstation | ws1!=ws2 and w1 in ws1.workers and w2 in ws2.workers implies w1!=w2
inv3 C:     │                                   └──  all c : Component | one w : Workstation | w in c.workstation
inv4 B:     │                                       └──  all c : Component | all p : Product | c in p.parts all m : Material | all p : Product | m not in p.parts
inv4 B:     │                                           └──  all c : Component | some p : Product | c in p.parts all m : Material | all p : Product | m not in p.parts
inv4 B:     │                                               └──  all c : Component | some p : Product | c in p.parts all m : Material | no m.parts
inv4 C:     │                                                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 S:     │                                                       └──  all h : Humans | all r : Robots | all w : Workstation | r in w.workers and h not in w.workers
inv5 S:     │                                                           └──  all h : Human | all r : Robots | all w : Workstation | r in w.workers and h not in w.workers
inv5 O:     │                                                               └──  all h : Human | all r : Robot | all w : Workstation | r in w.workers and h not in w.workers
inv5 C:     │                                                                   └──  all h : Human | all r : Robot | all w : Workstation | r in w.workers implies h not in w.workers
inv5 B:     │                                                                       └──  all h : Human | all r : Robot | all w : Workstation | r not in w.workers implies h in w.workers
inv5 C:     │                                                                           └──  all h : Human | all r : Robot | all w : Workstation | h in w.workers implies r not in w.workers
inv6 C:     │                                                                               └──  all c : Component | c not in c.^parts
inv7 C:     │                                                                                   └──  all c : Component | all d : Dangerous | d in c.parts implies c in Dangerous
inv8 U:     │                                                                                       └──  all h : Human | all d : Dangerous | all c : Component | c in Dangerous implies c not in Human
inv8 U:     │                                                                                           └──  all h : Human | all c : Component | c in Dangerous implies c not in Human
inv8 C:     │                                                                                               └──  all d : Dangerous | no d.workstation.workers&Human
inv10 B:    ├──  all c : Component | all p : c.parts & Component | c.workstation in p.workstation.^succ
inv1 S:     ├──  all h:Human,r:Robot | implies Worker
inv1 U:     │   └──  all h:Human,r:Robot |  h in Worker and r in Worker
inv1 U:     │       └──  all h:Human,r:Robot |  h in Worker or r in Worker
inv1 T:     │           └──  all h:Human,r:Robot |  h & Worker or r & Worker
inv1 U:     │               └──  all h:Human,r:Robot |  h in Worker and r in Worker
inv2 B:     │                   └──  all w:Worker,ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv1 U:     │                       └──  all h:Human,r:Robot |  h in Worker and r in Worker
inv1 O:     │                           └──  all w:Worker |  w in Human & Robot
inv1 C:     │                               └──  all w:Worker |  w in Human or w in Robot
inv2 T:     │                                   └──  all w:Worker | some w in Workstation.workers all ww:Workstation | some (ww.workers)
inv2 S:     │                                       └──  all w:Worker,ww:Workstation | w in some(ww.workers) all ww:Workstation | some (ww.workers)
inv2 S:     │                                           └──  all w:Worker,some ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv2 S:     │                                               └──  all w:Worker,one ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv2 S:     │                                                   └──  all w:Worker,one ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv2 S:     │                                                       └──  all w:Worker,one ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv2 C:     │                                                           └──  all w:Worker | one ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv3 U:     │                                                               └──  all c:Component | lone(c.workstation)
inv3 C:     │                                                                   └──  all c:Component | one(c.workstation)
inv4 T:     │                                                                       └──  all p:Product | p in Component implies some(p.parts) all p:Product | p in Material implies none(p.parts)
inv4 T:     │                                                                           └──  all p:Product | p in Component implies some(p.parts) all p:Product | p in Material implies none(p.parts)
inv4 C:     │                                                                               └──  all p:Product | p in Component implies some(p.parts) all p:Product | p in Material implies no(p.parts)
inv5 T:     │                                                                                   └──  all ww:Workstation | Human & ww.workers implies no(Robot & ww.workers)
inv5 T:     │                                                                                       └──  all ww:Workstation | (ww.workers & Human) implies no (ww.workers&Robot)
inv5 S:     │                                                                                           └──  all ww:Workstation | disj Human,Worker in ww.workers
inv5 T:     │                                                                                               └──  all ww:Workstation | (ww.workers & Human) or (ww.workers &Robot)
inv5 T:     │                                                                                                   └──  all ww:Workstation | (ww.workers & Human) or (ww.workers &Robot)
inv2 U:     │                                                                                                       └──  all w:Worker | some ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv2 C:     │                                                                                                           └──  all w:Worker | one ww:Workstation | w in ww.workers all ww:Workstation | some (ww.workers)
inv5 T:     │                                                                                                               └──  all ww:Workstation | (ww.workers & Human) or (ww.workers & Robot)
inv5 T:     │                                                                                                                   └──  all ww:Workstation | (ww.workers & Human) implies no (ww.workers & Robot)
inv5 T:     │                                                                                                                       └──  all ww:Workstation | (ww.workers & Human) implies no (ww.workers & Robot)
inv5 C:     │                                                                                                                           └──  all ww:Workstation | some (ww.workers & Human) implies no (ww.workers & Robot)
inv6 U:     │                                                                                                                               └──  all c:Component |  c not in c.parts
inv6 U:     │                                                                                                                                   └──  all c:Component |  no(c & c.parts)
inv6 T:     │                                                                                                                                       └──  all c:Component |  no(c & ^(c.parts))
inv6 T:     │                                                                                                                                           └──  all c:Component |  no(c & (^c.parts))
inv6 T:     │                                                                                                                                               └──  all c:Component |  no(c & ^(c.parts))
inv6 C:     │                                                                                                                                                   └──  all c:Component |  no(c & (c.^parts))
inv7 S:     │                                                                                                                                                       └──  all p:Product | p in Components and some(p.parts & Dangerous) implies p in Dangerous
inv7 C:     │                                                                                                                                                           └──  all p:Product | p in Component and some(p.parts & Dangerous) implies p in Dangerous
inv8 C:     │                                                                                                                                                               └──  all c:Component| c in Dangerous implies no(c.workstation.workers & Human)
inv6 U:     │                                                                                                                                                                   └──  all c:Component |  no(c & (c.parts))
inv1 S:     ├──  all w: Workers | w in Human + Robot
inv1 C:     │   └──  all w: Worker | w in Human + Robot
inv2 C:     │       └──  (all ws : Workstation | some w: Worker | w in ws.workers) and (all w: Worker | one ws: Workstation | w in ws.workers)
inv3 C:     │           └──  all c: Component | one ws: Workstation | ws in c.workstation
inv4 S:     │               └──  Components in Parts.parts and no (Material in Parts.parts)
inv4 T:     │                   └──  Component in Product.parts and no (Material in Product.parts)
inv4 T:     │                       └──  Component in Product.parts and no Material in Product.parts
inv4 B:     │                           └──  Component in Product.parts
inv4 B:     │                               └──  Component in Product.parts and all m: Material, p: Product | m not in p.parts
inv4 B:     │                                   └──  all c: Component, p: Product | c in p.parts and all m: Material, p: Product | m not in p.parts
inv4 B:     │                                       └──  all c: Component | some p: Product | c in p.parts and all m: Material, p: Product | m not in p.parts
inv4 B:     │                                           └──  all c: Component | some p: Product | c in p.parts and all m: Material | no p: Product | m in p.parts
inv4 B:     │                                               └──  all c: Component | some p: Product | c in p.parts and all m: Material | no p: Product | m->p in parts
inv4 S:     │                                                   └──  (all c: Component | p: Product | c in p.parts) and (all m: Material, p: Product | m not in p.parts)
inv4 S:     │                                                       └──  (all c: Component | p: Product | c in p.parts) and (all m: Material, p: Product | m not in p.parts)
inv4 S:     │                                                           └──  (all c: Component | p: Product | c in p.parts ) and (all m: Material, p: Product | m not in p.parts )
inv4 B:     │                                                               └──  (all c: Component | some p: Product | c in p.parts) and (all m: Material | no p: Product | m in p.parts)
inv4 B:     │                                                                   └──  (all c: Component | some p: Product | c in p.parts) and (all m: Material | no p: Product | m->p in parts)
inv4 C:     │                                                                       └──  (all c: Component | some p: Product | c-> p in parts) and (all m: Material | no p: Product | m->p in parts)
inv4 C:     │                                                                           └──  (all c: Component | some p: Product | c in parts.p) and (all m: Material | no p: Product | m->p in parts)
inv3 C:     │                                                                               └──  all c: Component | one ws: Workstation | ws in c.workstation
inv3 O:     │                                                                                   └──  all c: Component | one ws: Workstation | ws in workstation.c
inv3 C:     │                                                                                       └──  all c: Component | one ws: Workstation | ws in c.workstation
inv4 C:     │                                                                                           └──  (all c: Component | some p: Product | c in parts.p) and (all m: Material | no p: Product | m->p in parts)
inv6 S:     │                                                                                               └──  all c: Components | c not in c.^(parts)
inv5 O:     │                                                                                                   └──  all ws: Workstation | all w1, w2: Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv7 S:     │                                                                                                       └──  all c: Component | all p: Products | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv6 C:     │                                                                                                           └──  all c: Component | c not in c.^(parts)
inv8 S:     │                                                                                                               └──  all c: Component, w: Workstation h: Human | c in Dangerous and w in c.workstation imples h not in w.workers
inv8 S:     │                                                                                                                   └──  all c: Component, w: Workstation h: Human | c in Dangerous and w in c.workstation imples h not in w.workers
inv8 S:     │                                                                                                                       └──  all c: Component, w: Workstation, h: Human | c in Dangerous and w in c.workstation imples h not in w.workers
inv7 O:     │                                                                                                                           └──  all c: Component | all p: Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 C:     │                                                                                                                               └──  all c: Component, w: Workstation, h: Human | c in Dangerous and w in c.workstation implies h not in w.workers
inv9 C:     │                                                                                                                                   └──  all w, wb: Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w: Workstation | w not in w.^(succ) all w: Workstation | w not in end implies one w.succ
inv10 S:    │                                                                                                                                       └──  all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.worksation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv10 B:    │                                                                                                                                           └──  all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 U:     │   └──  all ws:Workstation | some w:Worker | w in ws.workers
inv2 B:     │       └──  all ws:Workstation | some w:Worker | w in ws.workers some ws:Workstation | all w:Worker | w in ws.workers
inv2 B:     │           └──  all ws:Workstation | some w:Worker | w in ws.workers one ws:Workstation | all w:Worker | w in ws.workers
inv2 S:     │               └──  all ws:Workstation | some w:Worker | w in ws.workers all w:Workers | one ws:Workstation | w in ws.workers
inv2 C:     │                   └──  all ws:Workstation | some w:Worker | w in ws.workers all w:Worker | one ws:Workstation | w in ws.workers
inv3 C:     │                       └──  all c:Component | one w:Workstation | w in c.workstation
inv4 C:     │                           └──  all x:Component | some x.parts all x:Material | no x.parts
inv5 C:     │                               └──  all ws:Workstation, w1,w2:Worker | w1 in ws.workers and w2 in ws.workers and w1 in Human implies w2 not in Robot
inv6 S:     │                                   └──  all c : Components | c not in c.parts
inv6 U:     │                                       └──  all c : Component | c not in c.parts
inv6 C:     │                                           └──  all c : Component | c not in c.(^parts)
inv7 B:     │                                               └──  all c : Component | c.(^parts) in Dangerous implies c in Dangerous
inv7 B:     │                                                   └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv8 O:     │                                                       └──  all c:Component,ws:Workstation | no c.workstation.workers & Human
inv8 O:     │                                                           └──  all c:Component| no c.workstation.workers & Human
inv8 C:     │                                                               └──  all c:Component| c in Dangerous implies no c.workstation.workers & Human
inv9 E:     │                                                                   └──   
inv9 T:     │                                                                       └──  all ws:Workstation | no ws in ws.^succ
inv9 T:     │                                                                           └──  all ws:Workstation | no ws in ws.^(succ)
inv9 T:     │                                                                               └──  all ws:Workstation | no ws in ws.(^succ)
inv9 T:     │                                                                                   └──  all ws:Workstation | no ws in ws.(^succ)
inv9 U:     │                                                                                       └──  all ws:Workstation | no ws & ws.(^succ)
inv9 U:     │                                                                                           └──  all ws:Workstation | no ws & ws.(^succ) no end.succ no succ.begin
inv9 U:     │                                                                                               └──  all ws:Workstation | no ws & ws.(^succ) no end.succ no succ.begin end in begin.*succ
inv9 U:     │                                                                                                   └──  all ws:Workstation | no ws & ws.(^succ) no end.succ no succ.begin Workstation in begin.*succ
inv9 C:     │                                                                                                       └──  all ws:Workstation-end | one ws.succ no end.succ no succ.begin Workstation in begin.*succ
inv9 O:     │                                                                                                           └──  all ws:Workstation-end | one ws.succ no end.succ no succ.begin Workstation in begin.(^succ)
inv9 C:     │                                                                                                               └──  all ws:Workstation-end | one ws.succ no end.succ no succ.begin Workstation in begin.*succ
inv1 C:     ├──  Worker = Human + Robot
inv2 B:     │   └──  all w: Workstation | some w.workers and one workers.Worker
inv2 B:     │       └──  some Workstation.workers and one workers.Worker
inv2 U:     │           └──  some Workstation.workers
inv5 C:     │               └──  no (workers.Human & workers.Robot)
inv4 B:     │                   └──  some Component.parts and no Material.parts
inv4 S:     │                       └──  all p: Product | p.parts in Product implies p = Components
inv4 B:     │                           └──  all p: Product | p.parts in Product implies p = Component
inv4 U:     │                               └──  no Material.parts
inv7 B:     │                                   └──  all c: Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                       └──  all c: Component | c.parts in Dangerous implies c = Dangerous
inv7 E:     │                                           └──   
inv1 C:     ├──  all w: Worker | w in Human or w in Robot
inv2 B:     │   └──  all w: Worker, ws: Workstation | one workstation.w and some ws.workers
inv2 U:     │       └──  all w: Worker, ws: Workstation | some ws.workers
inv2 B:     │           └──  all w: Worker, ws: Workstation | some ws.workers and one w.workstation
inv2 S:     │               └──  all w: Worker, ws: Workstation | some ws.workers all w: Worker | one ws: Workstations | one w.ws
inv2 T:     │                   └──  all w: Worker, ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | one w.ws
inv2 B:     │                       └──  all w: Worker, ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | one w.workstation
inv2 B:     │                           └──  all w: Worker, ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | one workstation.w
inv2 S:     │                               └──  all w: Worker, ws: Workstation | some ws.workers and one workstation.w all w: Worker | one ws: Workstation | one
inv2 B:     │                                   └──  all w: Worker, ws: Workstation | some ws.workers and one workstation.w
inv2 U:     │                                       └──  all ws: Workstation | some w: Worker | w in ws.workers
inv2 C:     │                                           └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 T:     │                                               └──  all c: Component | one ws: workstation | c in ws.workstation
inv3 T:     │                                                   └──  all c: Component | one ws: workstation | ws in c.workstation
inv3 C:     │                                                       └──  all c: Component | one ws: Workstation | ws in c.workstation
inv3 C:     │                                                           └──  all c: Component | one  c.workstation
inv4 U:     │                                                               └──  all c: Component, m: Material | some c.parts and no m.parts
inv4 T:     │                                                                   └──  all c: Component, m: Material | some p: Product | p in c.parts and no p in m.parts
inv4 U:     │                                                                       └──  all c: Component, m: Material | some p: Product | p in c.parts and p not in m.parts
inv4 C:     │                                                                           └──  all c: Component | some  c.parts all m: Material | no m.parts
inv4 C:     │                                                                               └──  all c: Component | some c.parts all m: Material | no m.parts
inv4 U:     │                                                                                   └──  all c: Component, m: Material | some c.parts and no m.parts
inv4 C:     │                                                                                       └──  all c: Component| some c.parts all m: Material | no m.parts
inv5 S:     │                                                                                           └──  all ws: Worksation, w1,w2: Worker | w1 in ws.workers and w2 in ws.workers and w1 in Human implies w2 in Human
inv5 O:     │                                                                                               └──  all ws: Workstation, w1,w2: Worker | w1 in ws.workers and w2 in ws.workers and w1 in Human implies w2 in Human
inv6 S:     │                                                                                                   └──  all c: Components | c not in c.^parts
inv6 C:     │                                                                                                       └──  all c: Component | c not in c.^parts
inv7 O:     │                                                                                                           └──  all c: Component, p: Product | p in Dangerous and p in c.^parts implies c in Dangerous
inv8 C:     │                                                                                                               └──  all c: Component, w: Worker, ws: Workstation | c in Dangerous and ws in c.workstation and w in ws.workers implies w not in Human
mbx4Jjw6YgDAFRAms M:     │                                                                                                                   └──  user added theme options. same as previous submission
inv1 U:     ├──  all h : Human, r : Robot | h in Worker and h in Worker
inv1 U:     │   └──  all h : Human, r : Robot | h in Worker and r in Worker
inv1 U:     │       └──  all h : Human, r : Robot | h in Worker or r in Worker
inv1 C:     │           └──  all w : Worker | w in Human or w in Robot
inv2 U:     │               └──  all w : Workstation, wr : Worker | some w.workers and lone workers.wr
inv2 U:     │                   └──  all w : Workstation, wr : Worker | some w.workers and one workers.wr
inv2 U:     │                       └──  all w : Workstation, wr : Worker | some w.workers and one workers.wr
inv2 T:     │                           └──  all w : Workstation, wr : Worker | some w.workers and one w.workers.wr
inv2 T:     │                               └──  all w : Workstation, wr : Worker | some w.workers and one w.workers.wr
inv2 T:     │                                   └──  all w : Workstation, wr : Worker | some w.workers and wr in workers
inv2 B:     │                                       └──  all w : Workstation, wr : Worker | some w.workers and wr in w.workers
inv2 T:     │                                           └──  all w : Workstation | some w.workers all wr : Worker | one Workstation.workers.wr
inv2 U:     │                                               └──  all w : Workstation | some w.workers all wr : Worker | wr in Workstation.workers
inv2 C:     │                                                   └──  all w : Workstation | some w.workers all wr : Worker | one workers.wr
inv2 U:     │                                                       └──  all w : Workstation, wr : Worker | some w.workers and one workers.wr
inv2 U:     │                                                           └──  all w : Workstation, wr : Worker | (some w.workers) and one workers.wr
inv3 U:     │                                                               └──  all c : Component | some c.workstation
inv3 C:     │                                                                   └──  all c : Component | one c.workstation
inv4 S:     │                                                                       └──  all c : Component | some c.parts all m : Material | no c.parts
inv4 C:     │                                                                           └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 T:     │                                                                               └──  all w : Workstation | no ((Human in w.workers) & (Robot in w.workers))
inv5 T:     │                                                                                   └──  all w : Workstation | ((Human in w.workers) & (Robot in w.workers)) = none
inv5 T:     │                                                                                       └──  all w : Workstation, h : Human | h in w.workers implies no Robot in w.workers
inv5 C:     │                                                                                           └──  all w : Workstation, h : Human | h in w.workers implies (Robot & w.workers) = none
inv6 C:     │                                                                                               └──  all c : Component | c not in c.^(parts)
inv7 S:     │                                                                                                   └──  all c : Component, some d : Dangerous | d in c.^(parts) implies c in Dangerous
inv7 B:     │                                                                                                       └──  all c : Component | some d : Dangerous | d in c.^(parts) implies c in Dangerous
inv7 B:     │                                                                                                           └──  all c : Component | some d : Dangerous | d in c.parts implies c in Dangerous
inv7 B:     │                                                                                                               └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 S:     │                                                                                                                   └──  all c : Component, all d : Dangerous | some c.parts.d implies c in Dangerous
inv7 T:     │                                                                                                                       └──  all c : Component, d : Dangerous | some c.parts.d implies c in Dangerous
inv7 C:     │                                                                                                                           └──  all c : Component, d : Dangerous | d in c.parts implies c in Dangerous
inv8 C:     │                                                                                                                               └──  all d : Dangerous, h : Human | h not in (d.workstation).workers
inv9 O:     │                                                                                                                                   └──  all w : Workstation | some w.succ all w : Workstation | w not in w.^(succ)
inv9 O:     │                                                                                                                                       └──  all w : Workstation | some w.succ or one Workstation all w : Workstation | w not in w.^(succ)
inv9 B:     │                                                                                                                                           └──  all w : Workstation | some w.succ or one Workstation all w : Workstation | w not in w.^(succ) or one Workstation
inv9 B:     │                                                                                                                                               └──  all w : Workstation | some w.succ all w : Workstation | w not in w.^(succ) or one Workstation
inv9 U:     │                                                                                                                                                   └──  all w : Workstation | w not in w.^(succ) or one Workstation
inv9 U:     │                                                                                                                                                       └──  all w : Workstation | w not in w.^(succ)
inv9 O:     │                                                                                                                                                           └──  all w : Workstation | some w.succ  or one Workstation all w : Workstation | w not in w.^(succ)
inv9 U:     │                                                                                                                                                               └──  all w : Workstation | some w.succ  or w in end all w : Workstation | w not in w.^(succ)
inv9 U:     │                                                                                                                                                                   └──  all w : Workstation | some w.succ  or w in end all w : Workstation | w not in w.^(succ) or w in end
inv9 B:     │                                                                                                                                                                       └──  all w : Workstation | some w.succ all w : Workstation | w not in w.^(succ) or w in end
inv9 U:     │                                                                                                                                                                           └──  all w : Workstation | w not in end implies some w.succ all w : Workstation | w not in w.^(succ) or w in end
inv9 U:     │                                                                                                                                                                               └──  all w : Workstation | w not in end implies some w.succ all w : Workstation | w not in w.^(succ)
Eb5ukZ4tP4RDxeHYv M:     │                                                                                                                                                                                   └──  user added theme options. same as previous submission
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 U:     │   └──  all ws:Workstation | some w:Worker | ws->w in workers
inv2 C:     │       └──  all ws:Workstation | some w:Worker | ws->w in workers all w:Worker | one ws:Workstation | ws->w in workers
inv3 C:     │           └──  all c:Component | one ws:Workstation | c->ws in workstation
inv4 T:     │               └──  all c:Component | c in parts all m:Material | m not in parts
inv4 B:     │                   └──  all c:Component | c->c in parts all m:Material | m->m not in parts
inv5 S:     │                       └──  all h:Human, ws:Workstation | ws->h in workers implies all r:robot | ws->r not in workers
inv4 E:     │                           └──   
inv4 E:     │                               └──   
inv5 C:     │                                   └──  all h:Human, ws:Workstation | ws->h in workers implies all r:Robot | ws->r not in workers all r:Robot, ws:Workstation | ws->r in workers implies all h:Human | ws->h not in workers
inv6 U:     │                                       └──  all c:Component | c->c not in parts
inv4 B:     │                                           └──  all c:Component | some p:Product | p->c in parts all m:Material | all p:Product | p->m not in parts
inv4 S:     │                                               └──  None
inv4 S:     │                                                   └──  None
inv4 C:     │                                                       └──  all c:Component | some p:Product | c->p in parts all m:Material | all p:Product | m->p not in parts
inv6 U:     │                                                           └──  all c:Component | some p:Product | c->p in parts implies p!=c
inv6 U:     │                                                               └──  all c:Component | c->c not in parts
inv8 S:     │                                                                   └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human ws->h not in workers
inv8 U:     │                                                                       └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | ws->h not in workers
inv7 S:     │                                                                           └──  all c:Component | some p:Product | some d:Dangeorus | c->p in parts and d->p in parts implies c in Dangerous
inv7 B:     │                                                                               └──  all c:Component | some p:Product | some d:Dangerous | c->p in parts and d->p in parts implies c in Dangerous
inv6 U:     │                                                                                   └──  all c:Component, p:Product | c->p in parts implies c->c not in parts
inv8 U:     │                                                                                       └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | ws->h not in workers
inv8 U:     │                                                                                           └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | ws->h not in workers
czjkesE2LWtkcTyqi M:     │                                                                                               └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                   ├──  all w:Worker | w in Human or w in Robot
inv6 U:     │                                                                                                   │   └──  all c:Component | c not in c.parts
inv6 C:     │                                                                                                   │       └──  all c:Component | c not in c.^parts
Doozpe2YvuB9TiSTy M:     │                                                                                                   │           ├──  user added theme options. same as previous submission
inv10 O:    │                                                                                                   │           └──  all c:Component | all p:Product | c in p.parts implies all w:Workstation | c not in workstation.w
inv10 U:    │                                                                                                   │               └──  all c:Component | all p:Product | c in p.parts implies all w:Workstation | c not in w.workstation
inv10 O:    │                                                                                                   │                   └──  all c:Component | all p:Product | c in p.parts implies all w:Workstation | c not in workstation.w
inv8 U:     │                                                                                                   │                       └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | h not in ws.^workers
inv8 U:     │                                                                                                   │                           └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | ws->h not in workers
vMbTPoRGd6mZXuArM M:     │                                                                                                   │                               └──  user added theme options. same as previous submission
GJePXm9PhipZDz8By M:     │                                                                                                   │                                   └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                   │                                       └──  all w:Worker | w in Human or w in Robot
inv2 C:     │                                                                                                   │                                           └──  all ws:Workstation | some w:Worker | ws->w in workers all w:Worker | one ws:Workstation | ws->w in workers
inv3 C:     │                                                                                                   │                                               └──  all c:Component | one ws:Workstation | c->ws in workstation
inv4 C:     │                                                                                                   │                                                   └──  all c:Component | some p:Product | c->p in parts all m:Material | all p:Product | m->p not in parts
inv5 C:     │                                                                                                   │                                                       └──  all h:Human, ws:Workstation | ws->h in workers implies all r:Robot | ws->r not in workers all r:Robot, ws:Workstation | ws->r in workers implies all h:Human | ws->h not in workers
inv6 C:     │                                                                                                   │                                                           └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                                                   │                                                               └──  all c:Component | some p:Product | some d:Dangerous | c->p in parts and d->p in parts implies c in Dangerous
inv8 U:     │                                                                                                   │                                                                   └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all h:Human | ws->h not in workers
inv6 C:     │                                                                                                   │                                                                       └──  all c:Component | c not in c.^parts
inv9 S:     │                                                                                                   │                                                                           └──  one b:begin, e:end | e in b.*succs
inv9 U:     │                                                                                                   │                                                                               └──  one b:begin, e:end | e in b.*succ
inv9 B:     │                                                                                                   │                                                                                   └──  one b:begin, e:end | e in b.^succ
inv6 B:     │                                                                                                   │                                                                                       └──  no parts & iden
inv6 O:     │                                                                                                   │                                                                                           └──  no ^parts & iden
ih8kAiFY8Kx6tksiN M:     │                                                                                                   │                                                                                               ├──  user added theme options. same as previous submission
THuSdXCvzdPBSLiG2 M:     │                                                                                                   │                                                                                               └──  user added theme options. same as previous submission
inv8 B:     │                                                                                                   └──  all c:Component | some ws:Workstation | c in Dangerous and c->ws in workstation implies all w:Worker | w in Robot
inv9 B:     │                                                                                                       └──  all ws:Workstation | some wss:Workstation | ws->wss in succ and ws!= wss
inv9 U:     │                                                                                                           └──  all w:Worker,ws:Workstation | ws->w in workers implies lone ws2:Workstation | ws->ws2 in succ
inv1 C:     ├──  Worker = Human + Robot
inv1 C:     │   └──  Worker = Human + Robot
inv2 C:     │       └──  workers in Workstation one -> some Worker
inv2 O:     │           └──  workers in Workstation one -> one Worker
inv2 C:     │               └──  workers in Workstation one -> some Worker
inv3 C:     │                   └──  workstation in Component -> one Workstation
inv4 O:     │                       └──  parts in Component ->  some Product parts not in Material -> Product
inv4 T:     │                           └──  parts in Component ->  some Product parts in Material none -> Product
inv4 C:     │                               └──  parts in Component ->  some Product
inv5 T:     │                                   └──  workers in (Workstation -> Human or Workstation -> Robots)
inv5 C:     │                                       └──  all w:Workstation | no h:Human,r:Robot | w->h in workers and w->r in workers
inv1 B:     ├──  Human in Robot
inv1 O:     │   └──  all w:Worker| w in Human
inv1 O:     │       └──  all w:Worker| w in Human
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  (all ws : Workstation | some w : Worker | ws->w in worker) and (all w : Worker | some ws : Workestation | ws->w in worker)
inv2 S:     │       └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | some ws : Workestation | ws->w in workers)
inv2 U:     │           └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | some ws : Workstation | ws->w in workers)
inv2 C:     │               └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv3 S:     │                   └──  all c : Component | one ws : Workstation | c->w in workstation
inv3 C:     │                       └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │                           └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 T:     │                               └──  all ws : Workstation | some w1,w2 : Worker | (ws->w1 and ws->w2 and w1 in Human) iff (w2 not in Robot)
inv5 T:     │                                   └──  all ws : Workstation | some w1,w2 : Worker | (ws->w1 and ws->w2 and w1 in Human) iff (w2 not in Robot)
inv5 B:     │                                       └──  all ws : Workstation | some w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) iff (w2 not in Robot)
inv5 B:     │                                           └──  all ws : Workstation | some w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) iff (w2 in Human)
inv5 B:     │                                               └──  all ws : Workstation | some w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 O:     │                                                   └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 U:     │                                                       └──  all c1,c2 : Component | c1->c2 in parts implies c1!=c2
inv6 U:     │                                                           └──  all c1,c2 : Component | c1->c2 in parts implies c2->c1 not in parts
inv5 S:     │                                                               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                   └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                       └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                           └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                   └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                       └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                           └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                                   └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                                       └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 S:     │                                                                                                           └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 U:     │                                                                                                               └──  all c1,c2 : Component | c1->c2 in parts implies c2->c1 not in parts
inv6 S:     │                                                                                                                   └──  all c1 | not path[c1,c1]
inv6 S:     │                                                                                                                       └──  all c1 : Component | not path[c1,c1]
inv6 S:     │                                                                                                                           └──  all c1 : Component | not path[c1,c1]
inv6 S:     │                                                                                                                               └──  all c1 : Component | not path[c1,c1]
inv6 S:     │                                                                                                                                   └──  all c1 : Component | not path[c1,c1]
inv1 O:     ├──  all w : Workstation | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 S:     │       └──  all w : Worksation | some wor : Workers | wor in w.workers and w in
inv2 S:     │           └──  all w : Worksation | some wor : Workers | wor in w.workers
inv2 S:     │               └──  all w : Workstation | some wor : Workers | wor in w.workers
inv2 U:     │                   └──  all w : Workstation | some wor : Worker | wor in w.workers
inv2 S:     │                       └──  all w : Workstation | some wor : Worker | wor in w.workers and all worker : Worker | one ws : Workestation | worker in ws.workers
inv2 C:     │                           └──  all w : Workstation | some wor : Worker | wor in w.workers and all worker : Worker | one ws : Workstation | worker in ws.workers
inv3 S:     │                               └──  all c : Component | one ws : Workstation | ws in c.worksation
inv3 C:     │                                   └──  all c : Component | one ws : Workstation | ws in c.workstation
inv4 B:     │                                       └──  all c : Component | some p : Product | c in p.parts and (all m : Material | no p : Product | p in m.parts)
inv5 S:     │                                           └──  all w1, w2 : Worker | ws : Worksation | w1 in Human and w2 in Robot implies (w1 in ws.workers and w2 not in ws.workers) or (w2 in ws.workers and w1 not in ws.workers)
inv5 S:     │                                               └──  all w1, w2 : Worker | ws : Workstation | w1 in Human and w2 in Robot implies (w1 in ws.workers and w2 not in ws.workers) or (w2 in ws.workers and w1 not in ws.workers)
inv5 S:     │                                                   └──  all w1, w2 : Worker | ws : Workstation | w1 in Human and w2 in Robot implies ((w1 in ws.workers and w2 not in ws.workers) or (w2 in ws.workers and w1 not in ws.workers))
inv5 O:     │                                                       └──  all w1, w2 : Worker | all ws : Workstation | w1 in Human and w2 in Robot implies ((w1 in ws.workers and w2 not in ws.workers) or (w2 in ws.workers and w1 not in ws.workers))
inv6 S:     │                                                           └──  all c : Components | c not in c.^(parts)
inv5 O:     │                                                               └──  all w1, w2 : Worker | all ws : Workstation | w1 in Human and w2 in Robot implies ((w1 in ws.workers and w2 not in ws.workers) or (w2 in ws.workers and w1 not in ws.workers))
inv6 C:     │                                                                   └──  all c : Component | c not in c.^(parts)
inv7 S:     │                                                                       └──  all p : Product | c : Component | p in Dangerous and c in p.parts implies c in Dangerous
inv7 S:     │                                                                           └──  all p : Product | c : Component | p in Dangerous and  in c.^parts implies c in Dangerous
inv7 S:     │                                                                               └──  all p : Product | c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv7 O:     │                                                                                   └──  all p : Product |all c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv8 S:     │                                                                                       └──  all c : Component | all ws : Workstation | c in Dangerous and ws in c.workstation implies ws.workes in Robot
inv8 O:     │                                                                                           └──  all c : Component | all ws : Workstation | c in Dangerous and ws in c.workstation implies ws.workers in Robot
inv9 C:     │                                                                                               └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
6bCds28RhnJiAFWEC M:     │                                                                                                   └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                       └──  all w : Worker | w in Human or w in Robot
inv10 B:    │                                                                                                           └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv1 C:     ├──  Worker in Human+Robot
inv3 E:     │   └──   
inv2 C:     │       └──  all w: Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │           └──  all c : Component | one c.workstation
inv4 C:     │               └──  no Material.parts all c : Component | some c.parts
inv5 O:     │                   └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 B:     │                       └──  no parts & iden
inv6 O:     │                           └──  no *parts & iden
inv6 O:     │                               └──  no ^parts & iden
inv6 U:     │                                   └──  iden not in ^parts
inv6 O:     │                                       └──  no iden & ^parts
inv7 O:     │                                           └──  all d : Dangerous, c : ^parts.d | c in Dangerous
inv8 C:     │                                               └──  no Dangerous.workstation.workers & Human
inv8 C:     │                                                   └──  no Dangerous.workstation.workers & Human
inv9 C:     │                                                       └──  Workstation = begin.*succ no end.succ all w : Workstation-end | one w.succ
inv9 U:     │                                                           └──  Workstation = begin.*succ  all w : Workstation-end | one w.succ
inv9 C:     │                                                               └──  Workstation = begin.*succ no end.succ all w : Workstation-end | one w.succ
inv10 B:    │                                                                   └──  all c : Component, p : c.parts | c.workstation in p.workstation.^succ
inv10 B:    │                                                                       └──  all c : Component, p : c.parts&Component | c.workstation in p.workstation.^succ
inv1 S:     ├──  all w: Workers | w in Human or w in Robot
inv1 C:     │   └──  all w: Worker | w in Human or w in Robot
inv2 S:     │       └──  all w: Worker | w in Workstation.workers all s: Workstation | s in workers.Workers
inv2 U:     │           └──  all w: Worker | w in Workstation.workers all s: Workstation | s in workers.Worker
inv2 U:     │               └──  all w: Worker | w in Workstation.workers
inv2 B:     │                   └──  all w: Worker, s: Workstation | w in s.workers
inv2 S:     │                       └──  all s: Workstation | some w: Worker | w in s.workers all w: worker | one s: Worstation | s in workers.Worker
inv2 S:     │                           └──  all s: Workstation | some w: Worker | w in s.workers all w: Worker | one s: Worstation | s in workers.Worker
inv2 B:     │                               └──  all s: Workstation | some w: Worker | w in s.workers all w: Worker | one s: Workstation | s in workers.Worker
inv2 C:     │                                   └──  all s: Workstation | some w: Worker | w in s.workers all w: Worker | one s: Workstation | s in workers.w
inv3 C:     │                                       └──  all c: Component | one s: Workstation | c->s in workstation
inv4 S:     │                                           └──  all p: Component| some x: Produt| p->x in parts all m: Material| no p: Produt| m->p in parts
inv4 C:     │                                               └──  all p: Component| some x: Product| p->x in parts all m: Material| no p: Product| m->p in parts
inv5 B:     │                                                   └──  all h: Human, r: Robot| one s: Workstation | h in s.workers or r in s.workers
inv5 C:     │                                                       └──  no (workers.Human & workers.Robot)
inv6 S:     │                                                           └──  all c: Component, p: Produt| c->p in parts implies c!=p
inv6 U:     │                                                               └──  all c: Component, p: Product| c->p in parts implies c!=p
inv6 T:     │                                                                   └──  all c: Product, p: Product| c im Component and c->p in parts implies c!=p
inv6 U:     │                                                                       └──  all c: Product, p: Product| c in Component and c->p in parts implies c!=p
inv6 C:     │                                                                           └──  all c: Component | c not in c.^parts
inv7 S:     │                                                                               └──  all c: Component | some p: Produts | p = Dangerous and c->p in parts implies c = Dangerous
inv7 S:     │                                                                                   └──  all c: Component | some p: Products | p = Dangerous and c->p in parts implies c = Dangerous
inv7 U:     │                                                                                       └──  all c: Component | some p: Product | p = Dangerous and c->p in parts implies c = Dangerous
inv7 U:     │                                                                                           └──  all c: Component | some p: Product | p in Dangerous and c->p in parts implies c in Dangerous
inv7 U:     │                                                                                               └──  all c: Component | some p: Product | p in Dangerous and p in c.^parts implies c in Dangerous
inv7 B:     │                                                                                                   └──  all p: Product | p in Dangerous implies p.^parts in Dangerous
inv7 O:     │                                                                                                       └──  all p: Product | p in Dangerous implies ^parts.p in Dangerous
inv8 S:     │                                                                                                           └──  all Componentes | c in Dangerous implies Human not in (c.workstation).wokers
inv8 S:     │                                                                                                               └──  all c: Componentes | c in Dangerous implies Human not in (c.workstation).workers
inv8 B:     │                                                                                                                   └──  all c: Component | c in Dangerous implies Human not in (c.workstation).workers
inv8 C:     │                                                                                                                       └──  all c: Component, h: Human | c in Dangerous implies h not in (c.workstation).workers
inv10 B:    │                                                                                                                           └──  all c: Component, p: Product | p in c.^parts implies c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                                               └──  all c: Component |(^parts.c).workstation in (c.workstation).^succ
inv9 C:     │                                                                                                                                   └──  all w : Workstation | w in begin implies Workstation-{w
inv1 U:     ├──  all ws: Workstation, w: Worker | ws->w in workers implies (w in Human or w in Robot)
inv1 B:     │   └──  all ws: Workstation | some w: Worker | ws->w in workers implies (w in Human or w in Robot)
inv9 T:     ├──  all w : workstation | one w.succ
inv9 B:     │   └──  all w : Workstation | one w.succ
inv9 O:     │       └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ
inv9 O:     │           └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end
inv9 O:     │               └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ
inv9 S:     │                   └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no beguin & Workstation.succ
inv9 O:     │                       └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ
inv9 O:     │                           └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ no begin & end
inv9 O:     │                               └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ no begin & end all w : Workstation | w in begin.^succ
inv9 O:     │                                   └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ  all w : Workstation | w in begin.^succ
inv9 O:     │                                       └──  all w : Workstation | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ no begin & end all w : Workstation | w in begin.^succ
inv10 O:    │                                           └──  all c : Component | c.parts in Workstation.^(workstation.succ) - c.workstation.^(workstation.succ)
inv10 O:    │                                               └──  all c : Component | c.parts.workstation in Workstation.^(workstation.succ) - c.workstation.^(workstation.succ)
inv10 U:    │                                                   └──  all c : Component | c.parts.workstation in Workstation - c.workstation.^(workstation.succ)
inv10 B:    │                                                       └──  all c : Component | c.parts.workstation in Workstation - c.workstation.^(succ)
inv10 B:    │                                                           └──  all c : Component | c.parts.workstation in Workstation - c.workstation.^(succ) - c.workstation
inv2 O:     ├──  lone succ and Workstation in Workstation.(~workers)
inv2 O:     │   └──  lone succ and Workstation in Workstation.(~workers)
inv2 B:     │       └──  lone succ and Workstation in Worker.(~workers)
inv2 B:     │           └──  one Worker & Workstation.workers  and Workstation in Worker.(~workers)
inv2 B:     │               └──  one (Worker & Workstation.workers) and Workstation in Worker.(~workers)
inv2 T:     │                   └──  one Worker.~(Worker & Workstation.workers) and Workstation in Worker.(~workers)
inv2 T:     │                       └──  all w : Worker | one w in Workstation.workers and Workstation in Worker.(~workers)
inv2 U:     │                           └──  all w : Worker | Workstation in Worker.(~workers) all w : Workstation | some w.workers
inv2 U:     │                               └──  Workstation in Worker.(~workers) all w : Workstation | some w.workers
inv2 U:     │                                   └──  Workstation in Worker.(~workers) all w : Workstation | some w.workers all w : Worker | w in Workstation.workers
inv2 U:     │                                       └──  all w : Workstation | some w.workers all w : Worker | w in Workstation.workers
inv2 T:     │                                           └──  all w : Workstation | some w.workers all w : Worker | one w in Workstation.workers
inv2 U:     │                                               └──  all w : Workstation | some w.workers all w : Worker | one w & Workstation.workers
inv2 U:     │                                                   └──  all w : Workstation | some w.workers all w : Worker | one w & Workstation.workers
inv2 U:     │                                                       └──  all w : Workstation | some w.workers all w : Worker | one w & Workstation.workers
inv2 U:     │                                                           └──  all w : Workstation | some w.workers all w : Worker | one (Workstation.workers - (univ - w))
inv2 U:     │                                                               └──  all w : Workstation | some w.workers all w : Worker | one w & Workstation.workers
inv2 C:     │                                                                   └──  all w : Workstation | some w.workers all w : Worker | one w.~workers
inv3 S:     │                                                                       └──  all c : Component | onw c.~workstation
inv3 O:     │                                                                           └──  all c : Component | one c.~workstation
inv3 C:     │                                                                               └──  all c : Component | one c.workstation
inv1 C:     ├──  all w : Worker | w in (Human + Robot) - (Human & Robot)
inv1 S:     ├──  Workstation.worker in Human+Robot
inv1 U:     │   └──  Workstation.workers in Human+Robot
inv1 C:     ├──  all w: Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws: Workstation | all w: Worker | ws.workers != none and w in one ws.workers
inv2 B:     │       └──  all ws: Workstation | all w: Worker | ws.workers != none and w in ws.workers
inv2 C:     │           └──  all ws: Workstation | ws.workers != none and (all w: Worker | one wks: Workstation | w in wks.workers)
inv3 C:     │               └──  all comp: Component | one w: Workstation | w in comp.workstation
inv4 E:     │                   └──   
inv5 E:     │                       └──   
inv5 E:     │                           └──   
inv5 E:     │                               └──   
inv5 E:     │                                   └──   
inv5 E:     │                                       └──   
inv5 E:     │                                           └──   
inv5 E:     │                                               └──   
inv5 E:     │                                                   └──   
inv4 S:     │                                                       └──  (all c: Component | some p: Product | p in c.parts) and (all m: Material | no prod: Product | p in m.parts)
inv5 E:     │                                                           └──   
inv4 C:     │                                                               └──  (all c: Component | some p: Product | p in c.parts) and (all m: Material | no prod: Product | prod in m.parts)
inv4 C:     │                                                                   └──  all p: Product | p.parts = none implies p in Material else p in Component
inv5 O:     │                                                                       └──  Workstation.workers in Human or Workstation.workers in Robot
inv5 T:     │                                                                           └──  all ws: Workstation | all w1, w2: Worker | ws.w1 in Human implies ws.w2 in Human else ws.w2 in Robot
inv5 O:     │                                                                               └──  all ws: Workstation | all w1, w2: Worker | (w1+w2) in ws.workers implies ((w1+w2) in Human or (w1+w2) in Robot)
inv6 U:     │                                                                                   └──  all c: Component | c not in c.parts
inv6 C:     │                                                                                       └──  all c: Component | c not in c.^(parts)
inv7 O:     │                                                                                           └──  all c: Component | all d: Dangerous | d in c.^(parts) implies c in Dangerous
inv8 S:     │                                                                                               └──  all c: Component | all w: worker | all ws: Workstation | c in Dangerous and w in c.ws implies w in Robot
inv8 T:     │                                                                                                   └──  all c: Component | all w: Worker | all ws: Workstation | c in Dangerous and w in c.ws implies w in Robot
inv8 T:     │                                                                                                       └──  all c: Component | all w: Worker | all ws: Workstation | c in Dangerous and w in c.ws.workers implies w in Robot
inv8 O:     │                                                                                                           └──  all c: Component | all w: Worker | c in Dangerous and w in c.workstation.workers implies w in Robot
inv9 C:     │                                                                                                               └──  all w, wb: Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w: Workstation | w not in w.^(succ) all w: Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                   └──  all c: Component | c.^(parts.workstation) not in end implies c.workstation not in end
inv10 T:    │                                                                                                                       └──  all c: Component | c.^(parts.workstation not in end) implies c.workstation not in end
inv10 B:    │                                                                                                                           └──  all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w2 in w1.^(succ)
inv10 B:    │                                                                                                                               └──  all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv10 B:    ├──  all c : Component | c.^parts not in Material
inv10 E:    │   └──   
inv10 S:    │       └──  no Components.^parts in end
inv10 T:    │           └──  no Component.^parts in end
inv10 T:    │               └──  all c: Component | no c.^parts in end
inv10 O:    │                   └──  all c: Component | c.^parts in end
inv10 T:    │                       └──  all c: Component | c.^parts.Workstation not in end
inv10 B:    │                           └──  all c: Component | c.^parts not in end
inv1 S:     ├──  all w:Worker| w in Human or w in Robots
inv1 C:     │   └──  all w:Worker| w in Human or w in Robot
inv1 O:     ├──  all w : Worker | w in Human and w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv6 C:     │           └──  all c : Component | c not in c.^parts
inv7 T:     │               └──  all c : Component | some (c & Dangerous) in Dangerous
inv7 T:     │                   └──  all c : Component | some (c & Dangerous) in Dangerous
inv7 T:     │                       └──  all c : Component | some (c & Dangerous) implies c int Dangerous
inv7 U:     │                           └──  all c : Component | some (c & Dangerous) implies c in Dangerous
inv7 C:     │                               └──  all c : Component | some (c.parts & Dangerous) implies c in Dangerous
inv3 C:     │                                   └──  all c : Component | one c.workstation
inv2 S:     │                                       └──  all w : Workstations | w in w.workers
inv2 S:     │                                           └──  all w : Workstations | w in w.workers
inv2 O:     │                                               └──  all w : Workstation | w in w.workers
inv2 U:     │                                                   └──  all w : Workstation | some w.workers
inv2 T:     │                                                       └──  all w : Workstation | w.workers
inv2 U:     │                                                           └──  all w : Workstation | some w.workers
inv2 S:     │                                                               └──  all w : Workstation | some w.workers all w : Workers | one work
inv2 S:     │                                                                   └──  all w : Workstation | some w.workers all w : Worker | one work
inv2 O:     │                                                                       └──  all w : Workstation | some w.workers all w : Worker | one w.workers
inv2 T:     │                                                                           └──  all w : Workstation | some w.workers all w : Worker | one w in Workstation
inv2 C:     │                                                                               └──  all w : Workstation | some w.workers all w : Worker | one wor : Workstation | w in wor.workers
inv4 C:     │                                                                                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv4 C:     │                                                                                       └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 T:     │                                                                                           └──  all h : Human, r : Robot | no (h.workers & r.workers) not in workers
inv5 B:     │                                                                                               └──  all w : Workstation | w.workers in Human implies w.workers not in Robot
inv5 U:     │                                                                                                   └──  all w : Workstation | w.workers in Human implies w.workers not in Robot and w.workers in Robot implies w.workers not in Human
inv5 O:     │                                                                                                       └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 U:     │                                                                                                           └──  all w : Workstation | w.workers in Human implies w.workers not in Robot and w.workers in Robot implies w.workers not in Human
inv5 O:     │                                                                                                               └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 U:     │                                                                                                                   └──  all w : Workstation | w.workers not in Human implies w.workers  in Robot and w.workers not in Robot implies w.workers  in Human
inv5 O:     │                                                                                                                       └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv5 U:     │                                                                                                                           └──  all w : Workstation | no w.workers & Human & Robot
inv1 C:     │                                                                                                                               └──  all w : Worker | w in Human or w in Robot
inv2 C:     │                                                                                                                                   └──  all w : Workstation | some w.workers all w : Worker | one wor : Workstation | w in wor.workers
inv5 U:     │                                                                                                                                       └──  all w : Workstation | no (w.workers & Human & Robot)
inv5 U:     │                                                                                                                                           └──  all w : Workstation | no (w.workers & Human & Robot)
inv5 U:     │                                                                                                                                               └──  all w : Workstation | no (w.workers & Human & Robot)
inv5 T:     │                                                                                                                                                   └──  all w : Workstation | no (w.workers & (Human or Robot))
inv5 T:     │                                                                                                                                                       └──  all w : Workstation |  (w.workers & (Human + Robot))
inv5 T:     │                                                                                                                                                           └──  all w : Workstation | w.workers in (Human or Robot)
inv5 T:     │                                                                                                                                                               └──  all w : Workstation | w.workers in (Human or Robot)
inv5 O:     │                                                                                                                                                                   └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv1 S:     ├──  Workers in Human + Robot
inv1 C:     │   └──  Worker in Human + Robot
inv2 C:     │       └──  all w: Workstation | some w.workers all w: Worker | one workers.w
inv2 U:     │           └──  workers in Workstation one -> Worker
inv2 C:     │               └──  workers in Workstation one -> some Worker
inv3 U:     │                   └──  Component in workstation.Workstation
inv3 C:     │                       └──  workstation in Component -> one Workstation
inv4 C:     │                           └──  parts in Component -> some Product
inv4 U:     │                               └──  parts in Component -> set Product
inv4 C:     │                                   └──  parts in Component -> some Product
inv5 O:     │                                       └──  all w: Workstation | w.workers in Robot or w.workers in Human
inv5 C:     │                                           └──  no (workers.Human & workers.Robot)
inv6 C:     │                                               └──  all c: Component | c not in c.^parts
inv7 O:     │                                                   └──  all c: Component | (some Dangerous & c.^parts) implies (c in Dangerous)
inv7 O:     │                                                       └──  parts.Dangerous in Dangerous
inv7 O:     │                                                           └──  all c: Component | (some Dangerous & c.^parts) implies (c in Dangerous)
inv8 S:     │                                                               └──  no (Dangerous.workstation & workers.Humans)
inv8 C:     │                                                                   └──  no (Dangerous.workstation & workers.Human)
inv9 B:     │                                                                       └──  end in begin.^succ
inv9 U:     │                                                                           └──  end in begin.*succ
inv9 S:     │                                                                               └──  end in begin.*succ all w: begin.^succ |
inv9 U:     │                                                                                   └──  end in begin.*succ all w: begin.^succ | w not in w.succ
inv9 U:     │                                                                                       └──  end in begin.*succ
inv8 C:     │                                                                                           └──  no (Dangerous.workstation & workers.Human)
inv9 U:     │                                                                                               └──  end in begin.*succ
inv9 U:     │                                                                                                   └──  end in begin.*succ all w: Workstation | w not in w.^succ
inv9 U:     │                                                                                                       └──  all w: Workstation - end | one w.succ all w: Workstation | w not in w.^succ
inv9 S:     │                                                                                                           └──  all w: Workstation - end | one w.succ no end.succ all w: Workstaion | w in begin.*succ
inv9 C:     │                                                                                                               └──  all w: Workstation - end | one w.succ no end.succ all w: Workstation | w in begin.*succ
inv9 U:     │                                                                                                                   └──  all w: Workstation - end | one w.succ all w: Workstation | w in begin.*succ
inv9 C:     │                                                                                                                       └──  all w: Workstation - end | one w.succ no end.succ all w: Workstation | w in begin.*succ
inv10 B:    │                                                                                                                           └──  all c: Component | c.workstation in c.parts.workstation.^succ
inv10 B:    │                                                                                                                               └──  all c: Component | all p: c.parts | c.workstation in p.^succ
inv10 S:    │                                                                                                                                   └──  all c: Component | all p: c.parts | c.workstation in p.wokstation.^succ
inv10 B:    │                                                                                                                                       └──  all c: Component | all p: c.parts | c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                                                           └──  all c: Component | (all p: c.parts | c.workstation in p.workstation.^succ)
inv10 B:    │                                                                                                                                               └──  all c: Component | (all p: (c.parts & Component) | c.workstation in p.workstation.^succ)
inv6 S:     ├──  c : Component | c in ~c.^parts
inv6 S:     │   └──  c : Component | c in c.^parts
inv6 S:     │       └──  c : Component | c in (c.^parts)
inv6 C:     │           └──  no c : Component | c in (c.^parts)
inv6 B:     │               └──  all c : Component | c in c.^parts
inv6 T:     │                   └──  all c : Component | c in ~c.^parts
inv6 B:     │                       └──  all c : Component | c in c.~^parts
inv6 C:     │                           └──  no c : Component | c in c.^parts
inv7 S:     │                               └──  all c: Component, d: Dangerous, p: Product | p->d in parts => c-> in parts
inv7 O:     │                                   └──  ^parts.Dangerous in Dangerous
inv1 B:     ├──  all w: Worker, h: Human, r: Robot | w = h or w = r
inv2 T:     │   └──  all ws: Workstation, w: Worker | ws-> w
inv1 C:     │       └──  not some w:Worker | not w  in Human + Robot
inv1 C:     │           └──  all w: Worker | w in Human + Robot
inv1 C:     │               └──  Worker in  Human + Robot
inv1 C:     │                   └──  Worker =  Human + Robot
inv1 C:     │                       └──  all w: Worker | w in Human or w in Robot
inv2 T:     │                           └──  all ws: Workstation, w: Worker | ws->w in Worker
inv1 C:     │                               └──  Worker =  Human + Robot
inv2 B:     │                                   └──  all ws: Workstation, w: Worker | ws->w in workers
inv2 B:     │                                       └──  all ws: Workstation, w: Worker | ws->w in workers and w->ws in workers
inv2 B:     │                                           └──  all ws: Workstation, w: Worker | ws->w in workers
inv2 S:     │                                               └──  all ws: Workstation, w: Worker | ws->w in workers and
inv2 B:     │                                                   └──  all ws: Workstation, w: Worker | ws->w in workers
inv2 T:     │                                                       └──  all ws: Workstation | ws.workers
inv2 U:     │                                                           └──  all ws: Workstation | some ws.workers
inv2 O:     │                                                               └──  all ws: Workstation | some ws.workers all w: Worker | one w.workstation
inv2 C:     │                                                                   └──  all ws: Workstation | some ws.workers all w: Worker | one workers.w
inv2 C:     │                                                                       └──  all ws: Workstation | some ws.workers all w: Worker | one w.~workers
inv2 C:     │                                                                           └──  workers in Workstation one -> some Worker
inv2 S:     │                                                                               └──  workers in one Workstation -> some Worker
inv3 S:     │                                                                                   └──  workstation in Workstation one -> some component
inv2 C:     │                                                                                       └──  workers in Workstation one -> some Worker
inv3 O:     │                                                                                           └──  workstation in Workstation one -> some Component
inv3 T:     │                                                                                               └──  all c: Component | one c.Workstation
inv3 C:     │                                                                                                   └──  all c: Component | one c.workstation
inv4 B:     │                                                                                                       └──  all c: Component, m: Material | c->c in parts and  m->m not in parts
inv4 O:     │                                                                                                           └──  Component in parts.Component and Material.parts = none
inv4 C:     │                                                                                                               └──  Component in parts.Product and Material.parts = none
inv4 C:     │                                                                                                                   └──  Component = parts.Product
inv5 O:     │                                                                                                                       └──  Human = Workstation.workers or Robot = Workstation.workers
inv5 O:     │                                                                                                                           └──  all w: Workstation | w.workers in Human or w.workers in Robot
inv5 B:     │                                                                                                                               └──  all w: Workstation | some w.workers & Robot or no w.workers &Human
inv5 C:     │                                                                                                                                   └──  all w: Workstation | no w.workers & Robot or no w.workers &Human
inv6 S:     │                                                                                                                                       └──  Component in parts.*(Component, Product)
inv6 T:     │                                                                                                                                           └──  Component in parts.*(Product)
inv6 T:     │                                                                                                                                               └──  all c1,c2: Component | c1 in parts.*(c2)
inv6 S:     │                                                                                                                                                   └──  all c1,c2: Component | c1 in parts.*(c2,Product)
inv6 T:     │                                                                                                                                                       └──  all c : Component | c in parts.*Product
inv5 C:     │                                                                                                                                                           └──  all w: Workstation | no w.workers & Robot or no w.workers &Human
inv6 C:     │                                                                                                                                                               └──  all c : Component | c not in c.^parts
inv6 O:     │                                                                                                                                                                   └──  no iden & ^parts
inv7 T:     │                                                                                                                                                                       └──  some c: Component | (c in Product.^parts) in Dangerous implies c in Dangerous
inv6 O:     │                                                                                                                                                                           └──  no iden & ^parts
inv7 B:     │                                                                                                                                                                               └──  some c: Component | some Dangerous & c.^parts implies c in Dangerous
inv7 O:     │                                                                                                                                                                                   └──  all c: Component | some Dangerous & c.^parts implies c in Dangerous
inv9 S:     │                                                                                                                                                                                       └──  all w1,w2,w3: Workstatiion | w1 in begin & w3 in begin & w2.^succ
inv9 T:     │                                                                                                                                                                                           └──  all w1,w2,w3: Workstation | w1 in begin & w3 in begin & w2.^succ
inv9 C:     │                                                                                                                                                                                               └──  succ in Workstation lone -> lone Workstation Workstation in begin.*succ no end.succ
inv9 U:     │                                                                                                                                                                                                   └──  Workstation in begin.*succ no end.succ
inv9 C:     │                                                                                                                                                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in begin.*succ no end.succ
inv1 S:     ├──  all w : Worker | a in Robot or a in Human
inv1 C:     │   └──  all w : Worker | w in Robot or w in Human
inv2 S:     │       └──  all ws :  Workstation | ws implies (lone w : Worker)
inv2 S:     │           └──  all ws :  Workstation | ws implies (lone w : Worker |)
inv2 S:     │               └──  all ws :  Workstation | ws implies (some w : Worker )
inv2 O:     │                   └──  all ws :  Workstation | some w :  Worker | w->ws in workstation
inv2 S:     │                       └──  all ws :  Workstation | some w :  Worker | w->ws in workstation all w :  Worker | one w :  Workstation | w->ws in workstation
inv2 O:     │                           └──  all ws :  Workstation | some w :  Worker | w->ws in workstation all w :  Worker | one ws :  Workstation | w->ws in workstation
inv2 O:     │                               └──  (all ws :  Workstation | some w :  Worker | w->ws in workstation) and (all w :  Worker | one ws :  Workstation | w->ws in workstation)
inv2 O:     │                                   └──  (all ws :  Workstation | some w :  Worker | w->ws in workers) and (all w :  Worker | one ws :  Workstation | w->ws in workers)
inv2 C:     │                                       └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv2 C:     │                                           └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv2 C:     │                                               └──  (all ws : Workstation | some w : Worker | ws->w in workers) (all w : Worker | one ws : Workstation | ws->w in workers)
inv2 C:     │                                                   └──  all ws : Workstation | some w : Worker | ws->w in workers all w : Worker | one ws : Workstation | ws->w in workers
inv3 C:     │                                                       └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 T:     │                                                           └──  all c : Component | c in parts all m : Material | m not in parts
inv4 T:     │                                                               └──  all c : Component | c in parts
inv4 U:     │                                                                   └──  all c : Component | some p : Product | c->p in parts
inv4 U:     │                                                                       └──  all c : Component | some p : Product | c->p in parts all m : Material| some p : Product | m->p not in parts
inv4 C:     │                                                                           └──  all c : Component | some p : Product | c->p in parts all m : Material| no p : Product | m->p  in parts
inv5 T:     │                                                                               └──  all h :  Human | all r : Robot | all w : workstation | h->w in workers implies r->w not in workers
inv5 S:     │                                                                                   └──  None
inv5 S:     │                                                                                       └──  None
inv5 S:     │                                                                                           └──  None
inv5 S:     │                                                                                               └──  None
inv5 S:     │                                                                                                   └──  None
inv5 S:     │                                                                                                       └──  None
inv5 U:     │                                                                                                           └──  all h :  Human | all r : Robot | all w : Workstation | h -> w in workers implies r->w not in workers
inv5 S:     │                                                                                                               └──  all w : Workers | all w1 :  Workstation | w1->w in workers
inv5 B:     │                                                                                                                   └──  all w : Worker | all w1 :  Workstation | w1->w in workers
inv5 T:     │                                                                                                                       └──  all w1,w2 : Worker | all ws1,ws2 :  Workstation | (ws1->w1 in workers and ws2->w2 and w2 in Human) implies ( w2 in Human)
inv5 T:     │                                                                                                                           └──  all w1,w2 : Worker | all ws1,ws2 :  Workstation | (ws1->w1 in workers and ws2->w2 and w2 in Human) implies (w2 in Human)
inv5 U:     │                                                                                                                               └──  all w1,w2 : Worker | all ws1,ws2 :  Workstation | (ws1->w1 in workers and ws2->w2 in workers and w2 in Human) implies (w2 in Human)
inv5 O:     │                                                                                                                                   └──  all w1,w2 : Worker | all ws1,ws2 :  Workstation | (ws1->w1 in workers and ws2->w2 in workers and w1 in Human) implies (w2 in Human)
inv5 O:     │                                                                                                                                       └──  all w1,w2 : Worker | all ws1,ws2 :  Workstation | (ws1->w1 in workers and ws2->w2 in workers and w2 in Human) implies (w1 in Human)
inv5 O:     │                                                                                                                                           └──  all w1,w2 : Worker | all ws :  Workstation | (ws->w1 in workers and ws->w2 in workers and w2 in Human) implies (w1 in Human)
inv6 S:     │                                                                                                                                               └──  all c1,c2 : Components | all p : Product | (c1->p in parts and c2->p in parts) implies (c1=c2)
inv6 B:     │                                                                                                                                                   └──  all c1,c2 : Component | all p : Product | (c1->p in parts and c2->p in parts) implies (c1=c2)
inv6 S:     │                                                                                                                                                       └──  all c1,c2 : Component | all p : Product | (c1->p in parts and c2->p in parts) implies (c1==c2)
inv6 B:     │                                                                                                                                                           └──  all c1,c2 : Component | all p : Product | (c1->p in parts and c2->p in parts) implies (c1=c2)
inv6 S:     │                                                                                                                                                               └──  all c1,c2 : Component |c not in c.^(parts)
inv6 C:     │                                                                                                                                                                   └──  all c : Component |c not in c.^(parts)
inv7 S:     │                                                                                                                                                                       └──  all c : Component | all p : Product | p in Dangerous implies c in dangerous
inv7 O:     │                                                                                                                                                                           └──  all c : Component | all p : Product | p in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                                                                               └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
LocY4FkXM2X4KGR6o M:     │                                                                                                                                                                                   └──  user added theme options. same as previous submission
q4JyXvF4ZshDTbidn M:     │                                                                                                                                                                                       └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker = Human + Robot
inv2 C:     │   └──  workers in Workstation one -> some Worker
inv2 C:     │       └──  workers in Workstation one -> some Worker
inv3 C:     │           └──  workstation in Component -> one Workstation
inv3 C:     │               └──  workstation in Component -> one Workstation
inv4 C:     │                   └──  parts in Component -> some Product no Material.parts
inv5 T:     │                       └──  all w : Workstation | no Human*Robot & w.workers*w.workers
inv5 C:     │                           └──  all w : Workstation | no Human->Robot & w.workers->w.workers
inv6 S:     │                               └──  all c : Components | c not in c.parts
inv6 U:     │                                   └──  all c : Component | c not in c.parts
inv6 C:     │                                       └──  all c : Component | c not in c.^parts
inv6 C:     │                                           └──  all c : Component | c not in c.^parts
inv7 O:     │                                               └──  all c : Component | some (c.*parts & Dangerous) implies c in Dangerous
inv8 O:     │                                                   └──  (Component & Dangerous).workstation.workers in Robot
inv8 B:     │                                                       └──  (Component & Dangerous).workstation.workers not in Human
inv8 C:     │                                                           └──  no (Component & Dangerous).workstation.workers & Human
inv9 U:     │                                                               └──  Workstation in (begin.*succ & end.*(~succ)) no iden & ^succ
inv9 C:     │                                                                   └──  succ in Workstation lone -> lone Workstation Workstation in (begin.*succ & end.*(~succ)) no iden & ^succ
inv9 U:     │                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in (begin.*succ & end.*(~succ))
inv9 U:     │                                                                           └──  succ in Workstation lone -> lone Workstation  no iden & ^succ
inv9 C:     │                                                                               └──  succ in Workstation lone -> lone Workstation Workstation in (begin.*succ & end.*(~succ)) no iden & ^succ
inv10 C:    │                                                                                   └──  all c : Component | (c.parts & Component).workstation in c.workstation.^(~succ)
rB2bdb4xqLdEjMTzA M:     │                                                                                       └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker in Human + Robot
inv1 C:     │   └──  Worker = (Human + Robot)
inv1 C:     │       └──  Worker = (Human + Robot)
inv2 U:     │           └──  some workers and some Worker.(~workers)
inv2 O:     │               └──  Workstation = Workstation.workers
inv2 S:     │                   └──  (Workstation = workers.Workstation) and
inv2 O:     │                       └──  (Workstation = workers.Workstation)
inv2 O:     │                           └──  (Workstation = Worker.workers)
inv2 U:     │                               └──  (Workstation = workers.Worker)
inv2 O:     │                                   └──  (Workstation = workers.Worker) and (Worker = workers.Workstation)
inv1 C:     │                                       └──  Worker in Human + Robot
inv1 C:     │                                           └──  Worker in Human + Robot
inv2 E:     │                                               └──   
inv2 U:     │                                                   └──  (Workstation = workers.Worker) and (Worker = Workstation.workers)
inv2 O:     │                                                       └──  (Workstation = workers.Worker) and (Worker = Worker.~workers)
inv2 O:     │                                                           └──  (Workstation = workers.Workstation) and (Worker = Worker.~workers)
inv2 C:     │                                                               └──  workers in Workstation one -> some Worker
inv2 C:     │                                                                   └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv3 C:     │                                                                       └──  workstation in Component -> one Workstation
inv3 C:     │                                                                           └──  all c:Component | one c.workstation
inv4 O:     │                                                                               └──  no parts.Material and (Component = parts.Component)
inv4 B:     │                                                                                   └──  (no Material.parts) and (Component = Component.parts)
inv4 S:     │                                                                                       └──  all c: Components | some c.parts all m:Material | m.parts = none
inv4 C:     │                                                                                           └──  all c: Component | some c.parts all m:Material | m.parts = none
inv4 C:     │                                                                                               └──  parts in Component -> some Product
inv4 C:     │                                                                                                   └──  parts.Product = Component
inv5 O:     │                                                                                                       └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                                                                                           └──  no workers.Human & workers.Robot
inv5 C:     │                                                                                                               └──  no workers.Human & workers.Robot
inv6 O:     │                                                                                                                   └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                                                                       └──  all c:Component | c not in c.^parts
inv6 C:     │                                                                                                                           └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                                                                               └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                                                                                   └──  no iden & ^parts
inv6 O:     │                                                                                                                                       ├──  no iden & ^parts
inv7 O:     │                                                                                                                                       │   └──  parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │       └──  parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │           └──  parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │               └──  ^parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │                   └──  parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │                       └──  ^parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                       │                           └──  parts.Dangerous in Dangerous
inv7 S:     │                                                                                                                                       │                               └──  all c:Components | some c.parts & Dangerous
inv7 C:     │                                                                                                                                       │                                   └──  all c:Component | some c.parts & Dangerous implies c in Dangerous
inv8 S:     │                                                                                                                                       │                                       └──  (Workstation.workstation).workers in Robots
inv8 U:     │                                                                                                                                       │                                           └──  (Workstation.workstation).workers in Robot
inv8 U:     │                                                                                                                                       │                                               └──  (workstation.Component).workers in Robot
inv8 O:     │                                                                                                                                       │                                                   └──  ~workers.((~workstation).Component) in Robot
inv8 O:     │                                                                                                                                       │                                                       └──  ~workers.((~workstation).Dangerous) in Robot
inv8 O:     │                                                                                                                                       │                                                           └──  ~workers.~workstation.Dangerous in Robot
inv8 C:     │                                                                                                                                       │                                                               └──  no Dangerous.workstation.workers & Human
inv8 C:     │                                                                                                                                       │                                                                   └──  no Dangerous.workstation.workers & Human
inv9 U:     │                                                                                                                                       │                                                                       └──  no iden & ^succ
inv9 S:     │                                                                                                                                       │                                                                           └──  all w:Workstation-end | one w.succ no end.succ.
inv9 U:     │                                                                                                                                       │                                                                               └──  all w:Workstation-end | one w.succ no end.succ
inv9 T:     │                                                                                                                                       │                                                                                   └──  all w:Workstation-end | one w.succ no end.succ begin.*succ
inv9 U:     │                                                                                                                                       │                                                                                       └──  all w:Workstation-end | one w.succ no end.succ end in begin.*succ
inv9 C:     │                                                                                                                                       │                                                                                           └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
xnxXZks9Mrg6zy32L M:     │                                                                                                                                       └──  user added theme options. same as previous submission
inv1 S:     ├──  all w1,w2: Workers | w1 != w2 => w1 in Human and w2 in Robot
inv1 S:     │   └──  all w1,w2: Workers | w1 != w2 => (w1 in Human and w2 in Robot)
inv1 B:     │       └──  all w1,w2: Worker | w1 != w2 => (w1 in Human and w2 in Robot)
inv1 B:     │           └──  all w1,w2: Worker | w1 != w2 => (w1 in Human and w2 in Robot)
inv1 B:     │               └──  all w1,w2: Worker | w1 != w2 => (w1 in Human and w2 in Robot)
inv1 O:     │                   └──  no Worker all w1,w2: Worker | w1 != w2 => (w1 in Human and w2 in Robot)
inv1 C:     │                       └──  Worker in (Human + Robot)
inv2 T:     │                           └──  Workstation some -> one Worker
inv3 S:     │                               └──  all c: Component : one workstation.c
inv2 T:     │                                   └──  Workstation some -> one Worker
inv1 C:     ├──  not some w : Worker | not w in Human+Robot
inv2 S:     │   └──  all
inv2 S:     │       └──  all
inv1 C:     │           └──  Worker = Human + Robot
inv2 C:     │               └──  all w:Workstation | some w.workers all w:Worker | one w.~workers
inv3 B:     │                   └──  workstation in Component one -> Worker
inv3 O:     │                       └──  workstation in Component  -> one Worker
inv3 B:     │                           └──  workstation in Component one -> Workstation
inv3 C:     │                               └──  workstation in Component -> one Workstation
inv4 S:     │                                   └──  all c:Components | some p: not some m : Material | m.parts
inv4 S:     │                                       └──  all c:Components | some p: not some m : Material | m.parts
inv3 C:     │                                           └──  workstation in Component -> one Workstation
inv4 S:     │                                               └──  all c:Components | some c.parts all m : Material | no m.parts
inv4 C:     │                                                   └──  all c:Component | some c.parts all m : Material | no m.parts
inv4 S:     │                                                       └──  all m : Material | no m.parts Components in Product.parts
inv4 B:     │                                                           └──  all m : Material | no m.parts Component in Product.parts
inv4 T:     │                                                               └──  all m : Material | no m.parts Component in Product.parts.Component
inv4 B:     │                                                                   └──  all m : Material | no m.parts Component in Component.parts
inv4 C:     │                                                                       └──  all m : Material | no m.parts Component in parts.Product
inv1 C:     ├──  all w:Worker | w in Robot or w in Human
inv1 C:     │   └──  Worker in Human + Robot
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 C:     │   └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv3 C:     │       └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │           └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 O:     │               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 S:     │                   └──  all c1 : Component | not path[c1,c1]
inv6 S:     │                       └──  all c1 : Component | c not in c.^(parts)
inv6 C:     │                           └──  all c : Component | c not in c.^(parts)
inv7 O:     │                               └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 S:     │                                   └──  all c : Component | all w: Workstation | c in Dangerous and w in c.worstation implies (all h : Human | h not in w.workers)
inv8 S:     │                                       └──  all c : Component | all w: Workstation | c in Dangerous and w in c.workstatio implies (all h : Human | h not in w.workers)
inv8 C:     │                                           └──  all c : Component | all w: Workstation | c in Dangerous and w in c.workstation implies (all h : Human | h not in w.workers)
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv7 B:     │   └──  all c : Component | Dangerous in c.parts implies c in Dangerous
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv2 C:     │           └──  (all ws:Workstation | some w : Worker | w in ws.workers) and (all w:Worker | one ws:Workstation | w in ws.workers)
inv3 C:     │               └──  all c : Component | one w : Workstation | c in workstation.w
inv4 C:     │                   └──  (all c : Component | some c.parts) and (all m:Material | no m.parts)
inv5 C:     │                       └──  all w : Workstation, h:Human, r:Robot | h in w.workers implies r not in w.workers
inv6 U:     │                           └──  all c:Component | c not in c.parts
inv7 B:     │                               └──  all c : Component | Dangerous in c.parts implies c in Dangerous
inv6 U:     │                                   └──  all c1:Component, c2:c1.parts | c1!=c2
inv6 C:     │                                       └──  all c:Component | c not in c.^parts
inv7 C:     │                                           └──  all c : Component, p:Product | p in c.parts and p in Dangerous implies c in Dangerous
inv8 B:     │                                               └──  all ws:Workstation, c:Dangerous | c in workstation.ws
inv8 B:     │                                                   └──  all ws:Workstation, c:Dangerous | c in workstation.ws implies ws.workers not in Human
inv9 U:     │                                                       └──  all w :Workstation | w not in end implies one w.succ
inv9 U:     │                                                           └──  all w :Workstation | w not in w.^succ
inv9 U:     │                                                               └──  all w,wb :Workstation | wb in begin and w!=wb implies w in wb.^succ
inv1 C:     ├──  Worker = Human + Robot
inv2 S:     │   └──  works in Workstation one -> some Worker
inv2 C:     │       └──  workers in Workstation one -> some Worker
inv3 C:     │           └──  workstation in Component -> one Workstation
inv4 C:     │               └──  all c:Component | some c.parts no Material . parts
inv4 C:     │                   └──  parts . Product = Component
inv5 C:     │                       └──  no (workers . Human & workers . Robot)
inv6 C:     │                           └──  all c : Component | c not in c.^parts
inv7 B:     │                               └──  all c : Component | some d:Dangerous | d in c.^parts => c in Dangerous
inv7 O:     │                                   └──  all c : Component, d:Dangerous | d in c.^parts => c in Dangerous
inv8 C:     │                                       └──  no (Dangerous.workstation &workers . Human)
inv9 T:     │                                           └──  begin . ^ succ . end
inv9 T:     │                                               └──  (begin . ^ succ) . end
inv9 T:     │                                                   └──  (begin . ^ succ) . end
inv10 T:    │                                                       └──  Component . parts . workstation
inv10 O:    │                                                           └──  no Component . parts . workstation
inv10 B:    │                                                               └──  no Component . parts . workstation . ~succ
inv10 B:    │                                                                   └──  Component . workstation not in Component . parts . workstation . succ
inv1 T:     ├──  all w : Worker | Human.w or Robot.w
inv1 T:     │   └──  all w : Worker | Human.w || Robot.w
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
NrXy89hBJ5svtQiuM N:     │           └──  user added extra characters to pred name
inv1 C:     ├──  Worker in (Human + Robot)
inv2 C:     │   └──  all w : Workstation | some w . workers all w : Worker | one workers . w
inv3 C:     │       └──  all c : Component | one c . workstation
inv4 C:     │           └──  parts . Product = Component
inv5 O:     │               └──  all w : Workstation | (w . workers in Human) or (w . workers in Robot)
inv1 T:     ├──  Human or Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 C:     │       └──  (all ws:Workstation | some w : Worker | w in ws.workers) and (all w:Worker | one ws:Workstation | w in ws.workers)
inv3 C:     │           └──  all c : Component | one w : Workstation | c in workstation.w
inv4 U:     │               └──  all c : Component, m:Material | (some c.parts and no m.parts)
inv4 C:     │                   └──  (all c : Component | some c.parts) and (all m:Material | no m.parts)
inv5 C:     │                       └──  all w : Workstation, h:Human, r:Robot | h in w.workers implies r not in w.workers
inv6 B:     │                           └──  all c:Component | c.parts not in Component
inv6 U:     │                               └──  all c:Component | Component not in c.parts
inv6 S:     │                                   └──  all c1,c2:Component | c2 not in c.parts
inv6 B:     │                                       └──  all c1,c2:Component | c2 not in c1.parts
inv1 U:     ├──  Human + Robot in Worker
inv1 C:     │   └──  Worker in Human + Robot
inv1 C:     │       └──  Worker in Human + Robot
inv2 U:     │           └──  workers in Workstation some -> some Worker
inv2 C:     │               └──  workers in Workstation one -> some Worker
inv3 C:     │                   └──  all c:Component | one c.workstation
inv4 C:     │                       └──  all c:Component | some c.parts no Material.parts
inv5 C:     │                           └──  no (workers.Human & workers.Robot)
inv6 S:     │                               └──  all c:Components | c not in c.*parts
inv6 O:     │                                   └──  all c:Component | c not in c.*parts
inv6 C:     │                                       └──  all c:Component | c not in c.^parts
inv6 C:     │                                           └──  all c:Component | c not in c.^parts
inv7 O:     │                                               └──  all c:Component | some Dangerous&c.^parts implies c in Dangerous
inv8 C:     │                                                   └──  all d:Dangerous | no Human&d.workstation.workers
inv9 U:     │                                                       └──  Workstation in begin.*succ & end.*~succ all w:Workstation | w not in w.^succ
inv9 C:     │                                                           └──  Workstation in begin.*succ & end.*~succ all w:Workstation | w not in w.^succ and lone w.succ
inv10 B:    │                                                               └──  all c:Component | c.^parts in (c.workstation.^~succ).~workstation
inv10 B:    │                                                                   └──  all c:Component | no c.^parts & (c.workstation.^succ).~workstation
inv10 B:    │                                                                       └──  all c:Component | no c.^parts & (c.workstation.*succ).~workstation
inv10 B:    │                                                                           └──  all c:Component | c.^parts&Component in (c.workstation.^~succ).~workstation
inv1 E:     ├──   
inv1 T:     │   └──  all w:Worker | (w & Human) or (w & Robot)
inv1 T:     │       └──  all w:Worker | Workstation.w implies (w & Human or w & Robot)
inv1 S:     │           └──  all w:Worker | Workstation.w | (w & Human or w & Robot)
inv1 T:     │               └──  all w:Worker | all wo:Workstation | (wo.w & Human or wo.w & Robot)
inv1 T:     │                   └──  no (Workstation.workers & Human and Workstation.workers & Robot)
inv1 B:     │                       └──  no (Workstation.workers & Human) and no (Workstation.workers & Robot)
inv1 T:     │                           └──  (Workstation.workers & Human) or  (Workstation.workers & Robot)
inv1 T:     │                               └──  (Workstation.workers & Human) or (Workstation.workers & Robot)
inv1 T:     │                                   └──  (Workstation.workers & Human) implies no (Workstation.workers & Robot)
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws : Workstation | some w : worker | ws -> w in workers
inv2 U:     │       └──  all ws : Workstation | some w : Worker | ws -> w in workers
inv2 T:     │           └──  all ws : Workstation | some w : Worker | ws -> w in workers all w : Worker | one ws : workstation | ws->w in workers
inv2 S:     │               └──  all w : Worker, ws : Workstation | w in one ws
inv2 S:     │                   └──  all w : Worker one ws : Workstation | w in ws
inv2 B:     │                       └──  all w : Worker | one ws : Workstation | w in ws
inv1 C:     ├──  all w:Worker | w in Human+Robot
inv1 C:     │   └──  Worker = Human + Robot
inv1 C:     │       └──  Worker in Human + Robot
inv2 C:     │           └──  workers in Workstation one -> some Worker
inv2 S:     │               └──  all w:Worker | one workers.w all w:Wokstation | some w.workers
inv2 C:     │                   └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv3 C:     │                       └──  all c:Component | one c.workstation
inv3 C:     │                           └──  all c:Component | one c.workstation
inv2 C:     │                               └──  all w:Worker | one workers.w Workstation = workers.Worker
inv2 C:     │                                   └──  all w:Worker | one w.~workers all w:Workstation | some w.workers
inv4 B:     │                                       └──  all c:Component, m:Material, p:Product | c->p in parts and m->p not in parts
inv4 U:     │                                           └──  all c:Component, m:Material | some p:Product | c->p in parts and m->p not in parts
inv4 C:     │                                               └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 U:     │                                                   └──  parts in Component -> Product
inv4 C:     │                                                       └──  parts in Component -> some Product
inv4 C:     │                                                           └──  parts.Product = Component
inv5 S:     │                                                               └──  all w:Worstation, h:Human, r:Robot | h not in w.works or r not in w.works
inv5 S:     │                                                                   └──  all w:Workstation, h:Human, r:Robot | h not in w.works or r not in w.works
inv5 C:     │                                                                       └──  all w:Workstation, h:Human, r:Robot | h not in w.workers or r not in w.workers
inv5 S:     │                                                                           └──  all w:Worstation | w.workers in Human + Robot
inv5 B:     │                                                                               └──  all w:Workstation | w.workers in Human + Robot
inv5 O:     │                                                                                   └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C:     │                                                                                       └──  no workers.Human & workers.Robot
inv6 S:     │                                                                                           └──  Components not in Component.parts
inv5 C:     │                                                                                               └──  no workers.Human & workers.Robot
inv6 B:     │                                                                                                   └──  Component not in Component.parts
inv6 C:     │                                                                                                       └──  all c:Component | c not in c.^parts
inv6 U:     │                                                                                                           └──  not iden in ^parts
inv6 O:     │                                                                                                               └──  no iden & ^parts
inv7 B:     │                                                                                                                   └──  Dangerous.parts = Dangerous
inv7 B:     │                                                                                                                       └──  all d:Dangerous | some d.parts
inv7 B:     │                                                                                                                           └──  all d:Dangerous | some d1: Dangerous | d->d1 in parts
inv7 B:     │                                                                                                                               └──  all d1, d2:Dangerous | d1->d2 in parts
inv7 B:     │                                                                                                                                   └──  all d2:Dangerous | some d1:Dangerous | d1->d2 in parts
inv7 B:     │                                                                                                                                       └──  Dangerous.parts = Dangerous
inv7 O:     │                                                                                                                                           └──  ^parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                               └──  parts.Dangerous in Dangerous
inv7 O:     │                                                                                                                                                   └──  parts.Dangerous = Dangerous
inv7 C:     │                                                                                                                                                       └──  all c:Component | some c.parts & Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                                                           └──  parts.Dangerous = Dangerous
inv8 T:     │                                                                                                                                                               └──  all c:Component, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 T:     │                                                                                                                                                                   └──  all c:Component, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 T:     │                                                                                                                                                                       └──  all c:Dangerous, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C:     │                                                                                                                                                                           └──  all c:Dangerous, ws:c.workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C:     │                                                                                                                                                                               └──  all c:Dangerous, ws:c.workstation, w:ws.workers | w not in Human
inv8 C:     │                                                                                                                                                                                   └──  all c:Dangerous, w:c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                                                                       └──  no Dangerous.workstation.workers & Human
inv8 C:     │                                                                                                                                                                                           └──  Dangerous.workstation.workers & Human = none
inv8 C:     │                                                                                                                                                                                               └──  no Dangerous.workstation.workers & Human
inv9 B:     │                                                                                                                                                                                                   └──  begin.succ = end
inv9 B:     │                                                                                                                                                                                                       └──  begin.succ in end
inv9 B:     │                                                                                                                                                                                                           └──  begin.^succ = end
inv9 B:     │                                                                                                                                                                                                               └──  begin.*succ = end
inv9 U:     │                                                                                                                                                                                                                   └──  all w:Workstation-end | one w.succ no end.succ end in begin.*succ
inv9 C:     │                                                                                                                                                                                                                       └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv1 C:     ├──  all w: Worker | w in Robot or w in Human
inv2 U:     │   └──  all ws: Workstation, w: Worker | some ws.workers and some workers.w
inv2 U:     │       └──  all ws: Workstation, w: Worker | some ws.workers
inv2 U:     │           └──  all ws: Workstation, w: Worker | some ws.workers and w in Workstation.workers
inv2 O:     │               └──  all ws: Workstation | some ws.workers all w: Worker, ws1: Workstation, ws2: Workstation | w in ws1.workers implies w not in ws2.workers
inv2 O:     │                   └──  all ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | w in ws
inv2 T:     │                       └──  all ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | ws->w in ws.workers
inv2 C:     │                           └──  all ws: Workstation | some ws.workers all w: Worker | one ws: Workstation | ws->w in workers
inv3 C:     │                               └──  all c: Component | one ws: Workstation | c->ws in workstation
inv4 S:     │                                   └──  all c: Component | some c.parts all m: material | no m.parts
inv4 C:     │                                       └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 C:     │                                           └──  all ws: Workstation, w: Worker | w in ws.workers and w in Human implies no Robot&ws.workers
inv6 U:     │                                               └──  all c: Component | c not in c.parts
inv6 C:     │                                                   └──  all c: Component | c not in c.^parts
inv6 U:     │                                                       └──  all c: Component | c not in c.parts
inv6 C:     │                                                           └──  all c: Component | c not in c.^parts
inv7 S:     │                                                               └──  all c: Component, p: Part | p in c.parts and p in Dangerous implies c in Dangerous
inv7 S:     │                                                                   └──  all c: Component, p: Part | some c.parts&Dangerous implies c in Dangerous
inv7 C:     │                                                                       └──  all c: Component | some c.parts&Dangerous implies c in Dangerous
inv8 C:     │                                                                           └──  all c: Component, ws: Workstation | c in Dangerous and c->ws in workstation implies no ws.workers&Human
inv1 S:     ├──  Workers = (Human - Robot) + (Robot - Human)
inv1 C:     │   └──  Worker = (Human - Robot) + (Robot - Human)
inv1 C:     │       └──  (Human + Robot) <: Worker = Worker
inv1 C:     │           └──  Human <: Worker = Worker - (Robot <: Worker)
inv1 C:     │               └──  Human <: Worker = Worker - (Robot <: Worker)
inv1 C:     │                   └──  (Human <: Worker) = Worker - (Robot <: Worker)
inv1 C:     │                       └──  (Human & Worker) = Worker - (Robot & Worker)
inv1 C:     │                           └──  (Human + Robot) & Worker = Worker
inv1 C:     │                               └──  no ((Human <: Worker) & (Robot <: Worker)) Human + Robot = Worker
inv1 C:     │                                   └──  Human + Robot = Worker
inv2 S:     │                                       └──  workers in Workstation one -> some Worker all w,x : Worksations | w != x -> no (w.workers & x.workers)
inv2 S:     │                                           └──  workers in Workstation one -> some Worker all w,x : Worksation | w != x -> no (w.workers & x.workers)
inv2 S:     │                                               └──  workers in Workstation one -> some Worker all w,x : Worksation | w != x implies no (w.workers & x.workers)
inv2 C:     │                                                   └──  workers in Workstation one -> some Worker all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv3 O:     │                                                       └──  workstation in Component one -> one Workstation
inv3 C:     │                                                           └──  workstation in Component set -> one Workstation
inv4 B:     │                                                               └──  some (Component <: parts) no (Material <: parts)
inv4 O:     │                                                                   └──  (Component <: parts) in Component one -> some Product no (Material <: parts)
inv4 C:     │                                                                       └──  (Component <: parts) in Component set -> some Product no (Material <: parts)
djjYtaRcbaG8fiWAF M:     │                                                                           └──  user added theme options. same as previous submission
inv1 C:     ├──  Worker = Human + Robot
inv2 C:     │   └──  all x : Workstation | some x.workers all x : Worker | one workers.x
inv3 C:     │       └──  all c : Component | one c.workstation
inv4 B:     │           └──  all c : Component | some parts.c all m : Material | no parts.m
inv4 S:     │               └──  all c : Component | some c.parts all m : Material | no p.parts
inv4 C:     │                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 B:     │                       └──  all c : Workstation | c.workers in Human implies no Robot - c.workers
inv5 B:     │                           └──  all c : Workstation | c.workers in Human implies no Robot - c.workers and c.workers in Robot implies no Human-c.workers
inv6 B:     │                               └──  no iden & parts
inv6 U:     │                                   └──  all c : Component | c not in c.parts
inv6 C:     │                                       └──  all c : Component | c not in c.(^parts)
inv7 O:     │                                           └──  all c : Component | some Dangerous & c.(^parts) implies c in Dangerous
inv1 S:     ├──  all w: Worker | w in Human or W in Robot
inv1 C:     │   └──  all w: Worker | w in Human or w in Robot
inv2 T:     │       └──  all ws: Workstation| sum w: Worker | w->ws in workers all k: Worker | one ks: Workstartion | w->ks in workers
inv1 S:     ├──  all w: WorkStation, work: Worker | work in w.workers implies work in Human or work in Robot
inv1 U:     │   └──  all w: Workstation, work: Worker | work in w.workers implies work in Human or work in Robot
inv1 C:     │       └──  all work: Worker | work in Human or work in Robot
inv2 C:     │           └──  all w: Workstation | some w.workers all w: Workstation, wo: Worker | one workers.wo
inv2 C:     │               └──  all w: Workstation | some w.workers all w: Worker | one workers.w
inv3 B:     │                   └──  all w: Workstation | one workstation.w
inv3 S:     │                       └──  all c: Component, w: Workstation | w in c.workstation one workstation.w
inv3 B:     │                           └──  all c: Component, w: Workstation | w in c.workstation implies one workstation.w
inv3 B:     │                               └──  all c: Component, w: Workstation | w in c.workstation implies one workstation.c
inv3 B:     │                                   └──  all c: Component, w: Workstation | w in c.workstation implies one workstation.w
inv3 U:     │                                       └──  all c: Component, w: Workstation | w in c.workstation implies some workstation.w
inv3 B:     │                                           └──  all c: Component, w: Workstation | w in c.workstation implies lone workstation.w
inv3 C:     │                                               └──  all c: Component | one w: Workstation | c->w in workstation
inv2 O:     │                                                   └──  all w: Workstation | some wo: Worker | w->wo in workers  all w: Worker | one work: Workstation | work->w in workstation
inv2 C:     │                                                       └──  all w: Workstation | some wo: Worker | w->wo in workers  all w: Worker | one work: Workstation | work->w in workers
inv4 U:     │                                                           └──  all p: Product | no p.parts implies p in Material
inv4 S:     │                                                               └──  all p: Product | no p.parts implies p in Material all p: Product | some p.parts implies p in Components
inv4 C:     │                                                                   └──  all p: Product | no p.parts implies p in Material all p: Product | some p.parts implies p in Component
inv5 B:     │                                                                       └──  all ws: Workstation, w: Worker | w in ws.workers implies ((w in Human and w not in Robot) or (w in Robot and w not in Human))
inv5 O:     │                                                                           └──  all ws: Workstation, w1: Worker, w2: Worker | w1 in ws.workers and w2 in ws.workers and w1 in Human implies (w2 in Human)
inv6 U:     │                                                                               └──  all c: Component | c not in c.parts
inv6 C:     │                                                                                   └──  all c: Component | c not in c.^parts
inv6 C:     │                                                                                       └──  all c: Component | c not in c.^(parts)
inv7 C:     │                                                                                           └──  all c: Component, d: Dangerous | d in c.parts implies c in Dangerous
inv8 T:     │                                                                                               └──  all c: Component | c in Dangerous implies c.workstation
inv8 B:     │                                                                                                   └──  all c: Component | c in Dangerous implies Human not in c.workstation
inv8 B:     │                                                                                                       └──  all c: Component | c in Dangerous implies Human not in c.workstation.workers
inv8 U:     │                                                                                                           └──  all c: Component, w: Workstation, h: Human | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 S:     │                                                                                                               └──  all c: Component, w: Workstatio | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 B:     │                                                                                                                   └──  all c: Component, w: Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 C:     │                                                                                                                       └──  all c: Component, w: Workstation, h: Human | c in Dangerous and w in c.workstation implies h not in w.workers
inv1 S:     ├──  all w: Worker | Human | Robot
inv1 S:     │   └──  fact { all w: Worker | Human | Robot
inv1 S:     │       └──  fact { all w: Worker | Human | Robot
inv1 S:     │           └──  fact { all w: Worker != Human
inv1 S:     │               └──  a
inv1 S:     │                   └──  all w: Workstation | w.Workers != w.succ
inv1 B:     │                       └──  all w: Workstation | w.workers != w.succ
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws:Workstation | some w:Workers | w in ws.workers all w:Worker | one ws:Workstation | w in ws.workers
inv2 C:     │       └──  all ws:Workstation | some w:Worker | w in ws.workers all w:Worker | one ws:Workstation | w in ws.workers
inv3 C:     │           └──  all c:Component | one ws:Workstation | ws in c.workstation
inv4 C:     │               └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 C:     │                   └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 O:     │                       └──  all ws:Workstation,w:Worker | w in ws.workers and w in Human implies no ws.workers-Human
inv6 C:     │                           └──  all c:Component | c not in c.^parts
inv7 B:     │                               └──  all c:Component | c in Dangerous implies c.parts in Dangerous
inv7 S:     │                                   └──  None
inv7 S:     │                                       └──  None
inv7 C:     │                                           └──  all c:Component,p:Product | p in c.parts and p in Dangerous implies c in Dangerous
inv8 O:     │                                               └──  all p:Product, ws:Workstation | ws in p.workstation and p in Dangerous implies ws.workers in Robot
inv9 C:     │                                                   └──  all w,ws:Workstation | ws in begin and w!=ws implies w in ws.^succ all w:Workstation | w not in w.^succ all w:Workstation | w not in end implies one w.succ
inv10 B:    │                                                       └──  all c1,c2:Component, w1,w2:Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^parts implies w1 in w2.^succ
qTdZg6Jbw6XKZanxj M:     │                                                           └──  user added theme options. same as previous submission
inv1 E:     ├──   
inv1 C:     ├──  Worker = Human + Robot
inv2 S:     │   └──  all w: Workstation | some w.workers all w: Worker | w in Workstation.workers or Worstation.~(succ.workers)
inv2 T:     │       └──  all w: Workstation | some w.workers all w: Worker | w in Workstation.workers or Workstation.~(succ.workers)
inv2 U:     │           └──  all w: Workstation | some w.workers all w: Worker | w in Workstation.workers
inv2 C:     │               └──  all w: Workstation | some w.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 S:     │                   └──  all c.Component | one c.Workstation
inv3 T:     │                       └──  all c: Component | one c.Workstation
inv3 C:     │                           └──  all c: Component | one c.workstation
inv4 B:     │                               └──  all c: Component | some parts all m: Material | no parts
inv4 B:     │                                   └──  all c: Component | some parts all m: Material | no parts
inv4 C:     │                                       └──  all c: Component | some c.parts all m: Material | no m.parts
inv4 C:     │                                           └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 O:     │                                               └──  all w: Workstation| (w.workers in Robot) or (w.workers in Human)
inv5 O:     │                                                   └──  all w: Workstation| (w.workers in Robot) or (w.workers in Human)
inv1 C:     │                                                       └──  Worker = Human + Robot
inv2 C:     │                                                           └──  all w: Workstation | some w.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 C:     │                                                               └──  all c: Component | one c.workstation
inv4 C:     │                                                                   └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 O:     │                                                                       └──  all w: Workstation| (w.workers in Robot) or (w.workers in Human)
inv6 U:     │                                                                           └──  all c: Component | no (c.parts & c)
inv6 B:     │                                                                               └──  some c: Component | no (c.parts & c)
inv6 O:     │                                                                                   └──  all c: Component | no (c.parts.(~parts) & c)
inv6 U:     │                                                                                       └──  all c: Component | no (c.parts & c)
inv6 O:     │                                                                                           └──  all c: Component | no (c.parts.(~parts) & c)
inv6 O:     │                                                                                               └──  all p: Product | no (p.parts.(~parts) & p)
inv6 S:     │                                                                                                   └──  all c: Component | no (c.parts.(~parts) & p)
inv6 O:     │                                                                                                       └──  all c: Component | no (c.parts.(~parts) & c)
inv6 U:     │                                                                                                           └──  all c: Component | no (c.~parts & c)
inv6 C:     │                                                                                                               └──  all c: Component | c not in c.^parts
inv7 B:     │                                                                                                                   └──  all c: Component | (c.^parts in Dangerous) implies (c in Dangerous)
inv7 B:     │                                                                                                                       └──  all c: Component | (c.^parts in Dangerous) implies (c in Dangerous)
inv7 O:     │                                                                                                                           └──  all c: Component | some (c.^parts & Dangerous) implies (c in Dangerous)
inv8 S:     │                                                                                                                               └──  all c: Components | c in Dangerous implies no (c.workstation.workers & Human)
inv8 C:     │                                                                                                                                   └──  all c: Component | c in Dangerous implies no (c.workstation.workers & Human)
inv9 U:     │                                                                                                                                       └──  all w: Workstation | no (w.^succ & w)
inv9 B:     │                                                                                                                                           └──  all w: Workstation | no (w.^succ & w) and (begin != end)
inv9 B:     │                                                                                                                                               └──  all w1, w2: Workstation | (w1 = begin and w2 = end) implies w1 != w2 all w: Workstation | w not in w.^succ
inv9 B:     │                                                                                                                                                   └──  all w1, w2: Workstation | (begin in w1 and end in w2) implies w1 != w2 all w: Workstation | w not in w.^succ
inv9 B:     │                                                                                                                                                       └──  all w1, w2: Workstation | (begin in w1 and end in w2) implies w1 != w2
inv9 U:     │                                                                                                                                                           └──  lone ((begin.^succ :> (end + begin)) - begin)
inv9 E:     │                                                                                                                                                               └──   
inv8 C:     │                                                                                                                                                                   └──  all c: Component | c in Dangerous implies no (c.workstation.workers & Human)
inv9 U:     │                                                                                                                                                                       └──  lone ((begin.^succ :> (end + begin)) - begin)
inv9 T:     │                                                                                                                                                                           └──  all w: Workstation | w.begin != w.end
inv9 B:     │                                                                                                                                                                               └──  no (begin & end)
inv9 T:     │                                                                                                                                                                                   └──  none (begin & end)
inv9 U:     │                                                                                                                                                                                       └──  no (begin-end & end-begin)
4zFmJgJjfw4zNy8Wt M:     │                                                                                                                                                                                           └──  user added theme options. same as previous submission
inv10 B:    ├──  all c:Component | all p:c.parts | p in Material or c.workstation in p.workstation.succ
inv10 B:    │   └──  all c:Component | all p:c.parts | p in Material or c.workstation in p.workstation.^succ
inv1 C:     ├──  Worker = Human + Robot
inv1 C:     ├──  Worker in Human+Robot
inv2 C:     │   └──  all w : Workstation | some w.workers all w : Worker | one workers.w
inv3 C:     │       └──  all c : Component | one c.workstation
inv5 O:     │           └──  all w : Workstation | w.workers in Human iff w.workers not in Robot
inv4 C:     │               └──  all c : Component | some c.parts no Material.parts
inv5 O:     │                   └──  all w : Workstation | w.workers in Human iff w.workers not in Robot
inv6 O:     │                       └──  no ^parts & iden
inv7 C:     │                           └──  all c : Component | c in parts.Dangerous implies c in Dangerous
inv8 C:     │                               └──  no Dangerous.workstation.workers & Human
inv9 E:     │                                   └──   
inv9 U:     │                                       └──  begin.*succ = Workstation
inv9 B:     │                                           └──  begin.^succ = Workstation
inv9 U:     │                                               └──  begin.*succ = Workstation
inv9 U:     │                                                   └──  begin.*succ in Workstation
inv9 C:     │                                                       └──  begin.*succ = Workstation all w : Workstation | w not in w.^succ all w : Workstation-end | one w.succ
inv9 U:     │                                                           └──  begin.*succ = Workstation all w : Workstation-end | one w.succ
inv9 C:     │                                                               └──  begin.*succ = Workstation all w : Workstation | w not in w.^succ all w : Workstation-end | one w.succ
inv9 T:     │                                                                   └──  begin.*succ = Workstation no Workstation.^succ & iden all w : Workstation-end | one w.succ
inv9 T:     │                                                                       └──  begin.*succ = Workstation no Workstation.^succ & iden all w : Workstation-end | one w.succ
inv9 C:     │                                                                           └──  begin.*succ = Workstation no ^succ & iden all w : Workstation-end | one w.succ
inv10 O:    │                                                                               └──  all c : Component, p : c.parts & Component | c in p.workstation.^succ
inv10 B:    │                                                                                   └──  all c : Component, p : c.parts & Component | c.workstation in p.workstation.^succ
inv10 B:    │                                                                                       └──  all c : Component | c.workstation in c.parts.workstation.^succ
inv10 B:    │                                                                                           └──  all c : Component, p : c.parts| c.workstation in p.workstation.^succ
inv10 B:    │                                                                                               └──  all c : Component, p : c.parts & Component | c.workstation in p.workstation.^succ
inv10 B:    │                                                                                                   └──  all c : Component | c.workstation in (c.parts & Component).workstation.^succ
inv1 S:     ├──  all w: Workers | w in Human or w in Robot
inv1 C:     │   └──  all w: Worker | w in Human or w in Robot
inv1 C:     │       └──  all w: Worker | w in Human or w in Robot
inv2 S:     │           └──  all ws: Workstation | one w: woker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv2 S:     │               └──  all ws: Workstation | one w: worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv2 O:     │                   └──  all ws: Workstation | one w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv2 S:     │                       └──  all ws: Workstation | one w: Worker | ws.succ == none and w in ws.workers all w: Worker | one ws: Workstation | ws.succ == none and w in ws.workers
inv2 O:     │                           └──  all ws: Workstation | one w: Worker | ws.succ = none and w in ws.workers all w: Worker | one ws: Workstation | ws.succ = none and w in ws.workers
inv1 C:     │                               └──  all w: Worker | w in Human or w in Robot
inv2 O:     │                                   └──  all ws: Workstation | one w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 C:     │                                       └──  all com: Component | one com.workstation
inv4 T:     │                                           └──  all com: Component | some com.parts all mat: Material | none mat.parts
inv4 C:     │                                               └──  all com: Component | some com.parts all mat: Material | no mat.parts
inv5 C:     │                                                   └──  all h: Human | all r: Robot | all ws: Workstation | h in ws.workers implies r not in ws.workers
inv6 U:     │                                                       └──  all com : Component | com not in com.parts
inv6 U:     │                                                           └──  all com : Component | com not in com.parts all c1, c2: Component | c1 != c2 and c1 in c2.parts implies c2 not in c2.parts
inv7 C:     │                                                               └──  all com: Component | all d: Dangerous | d in com.parts implies com in Dangerous
inv7 C:     │                                                                   └──  all com: Component | all d: Dangerous | d in com.parts implies com in Dangerous
inv8 C:     │                                                                       └──  all com: Component | all ws: Workstation | all h: Human | ws in com.workstation and com in Dangerous implies h not in ws.workers
inv10 S:    │                                                                           └──  all a1, a2: Component | all ws: WorkStation | a2 in a1.parts implies a2.workstation in begin and a1.workstation in end
inv10 B:    │                                                                               └──  all a1, a2: Component | a2 in a1.parts implies a2.workstation in begin and a1.workstation in end
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 U:     │   └──  all w : Workstation | all t : Worker | some w.workers and one workers.t
inv2 C:     │       └──  all w : Workstation | some w.workers and all t : Worker | one workers.t
inv2 C:     │           └──  (all w : Workstation | some w.workers) and (all t : Worker | one workers.t)
inv2 C:     │               └──  (all w : Workstation | some t : Worker | w->t in workers) and (all t : Worker | one w : Workstation | w->t in workers)
tvnbKvWpPAZLGzsez M:     │                   ├──  user added theme options. same as previous submission
inv3 C:     │                   └──  all c : Component | one c.workstation
inv3 C:     │                       └──  all c : Component | one w : Workstation | c->w in workstation
inv4 C:     │                           └──  (all c : Component | some c.parts) and (all m : Material | no m.parts)
inv5 T:     │                               └──  all w : Workstation | w.workers in (Human or Robot)
inv5 S:     │                                   └──  all w : Workstation | w.workers all in (Human or Robot)
inv5 C:     │                                       └──  all h : Human | all r : Robot | no (workers.h & workers.r)
inv5 S:     │                                           └──  all h : Human | all r : Robot | all w : Workstation | h in w.worker implies r not in w.workers
inv5 C:     │                                               └──  all h : Human | all r : Robot | all w : Workstation | h in w.workers implies r not in w.workers
inv6 U:     │                                                   └──  all c : Component | c not in (c.parts)
inv6 C:     │                                                       └──  all c : Component | c not in (c.^parts)
inv7 S:     │                                                           └──  all c : Component | d : Dangerous | d in c.parts implies c in Dangerous
inv7 C:     │                                                               └──  all c : Component | all d : Dangerous | d in c.parts implies c in Dangerous
inv7 C:     │                                                                   └──  all c : Component | all p : Product | p in Dangerous and p in c.parts implies c in Dangerous
inv7 C:     │                                                                       └──  all c : Component | all d : Dangerous | d in c.parts implies c in Dangerous
inv8 O:     │                                                                           └──  all c : Component | c in Dangerous implies c.workstation.workers in Robot
inv9 S:     │                                                                               └──  all b : Begin | all e : End | b.succ in Workstation and no e.succ
inv9 U:     │                                                                                   └──  all b : begin | all e : end | b.succ in Workstation and no e.succ
inv9 U:     │                                                                                       └──  one b : begin | one e : end | b.^succ in (Workstation-b) and no e.^succ
inv9 U:     │                                                                                           └──  one b : begin | one e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U:     │                                                                                               └──  all b : begin | all e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U:     │                                                                                                   └──  one b : begin | one e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U:     │                                                                                                       └──  one b : begin | one e : end | ((Workstation-b) in b.^succ) and (no e.^succ)
inv8 C:     │                                                                                                           └──  all d : Dangerous | no (d.workstation.workers & Human)
inv9 S:     │                                                                                                               └──  one b : begin | one e : end | all w : Workstation | w not in w.^succ | (b.^succ in (Workstation-b)) and (no e.^succ) and
inv9 S:     │                                                                                                                   └──  one b : begin | one e : end | all w : Workstation | w not in w.^succ and (b.^succ in (Workstation-b)) and (no e.^succ) and
inv9 U:     │                                                                                                                       └──  one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U:     │                                                                                                                           └──  one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.^succ)
inv9 U:     │                                                                                                                               └──  one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.succ)
inv9 U:     │                                                                                                                                   └──  one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.succ)
inv10 B:    │                                                                                                                                       └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^parts implies w1 in w2.^succ
inv9 C:     │                                                                                                                                           └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv9 C:     │                                                                                                                                               └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv9 B:     │                                                                                                                                                   └──  one b : begin | one e : end | all w : Workstation | lone w.^succ and (b.^succ in Workstation) and (no e.succ)
inv9 C:     │                                                                                                                                                       └──  one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in Workstation) and (no e.succ) all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv9 U:     │                                                                                                                                                           └──  one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in Workstation) and (no e.succ)
inv9 C:     │                                                                                                                                                               └──  one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in (Workstation-b)) and (no e.succ) all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv9 U:     │                                                                                                                                                                   └──  one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in (Workstation-b)) and (no e.succ)
inv9 C:     │                                                                                                                                                                       └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv10 B:    │                                                                                                                                                                           └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w1 in c2.workstation.^succ
inv10 B:    │                                                                                                                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w1 in c2.workstation.^succ
inv10 B:    │                                                                                                                                                                                   └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w1 in c2.workstation
inv10 B:    │                                                                                                                                                                                       └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w1 in c1.workstation.^succ
inv10 B:    │                                                                                                                                                                                           └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w2 in c2.workstation.^succ
inv10 B:    │                                                                                                                                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w1 in c2.workstation.^succ
inv10 B:    │                                                                                                                                                                                                   └──  all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts implies w2 in c1.workstation.^succ
inv1 E:     ├──   
inv1 S:     │   └──  all w : Worker | w==Robot or w==Human
inv1 C:     │       └──  all w : Worker | w in Human or w in Robot
inv2 T:     │           └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one w.^Workstation)
inv2 T:     │               └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one w.Workstation)
inv2 T:     │                   └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one Workstation.^w)
inv2 T:     │                       └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one Workstation.~w)
inv2 T:     │                           └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one Workstation.w)
inv2 U:     │                               └──  all w : Worker ,  ws : Workstation | (some ws.workers) and (one w.(~workers))
inv2 U:     │                                   └──  all w : Worker ,  ws, ws2 : Workstation | (some ws.workers) and (one w.(~workers))
inv2 S:     │                                       └──  all w : Worker ,  ws, ws2 : Workstation | (some ws.workers) and (w in w2 implies w not in w)
inv2 U:     │                                           └──  all w : Worker ,  ws, ws2 : Workstation | (some ws.workers) and (w in ws2 implies w not in ws)
inv2 C:     │                                               └──  workers in Workstation one -> some Worker all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv3 C:     │                                                   └──  all c : Component | one c.workstation
inv4 U:     │                                                       └──  all c : Component, m : Material | (some c.parts) and (no m.parts)
inv5 E:     │                                                           └──   
inv5 O:     │                                                               └──  all r : Robot, h : Human, w : Workstation | r in w iff h not in w
inv5 O:     │                                                                   └──  all r : Robot, h : Human, w : Workstation | (r in w) iff (h not in w)
inv5 U:     │                                                                       └──  all r : Robot, h : Human, w : Workstation | ((r in w) implies (h not in w)) and ((h in w) implies (r not in w))
inv5 S:     │                                                                           └──  all w1, w2 : Worker, ws : Workstation | w1,w2 in ws implies (w1,w2 in Robot or w1,w2 in Human)
inv5 S:     │                                                                               └──  all w1, w2 : Worker, ws : Workstation | (w1,w2 in ws) implies ((w1,w2 in Robot) or (w1,w2 in Human))
inv5 S:     │                                                                                   └──  all w1, w2 : Worker, ws : Workstation | (w1,w2 in ws) implies ((w1,w2 = Robot) or (w1,w2 = Human))
inv1 T:     ├──  all w:Worker | w in Human or Robot
inv1 C:     │   └──  all w:Worker | w in Human + Robot
inv2 U:     │       └──  all ws:Workstation | some w:Worker | ws->w in workers
inv2 B:     │           └──  all ws:Workstation | all w:Worker | ws->w in workers and (one ws2:Workstation|ws2->w in workers)
inv1 C:     ├──  all w : Worker | w in Human + Robot
inv2 T:     │   └──  Workstation one -> some Worker
inv2 S:     │       └──  all Workstation one -> some Worker
inv2 U:     │           └──  all w : Workstation | some wo : Worker | w -> wo in workers
inv2 S:     │               └──  w : Workstation, wo : Worker | w one -> some wo
inv2 T:     │                   └──  all w : Workstation, wo : Worker | w one -> some wo
inv2 S:     │                       └──  all w : Workstation, wo : Worker | w one -> some wo in workers
inv2 S:     │                           └──  all w : Workstation, some wo : Worker | w -> wo in workers all w : Worker | w in workers
inv2 S:     │                               └──  all w : Workstation, some wo : Worker | w -> wo in workers all wo : Worker | one w : Workstation| w -> wo in workers
inv2 S:     │                                   └──  all w : Workstation, some wo : Worker | w -> wo in workers and all wor : Worker | one wr : Workstation| wr -> wor in workers
inv2 B:     │                                       └──  all w : Workstation | one wo : Worker | w -> wo in workers
inv2 U:     │                                           └──  all w : Workstation | some wo : Worker | w -> wo in workers
inv2 T:     │                                               └──  all w : Workstation | some wo : Worker | w -> wo in workers and all ww : Worker | ww in workers
inv2 S:     │                                                   └──  all w : Workstation | some wo : Worker | w -> wo in workers and all wwo : Worker | one ww : Workstations | ww -> wwo in workers
inv2 C:     │                                                       └──  all w : Workstation | some wo : Worker | w -> wo in workers and all wwo : Worker | one ww : Workstation | ww -> wwo in workers
inv3 U:     │                                                           └──  all c : Component | some w : Workstation | c -> w in workstation
inv3 C:     │                                                               └──  all c : Component | one w : Workstation | c -> w in workstation
inv4 S:     │                                                                   └──  all p1, p2 : Product | p1 -> p2 in parts => p1 in Components
inv4 U:     │                                                                       └──  all p1, p2 : Product | p1 -> p2 in parts => p1 in Component
inv4 T:     │                                                                           └──  all c : Component, m : Material | some c.parts and not m.parts
inv4 U:     │                                                                               └──  all p1, p2 : Product | p1 -> p2 in parts => p1 in Component
inv5 O:     │                                                                                   └──  all h : Human, r : Robot, w : Workstation | not h -> w in workers and r -> w in workers
inv5 U:     │                                                                                       └──  all h : Human, r : Robot, w : Workstation | not h -> w in workers and not r -> w in workers
inv5 U:     │                                                                                           └──  all h : Human, r : Robot, w : Workstation | not (h -> w in workers and r -> w in workers)
inv5 C:     │                                                                                               └──  all h : Human, r : Robot, w : Workstation | not (w -> h in workers and w -> r in workers)
inv6 T:     │                                                                                                   └──  all c : Component | not c.^parts
inv6 T:     │                                                                                                       └──  all c : Component | c not c.^parts
inv6 C:     │                                                                                                           └──  all c : Component | c not in c.^parts
inv7 B:     │                                                                                                               └──  all c : Component | some cc : c.^parts | cc in Dangerous => c in Dangerous
inv7 O:     │                                                                                                                   └──  all c : Component | all cc : c.^parts | cc in Dangerous => c in Dangerous
inv8 O:     │                                                                                                                       └──  all d : Dangerous, h : Human, w : Workstation | d -> w in workstation and not w -> h in workers
inv8 C:     │                                                                                                                           └──  all d : Dangerous, h : Human, w : Workstation | d -> w in workstation => not w -> h in workers
inv9 U:     │                                                                                                                               └──  all w : Workstation | not w in w.^succ
inv9 O:     │                                                                                                                                   └──  all w, w1 : Workstation | not w in w.^succ and w -> w1 in succ
inv9 O:     │                                                                                                                                       └──  all w, w1 : Workstation | not w in w.^succ and w -> w1 in succ and w != w1
inv9 B:     │                                                                                                                                           └──  all w : Workstation | not w in w.^succ and begin != end
inv9 B:     │                                                                                                                                               └──  all w : Workstation | not w in w.^succ and end in begin.^succ
f7HC3kMEZjfpYAbri M:     │                                                                                                                                                   └──  user added theme options. same as previous submission
inv1 S:     ├──  all w : Workers - Human - Robot | w not in Workers
inv1 C:     │   └──  all w : Worker - Human - Robot | w not in Worker
inv2 S:     │       └──  all w : Wokerstation | some wk : Workers | wk in w.workers all wk : Wokers | one w : Workstation | wk in w.workers
inv2 S:     │           └──  all w : Workestation | some wk : Worker | wk in w.workers all wk : Woker | one w : Workstation | wk in w.workers
inv2 S:     │               └──  all w : Workstation | some wk : Worker | wk in w.workers all wk : Woker | one w : Workstation | wk in w.workers
inv2 C:     │                   └──  all w : Workstation | some wk : Worker | wk in w.workers all wk : Worker | one w : Workstation | wk in w.workers
inv3 S:     │                       └──  all c : Compontent | one w : Workstation | w in c.workstation
inv3 C:     │                           └──  all c : Component | one w : Workstation | w in c.workstation
inv4 S:     │                               └──  all c : Component, p : Product | p in c.parts all m : Materials, p : Product | p not in m.parts
inv4 O:     │                                   └──  all c : Component, p : Product | p in c.parts all m : Material, p : Product | p not in m.parts
inv4 O:     │                                       └──  all c : Component, p : Product | p in c.parts all d : Dangerous, p : Product | p in d.parts all m : Material, p : Product | p not in m.parts
inv4 C:     │                                           └──  all c : Component | some p : Product | p in c.parts all m : Material, p : Product | p not in m.parts
inv5 S:     │                                               └──  all w : Workstation, h: Humans, r: Robots | w.workers in h or w.workers in r
inv5 O:     │                                                   └──  all w : Workstation, h: Human, r: Robot | w.workers in h or w.workers in r
inv6 S:     │                                                       └──  all c1, c2 : Component | c1 == c2 implies c2 not in c1
inv6 O:     │                                                           └──  all c1, c2 : Component | c1 = c2 implies c2 not in c1
inv6 U:     │                                                               └──  all c1, c2 : Component | c1 = c2 implies c2 not in c1.parts
inv5 O:     │                                                                   └──  all w : Workstation | w.workers in Human or w.workers in Robot
inv6 U:     │                                                                       └──  all c : Component | c not in c.parts
inv6 B:     │                                                                           └──  all c : Component | c.parts not in Component
inv6 C:     │                                                                               └──  all c : Component | c not in c.^parts
inv7 B:     │                                                                                   └──  all c : Component | c.^parts in Dangerous implies c in Dangerous
inv7 O:     │                                                                                       └──  all c : Component, p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv8 B:     │                                                                                           └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 B:     │                                                                                               └──  all w : Workstation | one w2 : Workstation | w.^succ in w2
inv9 B:     │                                                                                                   └──  all w : Workstation | one w2 : Workstation | w2!=w and w.^succ in w2
inv9 B:     │                                                                                                       └──  all w : Workstation | lone w2 : Workstation | w2!=w and w.^succ in w2
inv9 U:     │                                                                                                           └──  all w1, w2 : Workstation | w1 != w2 and w1 in begin implies w2 in w1.^succ
inv9 B:     │                                                                                                               └──  all w : Workstation - end | one w2 : Workstation | w2 in w.^succ all w : Workstation - begin | one w2 : Workstation | w in w2.^succ
inv9 B:     │                                                                                                                   └──  all w : Workstation - end | one w2 : Workstation | w2!=w and w2 in w.^succ all w : Workstation - begin | one w2 : Workstation | w2!=w and w in w2.^succ
inv1 C:     ├──  Worker in (Human + Robot)
inv2 C:     │   └──  all w : Workstation | some w . workers all w : Worker | one workers . w
inv3 C:     │       └──  all c : Component | one c . workstation
inv4 C:     │           └──  all c : Component | some c . parts all m : Material | no m . parts
inv5 O:     │               └──  all w : Workstation | (w . workers in Human) or (w . workers in Robot)
inv6 O:     │                   └──  no (parts . ~parts & iden)
inv6 B:     │                       └──  no (parts & iden)
inv6 B:     │                           └──  no c : Component | c . parts in c
inv6 U:     │                               └──  no c : Component | c in (c . parts)
inv6 C:     │                                   └──  no c : Component | c in (c . ^parts)
inv7 C:     │                                       └──  all c : Component, d : Dangerous | d in (c . parts) => c in Dangerous
inv8 O:     │                                           └──  all c : Component | (c . workstation . workers) in Robot
inv8 O:     │                                               └──  all c : Component | (c in Dangerous) => (c . workstation . workers) in Robot
inv9 B:     │                                                   └──  succ in Workstation one -> one Workstation (begin . *succ) in Workstation
inv9 O:     │                                                       └──  succ in Workstation one -> one Workstation (begin . *succ) in Workstation all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                           └──  succ in Workstation one -> one Workstation (begin . *succ) in Workstation all w : Workstation | w not in (w . ^succ) end not in begin
W4jbwL5d8wiFhcQhB N:     │                                                               └──  user added extra characters to pred name
inv9 U:     │                                                                   └──  (begin . *succ) in Workstation all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                       └──  (begin . *succ) in Workstation
inv9 U:     │                                                                           └──  (begin . *succ) in Workstation all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                               └──  Workstation in (begin . *succ) all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                                   └──  (begin . *succ) in Workstation no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                                       └──  Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv4 C:     │                                                                                           └──  all c : Component | some c . parts Material . parts = none
inv4 C:     │                                                                                               └──  all c : Component | some c . parts Material . parts = none
inv4 O:     │                                                                                                   └──  Component in parts . Component Material . parts = none
inv4 C:     │                                                                                                       └──  parts . Product = Component
inv9 U:     │                                                                                                           └──  Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                               └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv5 B:     │                                                                                                                   └──  workers . ~workers in iden
inv1 C:     │                                                                                                                       └──  Worker in (Human + Robot)
inv2 C:     │                                                                                                                           └──  all w : Workstation | some w . workers all w : Worker | one workers . w
inv3 C:     │                                                                                                                               └──  all c : Component | one c . workstation
inv4 C:     │                                                                                                                                   └──  parts . Product = Component
inv5 O:     │                                                                                                                                       └──  all w : Workstation | (w . workers in Human) or (w . workers in Robot)
inv6 C:     │                                                                                                                                           └──  no c : Component | c in (c . ^parts)
inv7 C:     │                                                                                                                                               └──  all c : Component, d : Dangerous | d in (c . parts) => c in Dangerous
inv8 O:     │                                                                                                                                                   └──  all c : Component | (c in Dangerous) => (c . workstation . workers) in Robot
inv9 O:     │                                                                                                                                                       └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                           └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no end & begin no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                               └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                                   └──  succ in Workstation one -> one Workstation all w : Workstation | w not in (w . ^succ)
inv7 O:     │                                                                                                                                                                       └──  all c : Component, d : Dangerous | d in (c . ^parts) => c in Dangerous
inv9 O:     │                                                                                                                                                                           └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                                               └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) no (succ . begin) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                                                   └──  succ in Workstation one -> one Workstation no (end . succ) no (succ . begin) all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                                                                                                                                       └──  Workstation in (begin . *succ) no (end . succ) no (succ . begin) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                                                           └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) no (succ . begin) all w : Workstation | w not in (w . ^succ)
inv9 O:     │                                                                                                                                                                                               └──  succ in Workstation one -> one Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 C:     │                                                                                                                                                                                                   └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                                                                                                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ)  all w : Workstation | w not in (w . ^succ)
inv9 C:     │                                                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 U:     │                                                                                                                                                                                                               └──  succ in Workstation lone -> lone Workstation  no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 C:     │                                                                                                                                                                                                                   └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ) all w : Workstation | w not in (w . ^succ)
inv9 C:     │                                                                                                                                                                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv9 C:     │                                                                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv6 U:     │                                                                                                                                                                                                                               └──  no c : Component | c in (c . parts)
inv7 C:     │                                                                                                                                                                                                                                   └──  all c : Component, d : Dangerous | d in (c . parts) => c in Dangerous
inv10 B:    │                                                                                                                                                                                                                                       └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv9 C:     │                                                                                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv10 B:    │                                                                                                                                                                                                                                               └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv7 O:     │                                                                                                                                                                                                                                                   └──  all c : Component | some (Dangerous & (c . ^parts)) => c in Dangerous
inv7 C:     │                                                                                                                                                                                                                                                       └──  all c : Component | some (Dangerous & (c . parts)) => c in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                           └──  all c : Component | some (Dangerous & (c . ^parts)) => c in Dangerous
inv7 O:     │                                                                                                                                                                                                                                                               └──  ^parts.Dangerous in Dangerous
inv10 B:    │                                                                                                                                                                                                                                                                   └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv10 B:    │                                                                                                                                                                                                                                                                       └──  all c : Component, p : Product | (p in c . parts) => (c . workstation . ^~succ) in (p . workstation)
inv10 B:    │                                                                                                                                                                                                                                                                           └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . *succ)
inv10 B:    │                                                                                                                                                                                                                                                                               └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv9 C:     │                                                                                                                                                                                                                                                                                   └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv10 B:    │                                                                                                                                                                                                                                                                                       └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv10 B:    │                                                                                                                                                                                                                                                                                           └──  all c, p : Component | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv1 C:     ├──  all w : Worker - Human - Robot | w not in Worker
inv2 S:     │   └──  all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | one ws : worksation | w in ws.workers
inv2 S:     │       └──  all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | one ws : Worksation | w in ws.workers
inv2 C:     │           └──  all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | one ws : Workstation | w in ws.workers
inv3 T:     │               └──  all c : Component | one ws : workstation | ws in c.workstation
inv3 T:     │                   └──  all c : Component | one ws : workstation | ws in c.workstation
inv3 T:     │                       └──  all c : Component | one ws : workstation | ws in c.workstation
inv3 T:     │                           └──  all c : Component, ws : workstation | ws in c.workstation
inv3 T:     │                               └──  all c : Component | one  ws : workstation | ws in c.workstation
inv3 C:     │                                   └──  all c : Component | one  ws : Workstation | ws in c.workstation
inv4 B:     │                                       └──  all c : Component, p : Product | c in p.parts all m : Material, p : Product | m in p.parts
inv4 B:     │                                           └──  all c : Component, p : Product | c in p.parts all m : Material, p : Product | m not in p.parts
inv4 B:     │                                               └──  all c : Component, p : Product | c in p.parts all m : Material, p : Product | m not in p.parts
inv4 B:     │                                                   └──  all c : Component | some p : Product | c in p.parts all m : Material | some p : Product | m not in p.parts
inv4 B:     │                                                       └──  all c : Component | some p : Product | c in p.parts all m : Material | no p : Product | m not in p.parts
inv4 B:     │                                                           └──  all c : Component | some p : Product | c in p.parts all m : Material | no p : Product | m in p.parts
inv4 B:     │                                                               └──  all c : Component | some p : Product | c in p.parts all m : Material | some p : Product | m in p.parts
inv4 B:     │                                                                   └──  all c : Component | some p : Product | c in p.parts all m : Material, p : Product | m not in p.parts
inv4 C:     │                                                                       └──  all c : Component | some p : Product | p in c.parts all m : Material, p : Product | p not in m.parts
inv5 C:     │                                                                           └──  all h : Human, ws : Workstation, r : Robot | h in ws.workers implies r not in ws.workers
inv6 U:     │                                                                               └──  all c : Component | c not in c.parts
inv6 C:     │                                                                                   └──  all c : Component | c not in c.^parts
inv7 O:     │                                                                                       └──  all c : Component, p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv7 U:     │                                                                                           └──  all c1, c2 : Component| c2 in c1.^parts and c2 in Dangerous implies c2 in Dangerous
inv7 U:     │                                                                                               └──  all c1, c2 : Component| c1 != c2 and c2 in c1.^parts and c2 in Dangerous implies c2 in Dangerous
inv7 B:     │                                                                                                   └──  all c1, c2 : Component| c1 != c2 and c2 in c1.^parts and c1 in Dangerous implies c2 in Dangerous
inv7 B:     │                                                                                                       └──  all c : Component, p : Product | p in c.^parts and c in Dangerous implies p in Dangerous
inv7 O:     │                                                                                                           └──  all c : Component, p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                               └──  all c1, c2 : Component | c2 in c1.^parts and c2 in Dangerous implies c1 in Dangerous
inv7 O:     │                                                                                                                   └──  all c : Component, p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv8 O:     │                                                                                                                       └──  all c : Component, h : Human | h not in c.workstation.workers
inv8 C:     │                                                                                                                           └──  all c : Component, h : Human | c in Dangerous implies h not in c.workstation.workers
4g5T68tig5NvuqgwF M:     │                                                                                                                               └──  user added theme options. same as previous submission
inv4 S:     ├──  all c : Components | c in Components.~parts no Material & Products.~parts
inv4 S:     │   └──  all c : Component | c in Component.~parts no Material & Products.~parts
inv4 O:     │       └──  all c : Component | c in Component.~parts no Material & Product.~parts
inv4 T:     │           └──  all c : Component | c in Component.~parts  all m : Material | no m in Component.~parts
inv4 B:     │               └──  all c : Component | c in Component.~parts  all m : Material | m not in Component.~parts
inv4 B:     │                   └──  all c : Component | c in Component.~parts  all m : Material | m not in Component.~parts
inv4 O:     │                       └──  all c : Component | c in Component.~parts  all m : Material | m not in Product.~parts
inv4 C:     │                           └──  all c : Component | c in Product.~parts  all m : Material | m not in Product.~parts
inv4 C:     │                               └──  all c : Component | c in Product.~parts no Material & Product.~parts
inv5 S:     │                                   └──  no (worksers - Robot->Robot - Human->Human)
inv5 O:     │                                       └──  no (workers - Robot->Robot - Human->Human)
inv5 T:     │                                           └──  all w : Workstation | some Robot in w.workers implies no Human in w.workers and some Human in w.workers implies no Robot in w.workers
inv5 U:     │                                               └──  all w : Workstation | some Robot & w.workers implies no Human & w.workers and some Human & w.workers implies no Robot & w.workers
inv5 C:     │                                                   └──  all w : Workstation | no Robot->Human & w.workers->w.workers
inv6 B:     │                                                       └──  no parts & iden
inv6 O:     │                                                           └──  no *parts
inv6 T:     │                                                               └──  no ^parts in iden
inv6 B:     │                                                                   └──  ^parts not in iden
inv6 O:     │                                                                       └──  no ^parts & iden
inv7 T:     │                                                                           └──  all c : Component | some c.^parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                               └──  all c : Component | c.^parts in Dangerous implies c in Dangerous
inv7 O:     │                                                                                   └──  all c : Component | some c.^parts & Dangerous implies c in Dangerous
inv8 C:     │                                                                                       └──  no Human & (Component & Dangerous).workstation.workers
inv9 U:     │                                                                                           └──  all w : Workstation | w not in w.^succ
inv9 S:     │                                                                                               └──  one Workstation & Begin one Workstation & End all w : Workstation | w not in w.^succ
inv9 U:     │                                                                                                   └──  one Workstation & begin one Workstation & end all w : Workstation | w not in w.^succ
inv9 B:     │                                                                                                       └──  one Workstation & begin one Workstation & end no Workstation & begin & end all w : Workstation | w not in w.^succ
inv9 U:     │                                                                                                           └──  one Workstation & begin one Workstation & end  all w : Workstation | w not in w.^succ
inv9 T:     │                                                                                                               └──  one Workstation & begin one Workstation & end all w : Workstation | w in ^succ
inv9 B:     │                                                                                                                   └──  one Workstation & begin one Workstation & end all w : Workstation | w in ^succ.Workstation
inv9 B:     │                                                                                                                       └──  one Workstation & begin one Workstation & end all w : Workstation | one w & ^succ.Workstation
inv9 B:     │                                                                                                                           └──  one Workstation & begin one Workstation & end all w : Workstation | one w & (^succ.Workstation + Workstation.^succ)
inv9 T:     │                                                                                                                               └──  one Workstation & begin one Workstation & end no begin in Workstation.^succ no end in ^succ.Workstation all w : Workstation | one w & (^succ.Workstation + Workstation.^succ)
inv9 B:     │                                                                                                                                   └──  one Workstation & begin one Workstation & end begin not in Workstation.^succ end not in ^succ.Workstation all w : Workstation | one w & (^succ.Workstation + Workstation.^succ)
inv10 T:    │                                                                                                                                       └──  all c : Component | ^(c.parts) in workstation.((^succ).Workstation - ^(c.workstation.succ))
inv10 T:    │                                                                                                                                           └──  all c : Component | (c.parts) in workstation.((^succ).Workstation - ^(c.workstation.succ))
inv10 B:    ├──  all c : Component | all p : c.parts & Component | some (c.workstation) => some(p.workstation) and all w: p.workstation | c.workstation in w.^succ
inv10 B:    │   └──  all c : Component | all p : c.parts & Component | all w: p.workstation | c.workstation in w.^succ
inv10 B:    │       └──  all c : Component | all p : c.parts & Component | c.workstation in p.workstation.^succ
inv10 B:    │           └──  all c : Component | all p : c.parts | c.workstation in p.workstation.^succ
cJ4rjCcfb4p9DCejh M:     ├──  user added theme options. same as previous submission
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 U:     │       └──  all ws : Workstation | some w : Worker | ws->w in workers all w : Worker | some ws : Workstation | ws->w in workers
inv2 C:     │           └──  all ws : Workstation | some w : Worker | ws->w in workers all w : Worker | some ws1 : Workstation | ws1->w in workers and all ws2 : Workstation | ws2->w in workers implies ws1 = ws2
inv3 U:     │               └──  all c : Component | some w : Workstation | c->w in workstation
inv3 C:     │                   └──  all c : Component | some w1 : Workstation | c->w1 in workstation and all w2 : Workstation | c->w2 in workstation implies w1 = w2
inv4 C:     │                       └──  all c : Component | some p : Product | c->p in parts all m : Material, p : Product | m->p not in parts
inv5 C:     │                           └──  all h : Human, r : Robot, w : Workstation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv6 U:     │                               └──  all c : Component | c->c not in parts
inv5 C:     │                                   └──  all h : Human, r : Robot, w : Workstation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv6 U:     │                                       └──  all c : Component | c->c not in parts
inv6 B:     │                                           └──  all c1, c2 : Component | c1->c2 not in parts
inv6 B:     │                                               └──  all c1, c2 : Component | c1->c2 not in parts
inv6 U:     │                                                   └──  all c1, c2 : Component | c1->c2 in parts implies c2->c1 not in parts
inv6 B:     │                                                       └──  all c1, c2 : Component | c1->c2 not in parts and c2->c1 not in parts
inv6 B:     │                                                           └──  all c : Component | c->c in parts
inv6 U:     │                                                               └──  all c : Component | c->c not in parts
inv6 B:     │                                                                   └──  all c1 : Component, c2 : Component | c1->c2 in parts
inv6 B:     │                                                                       └──  all c1 : Component, c2 : Component | c1->c2 not in parts
inv6 O:     │                                                                           └──  all c : Component, p : Product | p->c not in parts
inv6 O:     │                                                                               └──  all c : Component, p : Product | c->p not in parts
inv6 O:     │                                                                                   └──  all p : Product, c : Component | c->p not in parts
inv6 O:     │                                                                                       └──  all p, c : univ | p in Product and c in Component implies  c->p not in parts
inv5 U:     ├──  all w : Workstation, wk : Worker | wk in w.workers and wk in Robot implies w.workers in Robot and wk in w.workers and wk in Human implies w.workers in Human
inv5 O:     │   └──  all w : Workstation, wk : Worker | (wk in w.workers and wk in Robot implies w.workers in Robot) and (wk in w.workers and wk in Human implies w.workers in Human)
inv5 O:     │       └──  all w : Workstation, r : Robot, h : Human | (h in w.workers implies w.workers in Human) and (r in w.workers implies w.workers in Robot)
inv1 C:     ├──  no Worker-(Human+Robot)
inv2 U:     │   └──  all ws: Workstation | some w: Worker | w in ws.workers
inv2 C:     │       └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv4 C:     │           └──  all c: Component | some c.parts no Material.parts
inv5 O:     │               └──  all ws: Workstation | some (Human & ws.workers) <=> no (Robot & ws.workers)
inv6 C:     │                   └──  all c: Component | c not in c.^parts
inv7 O:     │                       └──  all c: Component | some (Dangerous & c.^parts) => c in Dangerous
inv8 C:     │                           └──  all c: Component | c in Dangerous => no (c.workstation.workers & Human)
inv9 S:     │                               └──  all w: Workstation | w not in w.^succ all all w, wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in end implies some w.succ
inv9 U:     │                                   └──  all w: Workstation | w not in w.^succ all w, wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in end implies some w.succ
inv9 C:     │                                       └──  all w: Workstation | w not in w.^succ all w, wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                           └──  all c1,c2 : Component, w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) => w1 in w2.^(succ)
inv1 T:     ├──  all h: Human, r: Robot| no h not in Worker and no r not in Worker
inv1 T:     │   └──  all h: Human, r: Robot| (no h not in Worker) and (no r not in Worker)
inv1 O:     │       └──  all w: Worker| w in Human and w in Robot
inv1 C:     │           └──  all w: Worker| w in Human or w in Robot
inv2 C:     │               └──  all w: Workstation | some w.workers all w: Worker | one ww: Workstation | w in ww.workers
inv3 C:     │                   └──  all c: Component | one c.workstation
inv4 S:     │                       └──  all c: Components | none c.parts all m: Material | none m.parts
inv4 T:     │                           └──  all c: Component | none c.parts all m: Material | none m.parts
inv4 B:     │                               └──  all c: Component | no c.parts all m: Material | no m.parts
inv4 C:     │                                   └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 T:     │                                       └──  all w: Workstation |  Robot implies Human not in w.workers
inv5 B:     │                                           └──  all w: Workstation | (Robot in w.workers) implies Human not in w.workers
inv5 B:     │                                               └──  all w: Workstation | (Robot in w.workers) implies (Human not in w.workers)
inv5 B:     │                                                   └──  all w: Workstation | (Robot in w.workers) implies (Human not in w.workers) or (Human in w.workers) implies (Robot not in w.workers)
inv5 U:     │                                                       └──  all w: Workstation | (Robot in w.workers) implies (Human not in w.workers) and (Human in w.workers) implies (Robot not in w.workers)
inv5 B:     │                                                           └──  all w: Workstation | (Robot in w.workers) implies (Human not in w.workers) all w: Workstation | (Human in w.workers) implies (Robot not in w.workers)
inv5 S:     │                                                               └──  all w: Workstation | no (Robot in w.workers) implies (Human in w.workers) all w: Workstation | no (Human in w.workers) implies (Robot in w.workers)  all w: Workstation |
inv5 T:     │                                                                   └──  all w: Workstation | no (Robot in w.workers) implies (Human in w.workers) all w: Workstation | no (Human in w.workers) implies (Robot in w.workers)
inv5 B:     │                                                                       └──  all w: Workstation |  (Robot not in w.workers) implies (Human in w.workers) all w: Workstation |  (Human not in w.workers) implies (Robot in w.workers)
inv6 O:     │                                                                           └──  all c: Component, p: Product | no c.parts & p.parts
inv6 O:     │                                                                               └──  all c: Component, p: Product | no c.parts & p.parts
inv6 O:     │                                                                                   └──  all c: Component, p: Product | no (c.parts & p.parts)
inv5 T:     │                                                                                       └──  all w: Workstation | some (Robot not in w.workers) implies (Human in w.workers)
inv5 T:     │                                                                                           └──  all w: Workstation | some (Robot in w.workers) implies (Human in w.workers)
inv5 T:     │                                                                                               └──  all w: Workstation | some (Robot & w.workers) implies (Human & w.workers)
inv5 C:     │                                                                                                   └──  all w: Workstation | some (Robot & w.workers) implies no (Human & w.workers)
inv5 C:     │                                                                                                       └──  all w: Workstation | some (Robot & w.workers) implies no (Human & w.workers)
inv6 O:     │                                                                                                           └──  all c: Component, p: Product | no (c.parts & p.parts)
inv6 O:     │                                                                                                               └──  all c: Component, p: Product | (c.parts not in p.parts)
inv6 O:     │                                                                                                                   └──  all c: Component, p: Product | (p.parts not in c.parts)
inv7 T:     │                                                                                                                       └──  all d: Dangerous, c: Component | c in d.parts implies d
inv7 B:     │                                                                                                                           └──  all d: Dangerous, c: Component | c in d.parts
inv6 C:     │                                                                                                                               └──  all c: Component, p: Product | no (c & c.^parts)
inv6 C:     │                                                                                                                                   └──  all c: Component | no (c & c.^parts)
inv7 T:     │                                                                                                                                       └──  all d: Dangerous, c: Component | c & d.parts
inv7 C:     │                                                                                                                                           └──  all p: Product | p in Component and some(p.parts & Dangerous) implies p in Dangerous
inv7 C:     │                                                                                                                                               └──  all c: Component |some(c.parts & Dangerous) implies c in Dangerous
inv8 T:     │                                                                                                                                                   └──  all c: Component | (c & Dangerous) implies no (c.workstation.workers & Human)
inv8 C:     │                                                                                                                                                       └──  all c: Component | (c in Dangerous) implies no (c.workstation.workers & Human)
inv9 E:     │                                                                                                                                                           └──   
inv9 B:     │                                                                                                                                                               └──  all w: Workstation | one w.succ
inv9 B:     │                                                                                                                                                                   └──  all w: Workstation | one (w.succ & w)
inv9 B:     │                                                                                                                                                                       └──  all w: Workstation | one (w.succ)
inv9 B:     │                                                                                                                                                                           └──  all disj w: Workstation | one (w.succ)
inv9 B:     │                                                                                                                                                                               └──  all w: Workstation | one (w.succ)
inv9 B:     │                                                                                                                                                                                   └──  all w: Workstation | one (w.succ) and w not in w.succ
inv9 B:     │                                                                                                                                                                                       └──  all w: Workstation | one (w.succ) and (w not in w.succ)
inv9 O:     │                                                                                                                                                                                           └──  all w: Workstation | one (w.succ) and (w not in w.^succ)
inv9 U:     │                                                                                                                                                                                               └──  all w: Workstation | lone (w.succ) and (w not in w.^succ)
inv9 U:     │                                                                                                                                                                                                   └──  all w: Workstation | lone (w.succ) and (w not in w.succ)
inv9 U:     │                                                                                                                                                                                                       └──  all w: Workstation | lone (w.succ)
inv9 U:     │                                                                                                                                                                                                           └──  all w: Workstation | lone (w.succ) and (w not in w.succ)
inv10 T:    │                                                                                                                                                                                                               └──  all c: Component | (c not in ~c.^parts)
inv10 B:    │                                                                                                                                                                                                                   └──  all c: Component | (c not in c.^parts)
inv10 B:    │                                                                                                                                                                                                                       └──  all c: Component | (c not in c.~parts)
inv10 B:    │                                                                                                                                                                                                                           └──  all c: Component | (c not in c.~^parts)
inv10 B:    │                                                                                                                                                                                                                               └──  all c: Component | (c not in c.^~parts)
inv10 B:    │                                                                                                                                                                                                                                   └──  all c: Component | (c.parts not in c)
inv10 B:    │                                                                                                                                                                                                                                       └──  all c: Component | (c.^parts not in c)
inv10 B:    │                                                                                                                                                                                                                                           └──  all c: Component | (c.~^parts not in c)
inv10 B:    │                                                                                                                                                                                                                                               └──  all c: Component | (c.parts not in c)
inv10 B:    │                                                                                                                                                                                                                                                   └──  all c: Component | (c.^parts not in c)
inv10 B:    │                                                                                                                                                                                                                                                       └──  all c: Component | (c.^parts in c)
inv10 B:    │                                                                                                                                                                                                                                                           └──  all c: Component | (c.~^parts in c)
inv10 B:    │                                                                                                                                                                                                                                                               └──  all c: Component | (c.^parts in c)
4ztqr4foy7nTFJYAc M:     │                                                                                                                                                                                                                                                                   └──  user added theme options. same as previous submission
inv10 B:    │                                                                                                                                                                                                                                                                       └──  all c: Component | (c.^parts in c)
inv9 U:     │                                                                                                                                                                                                                                                                           └──  all w: Workstation | lone (w.succ) and (w not in w.succ)
inv8 C:     │                                                                                                                                                                                                                                                                               └──  all c: Component | (c in Dangerous) implies no (c.workstation.workers & Human)
inv1 E:     ├──   
inv1 T:     │   └──  all w:Worker | w in workers implies w in Human or w in Robot
inv1 U:     │       └──  all w:Worker | w in Workstation.workers implies w in Human or w in Robot
inv1 T:     │           └──  all w:Worker | w in (Workstation <: workers) implies w in Human or w in Robot
inv1 U:     │               └──  all w:Worker,wr:Workstation | w in wr.workers implies w in Human or w in Robot
inv1 C:     │                   └──  all w:Worker | w in Human or w in Robot
inv1 C:     │                       └──  all w:Worker | w in Human or w in Robot
inv2 U:     │                           └──  all wt:Workstation | some wt.workers
inv2 U:     │                               └──  all wt:Workstation | some wt.workers all w:Worker | some Workstation.workers
inv2 T:     │                                   └──  all wt:Workstation | some wt.workers all w:Worker | some w in Workstation.workers
inv2 U:     │                                       └──  all wt:Workstation | some wt.workers all w:Worker | w in Workstation.workers
inv2 U:     │                                           └──  all wt:Workstation | some wt.workers all w:Worker | w in Workstation.workers
inv2 T:     │                                               └──  all wt:Workstation,w:Worker | some (w in wt.workers)
inv2 U:     │                                                   └──  all wt:Workstation | some w:Worker | (w in wt.workers)
inv2 U:     │                                                       └──  all wt:Workstation | some w:Worker | (w in wt.workers)
inv2 U:     │                                                           └──  all wt:Workstation | some w:Worker | (w in wt.workers) all w:Worker | some wt:Workstation | (w in wt.workers)
inv2 T:     │                                                               └──  all wt:Workstation | some w:Worker | (w in wt.workers) all w:Worker | some wt:Workstation | one (w in wt.workers)
inv2 C:     │                                                                   └──  all wt:Workstation | some w:Worker | (w in wt.workers) all w:Worker | one wt:Workstation | (w in wt.workers)
inv2 C:     │                                                                       └──  all wt:Workstation | some w:Worker | (w in wt.workers) all w:Worker | one wt:Workstation | (w in wt.workers)
inv3 C:     │                                                                           └──  all c:Component | one wt:Workstation | wt in c.workstation
inv3 C:     │                                                                               └──  all c:Component | one wt:Workstation | wt in c.workstation
inv4 B:     │                                                                                   └──  all c:Component | lone c.parts
inv4 S:     │                                                                                       └──  all c:Component | lone c.parts all m:Material | no c.parts
inv4 B:     │                                                                                           └──  all c:Component | lone c.parts all m:Material | no m.parts
inv4 C:     │                                                                                               └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 S:     │                                                                                                   └──  all wt:worktation | no (wt.workers-Human) & (wt.workers-Robot)
inv5 B:     │                                                                                                       └──  all wt:Workstation | no (wt.workers-Human) & (wt.workers-Robot)
inv5 B:     │                                                                                                           └──  no (Workstation.workers-Human) & (Workstation.workers-Robot)
inv5 U:     │                                                                                                               └──  all wt:Workstation | no (wt.workers & Human) & (wt.workers & Robot)
inv5 T:     │                                                                                                                   └──  all wt:Workstation | (wt.workers & Human) & (wt.workers & Robot)
inv5 T:     │                                                                                                                       └──  all wt:Workstation | (wt.workers-Human) & (wt.workers-Robot)
inv5 B:     │                                                                                                                           └──  all wt:Workstation | (wt.workers-Human) & (wt.workers-Robot) = none
inv5 B:     │                                                                                                                               └──  all wt:Workstation | no (wt.workers-Human) & (wt.workers-Robot)
inv5 S:     │                                                                                                                                   └──  all wt:Workstation,w:Worker | w in wt.Workers and w in Human implies no wt.Workers-Human
inv5 O:     │                                                                                                                                       └──  all wt:Workstation,w:Worker | w in wt.workers and w in Human implies no wt.workers-Human
inv6 U:     │                                                                                                                                           └──  all c:Component | c not in c.parts
inv6 T:     │                                                                                                                                               └──  all c:Component | c not in ^c.parts
inv6 C:     │                                                                                                                                                   └──  all c:Component | c not in c.^parts
inv7 E:     │                                                                                                                                                       └──   
inv7 S:     │                                                                                                                                                           └──  all c:Components | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                               └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                   └──  all c:Component | some c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                       └──  all c:Component | (some c.parts in Dangerous) implies c in Dangerous
inv7 B:     │                                                                                                                                                                           └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                               └──  all c:Component | (some c.parts in Dangerous) implies c in Dangerous
inv7 S:     │                                                                                                                                                                                   └──  all c:Component,p:Parts | p in c.parts implies c in Dangerous
inv7 O:     │                                                                                                                                                                                       └──  all c:Component,p:Product | p in c.parts implies c in Dangerous
inv7 C:     │                                                                                                                                                                                           └──  all c:Component,p:Product | p in c.parts and p in Dangerous implies c in Dangerous
inv8 S:     │                                                                                                                                                                                               └──  all p:Product,wt:Workstation | wt in p.workstation and p in Dangerous implies wt.workes in Robot
inv8 O:     │                                                                                                                                                                                                   └──  all p:Product,wt:Workstation | wt in p.workstation and p in Dangerous implies wt.workers in Robot
Ns5wijfCoe6JCeBG9 M:     │                                                                                                                                                                                                       └──  user added theme options. same as previous submission
inv9 E:     │                                                                                                                                                                                                           └──   
inv10 E:    │                                                                                                                                                                                                               └──   
inv10 B:    │                                                                                                                                                                                                                   └──  all c1,c2:Component,w1,w2:Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv9 O:     │                                                                                                                                                                                                                       └──  all w,wb : Workstation | (wb in begin) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                                                                                                                                                                                           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
H7x6j3XYpRLp3cfbo M:     │                                                                                                                                                                                                                               └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                                                                                                                                                   └──  all w:Worker | w in Human or w in Robot
qFnmNfnnmrGHqjZwx N:     │                                                                                                                                                                                                                                       └──  user added extra characters to pred name
Z9Y6922q4sQsux4HY N:     │                                                                                                                                                                                                                                           └──  user added extra characters to pred name
inv1 S:     ├──  no Workers-Human&Workers-Robot
inv1 C:     │   └──  no Worker-Human&Worker-Robot
inv1 C:     │       └──  no Worker-Human-Robot
inv2 S:     │           └──  all w: Workstation | some w.workers and no Workers-w.workers
inv2 B:     │               └──  all w: Workstation | some w.workers and no Worker-w.workers
inv2 U:     │                   └──  all w: Workstation | some w.workers all w: Worker | w in Workstation.workers
inv2 U:     │                       └──  all w: Workstation | some w.workers all w: Worker | lone w&Workstation.workers
inv2 U:     │                           └──  all w: Workstation | some w.workers all w: Worker | one w&Workstation.workers
inv2 C:     │                               └──  all w: Workstation | some w.workers and all w: Worker | one workers.w
inv3 C:     │                                   └──  all c: Component | one c.workstation
inv4 S:     │                                       └──  all p: Product | p in Component implies some p.parts and p in Materials implies no p.parts
inv4 U:     │                                           └──  all p: Product | p in Component implies some p.parts and p in Material implies no p.parts
inv4 C:     │                                               └──  all p: Product | (p in Component implies some p.parts) and (p in Material implies no p.parts)
inv4 S:     │                                                   └──  all c: Componet | some c.parts all m: Material | no p.parts
inv4 S:     │                                                       └──  all c: Component | some c.parts all m: Material | no p.parts
inv4 C:     │                                                           └──  all c: Component | some c.parts all m: Material | no m.parts
inv4 U:     │                                                               └──  all c: Component, m: Material | some c.parts and no m.parts
inv4 U:     │                                                                   └──  all c: Component, m: Material | (some c.parts) and no m.parts
inv4 U:     │                                                                       └──  all c: Component, m: Material | (some c.parts) and (no m.parts)
inv4 C:     │                                                                           └──  all c: Component | some c.parts all m: Material | no m.parts
inv5 T:     │                                                                               └──  all w: Workstation | no w.workers.Robot&w.workers.Human
inv5 B:     │                                                                                   └──  all w: Workstation | Robot in w.workers implies Human not in w.workers
inv5 B:     │                                                                                       └──  all w: Workstation | w.workers not in Human&Robot
inv5 T:     │                                                                                           └──  all w: Workstation | Robot in w.workers = Human not in w.workers
inv5 B:     │                                                                                               └──  all w: Workstation | Robot in w.workers implies Human not in w.workers
inv5 B:     │                                                                                                   └──  all w: Workstation, wk: w.workers | Robot in wk implies Human not in wk
inv5 B:     │                                                                                                       └──  all w: Workstation, wk: w.workers | (Robot in wk implies Human not in wk) and (Human in wk implies Robot not in wk)
inv5 B:     │                                                                                                           └──  all w: Workstation, wk: w.workers | (Robot in wk implies Human != wk) and (Human in wk implies Robot != wk)
inv5 C:     │                                                                                                               └──  all w: Workstation, h: Human, r: Robot | (h in w.workers implies r not in w.workers) and (r in w.workers implies h not in w.workers)
inv6 C:     │                                                                                                                   └──  all c: Component | c not in c.^parts
inv7 B:     │                                                                                                                       └──  all c: Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                           └──  all c: Component | c.parts in Dangerous implies c = Dangerous
inv7 C:     │                                                                                                                               └──  all c: Component, p: c.parts | p in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                   └──  all c: Component, p: c.parts | p in Dangerous implies c in Dangerous
inv8 B:     │                                                                                                                                       └──  all c: Component | c in Dangerous implies c.workstation.workers not in Human
inv8 B:     │                                                                                                                                           └──  all c: Component | c in Dangerous implies c.workstation.workers not in Human
inv9 U:     │                                                                                                                                               └──  all w: Workstation | w not in w.^succ
inv9 O:     │                                                                                                                                                   └──  all w: Workstation | some w.succ and w not in w.^succ
inv9 U:     │                                                                                                                                                       └──  all w: Workstation | lone w.succ and w not in w.^succ
inv9 B:     │                                                                                                                                                           └──  all disj w1,w2: Workstation | w2 in w1.succ and w2 not in w1.^succ
inv9 O:     │                                                                                                                                                               └──  all w: Workstation | Workstation in w.succ and w not in w.^succ
inv9 S:     │                                                                                                                                                                   └──  all w: Workstation | w not in end implies and w not in w.^succ
inv9 U:     │                                                                                                                                                                       └──  all w: Workstation | w not in end implies w not in w.^succ
inv9 U:     │                                                                                                                                                                           └──  all w: Workstation | w not in w.^succ
inv9 B:     │                                                                                                                                                                               └──  all disj w,w1: Workstation | w not in begin implies w1 in w.succ and w not in w.^succ
inv9 B:     │                                                                                                                                                                                   └──  all disj w,w1: Workstation | (w not in begin implies w1 in w.succ) and w not in w.^succ
inv9 B:     │                                                                                                                                                                                       └──  all w: Workstation | (w in begin implies some w.succ) and w not in w.^succ
inv9 U:     │                                                                                                                                                                                           └──  all w: Workstation | (w in begin implies (some w.succ) or w in end) and w not in w.^succ
inv9 U:     │                                                                                                                                                                                               └──  all w: Workstation | (w in begin implies (some w.succ) or w in end) and w not in w.^succ
inv9 O:     │                                                                                                                                                                                                   └──  all w: Workstation | (no Workstation-w or w in begin and some w.succ) and w not in w.^succ
inv9 O:     │                                                                                                                                                                                                       └──  all w: Workstation | (no Workstation-w or (w in begin and some w.succ)) and w not in w.^succ
inv9 T:     │                                                                                                                                                                                                           └──  all w: Workstation | (Workstation-w or w in end or some w.succ) and w not in w.^succ
inv9 T:     │                                                                                                                                                                                                               └──  all w: Workstation | (Workstation-w or w in end or some w.succ) and w not in w.^succ
inv9 U:     │                                                                                                                                                                                                                   └──  all w: Workstation | (no Workstation-w or w in end or some w.succ) and w not in w.^succ
inv9 O:     │                                                                                                                                                                                                                       └──  all w: Workstation | (no Workstation-w or w in end or some w.succ) and w not in w.^succ and w.succ not in begin
inv9 O:     │                                                                                                                                                                                                                           └──  all w1,w2: Workstation | (w1 in begin and w2 in end) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)
inv9 B:     │                                                                                                                                                                                                                               └──  all w1,w2: Workstation | ((w1 in begin and w2 in end) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or w1=w2 and w1 not in w2.succ
inv9 U:     │                                                                                                                                                                                                                                   └──  all w1,w2: Workstation | ((w1 in begin and w2 in end) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or w1=w2 implies no Workstation-w1 and w1 not in w2.succ
inv9 U:     │                                                                                                                                                                                                                                       └──  all w1,w2: Workstation | ((w1 in begin and w2 in end) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or (w1=w2 implies no Workstation-w1 and w1 not in w2.succ)
inv9 O:     │                                                                                                                                                                                                                                           └──  all w1,w2: Workstation | ((w1 in begin and w2 in end) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ))
inv9 U:     │                                                                                                                                                                                                                                               └──  all w1,w2: Workstation | ((w1 in begin and w2 in end and w1!=w2) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or (w1=w2 implies no Workstation-w1 and w1 not in w2.succ)
inv9 U:     │                                                                                                                                                                                                                                                   └──  all w1,w2: Workstation | ((w1 in begin and w2 in end and w1!=w2) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or (w1=w2 implies no Workstation-w1 and w1 not in w1.^succ)
inv9 U:     │                                                                                                                                                                                                                                                       └──  all w1,w2: Workstation | ((w1 in begin and w2 in end and w1!=w2) implies (some w1.succ and w1 not in succ.Workstation and no w2.succ)) or (w1=w2 implies no Workstation-(w1+w2) and (w1+w2) not in (w1+w2).^succ)
inv9 U:     │                                                                                                                                                                                                                                                           └──  all w: Workstation | w not in w.^succ
inv9 U:     │                                                                                                                                                                                                                                                               └──  all w: Workstation | w not in w.^succ and (w in begin or some succ.w) and (w in end or some w.succ)
inv9 C:     │                                                                                                                                                                                                                                                                   └──  all w: Workstation | w not in w.^succ and (w in begin or one succ.w) and (w in end or one w.succ)
inv9 C:     │                                                                                                                                                                                                                                                                       └──  all w: Workstation | w not in w.^succ and (w in begin or one succ.w) and (w in end or one w.succ)
inv10 B:    │                                                                                                                                                                                                                                                                           └──  all c: Component, p: c.parts, w: c.workstation | c.parts in w
inv10 B:    │                                                                                                                                                                                                                                                                               └──  all c: Component, p: c.parts, w: c.workstation | c.parts.workstation = w
inv10 B:    │                                                                                                                                                                                                                                                                                   └──  all c: Component, p: c.parts, w: c.workstation | p.workstation = w
inv10 S:    │                                                                                                                                                                                                                                                                                       └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.worstation | w2 in w1.^succs
inv10 S:    │                                                                                                                                                                                                                                                                                           └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.workstation | w2 in w1.^succs
inv10 B:    │                                                                                                                                                                                                                                                                                               └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.workstation | w2 in w1.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                   └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.workstation | w1 in w2.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                       └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.workstation | w2 in w1.^succ
inv10 B:    │                                                                                                                                                                                                                                                                                                           └──  all c1: Component, c2: c1.^parts, w1: c1.workstation, w2: c2.workstation | w1 in w2.^succ
inv9 C:     │                                                                                                                                                                                                                                                                                                               └──  all w: Workstation | w not in w.^succ and (w in begin or one succ.w) and (w in end or one w.succ)
inv8 B:     │                                                                                                                                                                                                                                                                                                                   └──  all c: Component | c in Dangerous implies c.workstation.workers not in Human
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 U:     │   └──  all ws : Workstation | all w : Worker | ws.workers != none and w in Workstation.workers
inv2 S:     │       └──  all ws : Worstation | ws.workers != none all w1,ws : Workstation | all w : Worker |w in ws.workers and w in w1.workers implies ws = w1
inv2 U:     │           └──  all ws : Workstation | ws.workers != none all w1,ws : Workstation | all w : Worker |w in ws.workers and w in w1.workers implies ws = w1
inv2 U:     │               └──  all ws : Workstation | some w : Worker | w in ws.workers and all w1,ws : Workstation | all w : Worker |w in ws.workers and w in w1.workers implies ws = w1
inv2 C:     │                   └──  all ws : Workstation | some w : Worker | w in ws.workers and all w : Worker | one ws:Workstation | w in ws.workers
inv2 C:     │                       └──  all ws : Workstation | some w : Worker | w in ws.workers all w : Worker | one ws:Workstation | w in ws.workers
inv3 C:     │                           └──  all c:Component | one ws : Workstation | ws in c.workstation
inv4 T:     │                               └──  all c : Component | some p : Product | p in c.Product.parts all m : Material | all p: Produtct | p not in m.Product.parts
inv4 S:     │                                   └──  all c : Component | some p : Product | p in c.Product.parts all m : Material | m.Product.parts == none
inv4 S:     │                                       └──  all c : Component | some p : Product | p in c.parts all m : Material | m.Product.parts == none
inv4 C:     │                                           └──  all c : Component | some p : Product | p in c.parts all m : Material | no p : Product | p in m.parts
inv5 S:     │                                               └──  all w,w1 : Worker | all ws:Worstation | (w+w1) in ws.workers and w in Human | implies w1 not in Robot
inv5 S:     │                                                   └──  all w,w1 : Worker | all ws:Worstation | w in ws.workers and w1 in w1.workers and w in Human | implies w1 not in Robot
inv5 S:     │                                                       └──  all w,w1 : Worker | all ws:Worstation | w in ws.workers and w1 in w1.workers and w in Human | implies w1 in Human
inv5 S:     │                                                           └──  all w,w1 : Worker | all ws:Worstation | w in ws.workers and w1 in ws.workers and w in Human | implies w1 in Human
inv5 S:     │                                                               └──  all w,w1 : Worker | all ws:Worstation | w in ws.workers and w1 in ws.workers and w in Human implies w1 in Human
inv5 O:     │                                                                   └──  all w,w1 : Worker | all ws:Workstation | w in ws.workers and w1 in ws.workers and w in Human implies w1 in Human
inv6 U:     │                                                                       └──  all c: Component | c not in c.parts
inv6 C:     │                                                                           └──  all c: Component | c not in c.^(parts)
inv7 B:     │                                                                               └──  all c: Component | c in Dangerous implies c.parts in Dangerous
inv7 O:     │                                                                                   └──  all c: Component | all p: Product| p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 S:     │                                                                                       └──  all c : Component | all ws : Workstation | c in Dangerous and w in c.workstation implies w.workers not in Human
inv7 O:     │                                                                                           └──  all c: Component | all p: Product| p in Dangerous and p in c.^(parts) implies c in Dangerous
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv1 C:     │   └──  all w:Worker | w in Human or w in Robot
inv1 C:     │       └──  all w:Worker | w in Human or w in Robot
inv2 C:     │           └──  all a1,a2:Workstation | (some b:Worker | a1->b in workers and a2->b in workers) implies a1 = a2 all b:Worker | some a:Workstation | a->b in workers all a:Workstation | some b:Worker | a->b in workers
inv3 U:     │               └──  workstation in Component -> some Workstation
inv3 C:     │                   └──  workstation in Component -> one Workstation
inv3 O:     │                       └──  all a:Workstation | some b:Worker | a->b in workstation all a1,a2:Workstation | (some b:Component | a1->b in workstation and a2->b in workstation) implies a1 = a2
inv3 O:     │                           └──  all a:Workstation | some b:Component | a->b in workstation all a1,a2:Workstation | (some b:Component | a1->b in workstation and a2->b in workstation) implies a1 = a2
inv3 U:     │                               └──  all a:Component | some b:Workstation | a->b in workstation all a1,a2:Workstation | (some b:Component | a1->b in workstation and a2->b in workstation) implies a1 = a2
inv3 C:     │                                   └──  all a:Component | some b:Workstation | a->b in workstation all a1,a2:Workstation | (some b:Component | b->a1 in workstation and b->a2 in workstation) implies a1 = a2
inv4 U:     │                                       └──  parts in Component -> Product
inv4 C:     │                                           └──  parts in Component -> some Product
inv4 B:     │                                               └──  all a:Component | some b:Workstation | a->b in workstation
inv4 B:     │                                                   └──  all a:Component | some b:Workstation | a->b in workstation all a:Product,b:Workstation | a->b in workstation implies a in Component
inv4 T:     │                                                       └──  all a:Component | some b:Workstation | a->b in parts all a:Product,b:Workstation | a->b in workstation implies a in parts
inv4 T:     │                                                           └──  all a:Component | some b:Product | a->b in parts all a:Product,b:Workstation | a->b in workstation implies a in parts
inv4 U:     │                                                               └──  all a:Component | some b:Product | a->b in parts all a:Product,b:Workstation | a->b in parts implies a in Component
inv4 C:     │                                                                   └──  all a:Component | some b:Product | a->b in parts all a:Product,b:Product | a->b in parts implies a in Component
inv4 U:     │                                                                       └──  all a:Component | some b:Product | a->b in parts
inv5 C:     │                                                                           └──  all w:Workstation | no Human&w.workers or no Robot&w.workers
inv5 O:     │                                                                               └──  all w:Workstation | (all p:w.workers | p in Robot) or (all p:w.workers | p in Human)
inv5 T:     │                                                                                   └──  all w:Workstation | w.workers in Workstation -> Human or w.workers in Workstation -> Robot
inv5 O:     │                                                                                       └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv6 O:     │                                                                                           └──  no iden & ^parts
inv6 O:     │                                                                                               └──  all p:Product | p->p  not in ^parts
inv7 O:     │                                                                                                   └──  all p:Product | some Dangerous&p.^parts implies p in Dangerous
inv7 B:     │                                                                                                       └──  all p:Product | some d:Dangerous | d in p.^parts implies p in Dangerous
inv7 O:     │                                                                                                           └──  all p:Product | (some d:Dangerous | d in p.^parts) implies p in Dangerous
inv8 S:     │                                                                                                               └──  all w:Workstation, d:Dangerous | d->w in worstation implies not some p:Human | w->p in workers
inv8 C:     │                                                                                                                   └──  all w:Workstation, d:Dangerous | d->w in workstation implies not some p:Human | w->p in workers
inv8 U:     │                                                                                                                       └──  no Human&(workstation.Dangerous).workers
inv8 S:     │                                                                                                                           └──  no Human&(vworkstation).workers
inv8 C:     │                                                                                                                               └──  no Human&(Dangerous.workstation).workers
inv9 S:     │                                                                                                                                   └──  all w1:Workstation-last | one w1.succ
inv8 C:     │                                                                                                                                       └──  no Human&(Dangerous.workstation).workers
inv9 U:     │                                                                                                                                           └──  all w1:Workstation-end | one w1.succ
inv9 U:     │                                                                                                                                               └──  all w1:Workstation-end | one w1.succ Workstation in begin.*succ
inv9 B:     │                                                                                                                                                   ├──  all w1:Workstation-end | one w1.succ Workstation in begin.^succ
inv9 B:     │                                                                                                                                                   └──  all w1:Workstation-end | one w1.succ Workstation in begin.^succ
inv9 U:     │                                                                                                                                                       └──  all w1:Workstation-end | one w1.succ Workstation in begin.*succ
inv9 U:     │                                                                                                                                                           ├──  all w1:Workstation-end | one w1.succ Workstation-begin in begin.^succ
inv9 U:     │                                                                                                                                                           │   └──  all w1:Workstation-end | one w1.succ Workstation in begin.*succ
inv9 U:     │                                                                                                                                                           │       └──  all w1:Workstation-end | one w1.succ all w1:Workstation-begin | one succ.w1 Workstation in begin.*succ
inv9 U:     │                                                                                                                                                           │           └──  succ in Workstation lone -> lone Workstation Workstation in begin.*succ
8otgLCqLAfXemyMYW M:     │                                                                                                                                                           │               └──  user added theme options. same as previous submission
xaHHLaQHfWs9AECt4 M:     │                                                                                                                                                           │                   └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                                                                           │                       └──  all w:Worker | w in Human or w in Robot
inv1 C:     │                                                                                                                                                           │                           └──  all w:Worker | w in Human or w in Robot
inv1 C:     │                                                                                                                                                           │                               └──  all w:Worker | w in Human or w in Robot
inv9 U:     │                                                                                                                                                           │                                   └──  all w:Workstation | begin->w in *succ  all w:Workstation | not end->w in succ
inv9 O:     │                                                                                                                                                           │                                       └──  all w:Workstation | begin->w in *succ all w1:Workstation | some w2:Workstation | w1->w2 in succ all w:Workstation | not end->w in succ
inv9 U:     │                                                                                                                                                           │                                           └──  all w:Workstation | begin->w in *succ all w1:Workstation | some w2:Workstation | w1->w2 in succ or w1 in end all w:Workstation | not end->w in succ
inv9 C:     │                                                                                                                                                           │                                               └──  all w:Workstation | begin->w in *succ all w1:Workstation | some w2:Workstation | w1->w2 in succ or w1 in end all w1,w2:Workstation | (some w3:Workstation | w3->w1 in succ and w3->w2 in succ) implies w1 = w2 all w:Workstation | not end->w in succ
inv10 O:    │                                                                                                                                                           │                                                   └──  all p:Product | p.^parts in p.workstation.~^succ
inv10 O:    │                                                                                                                                                           │                                                       └──  all p:Component | p.^parts in p.workstation.~^succ
inv10 O:    │                                                                                                                                                           │                                                           └──  all p:Component | p.^parts.workstation in p.workstation.~^succ
inv10 O:    │                                                                                                                                                           │                                                               └──  ^parts.workstation in workstation.~^succ
inv10 O:    │                                                                                                                                                           │                                                                   └──  all p:Component,w:Workstation | p->w in ^parts.workstation implies p->w in workstation.~^succ
Xq6D4N8b4o6TsYjHF M:     │                                                                                                                                                           │                                                                       └──  user added theme options. same as previous submission
inv9 U:     │                                                                                                                                                           └──  all w1:Workstation-end | one w1.succ Workstation-begin in begin.^succ
inv1 S:     ├──  Workers in Human + Robots
inv1 S:     │   └──  Worker in Human + Robots
inv1 C:     │       └──  Worker in Human + Robot
inv2 U:     │           └──  all w:Workstation | some w.workers
inv2 C:     │               └──  all w:Workstation | some w.workers all w:Worker | one workers.w
inv2 O:     │                   └──  all w:Workstation | some w.workers all w:Worker | one w.workers
inv2 C:     │                       └──  all w:Workstation | some w.workers all w:Worker | one workers.w
inv3 C:     │                           └──  all c:Component | one c.workstation
inv4 S:     │                               └──  all c:Components | some c.parts all m:Materials | no m.parts
inv4 C:     │                                   └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 C:     │                                       └──  Component = parts.Product
inv4 C:     │                                           └──  Component = parts.Product
inv4 C:     │                                               └──  Component = parts.Product
inv7 S:     │                                                   └──  all c:Components | c.parts in Dangerous implies c in Dangerous
inv7 S:     │                                                       └──  all c:Components| c.parts in Dangerous implies c in Dangerous
inv5 O:     │                                                           └──  all w:Workstation | w.workers in Human or w.workers in Robot
inv6 C:     │                                                               └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                   └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                       └──  all c:Component | c.^parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                           └──  all c:Component | c.^parts & Dangerous implies c in Dangerous
inv7 O:     │                                                                               └──  all c:Component | some c.^parts & Dangerous implies c in Dangerous
inv8 S:     │                                                                                   └──  all c: Components, h:Human | c in Dangerous implies none c.workstation & h.workstation
inv8 T:     │                                                                                       └──  all c: Component, h:Human | c in Dangerous implies none c.workstation & h.workstation
inv7 O:     │                                                                                           └──  all c:Component | some c.^parts & Dangerous implies c in Dangerous
inv8 U:     │                                                                                               └──  all c: Component, h:Human | c in Dangerous implies no c.workstation & h.workstation
inv8 U:     │                                                                                                   └──  all c: Component, h:Human | c in Dangerous implies no c.workstation & h.workers
inv8 B:     │                                                                                                       └──  all c: Component, w:Worker | c in Dangerous implies no c.workstation & w.workers and w in Human
inv8 C:     │                                                                                                           └──  all c: Component, h:Human | c in Dangerous implies no c.workstation & workers.h
inv8 T:     │                                                                                                               └──  all c: Component, h:Human | c in Dangerous implies none c.workstation & workers.h
inv9 U:     │                                                                                                                   └──  all w:Workstation-end | one w.succ no end.succ
inv9 C:     │                                                                                                                       └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv9 U:     │                                                                                                                           └──  all w:Workstation-end | one w.succ no end.succ
inv9 C:     │                                                                                                                               └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv2 B:     ├──  all w: Workstation | all w1: Worker | w->w1 in workers
inv2 B:     │   └──  one w: Workstation | all w1: Worker | w->w1 in workers
inv3 C:     │       └──  all c: Component | one w: Workstation | c->w in workstation
inv4 S:     │           └──  all p,z: Products | p->z in parts implies p in Component
inv4 U:     │               └──  all p,z: Product | p->z in parts implies p in Component
inv4 U:     │                   └──  all p,z: Product | p->z in parts implies p in Component
inv4 B:     │                       └──  all p,z: Product | p->z in parts implies z in Component
inv4 S:     │                           └──  all m: Material, c: Components | m->c in parts
inv4 B:     │                               └──  all m: Material, c: Component | m->c in parts
inv4 B:     │                                   └──  all c,m: Component | m->c in parts
inv4 B:     │                                       └──  all p,z: Product | p->z in parts implies z in Component
inv9 O:     ├──  all w : Workstation-end | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ no begin & end all w : Workstation | w in begin.^succ
inv9 O:     │   └──  all w : Workstation-end | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ  all w : Workstation | w in begin.^succ
inv9 O:     │       └──  all w : Workstation-end | one w.succ all w : Workstation | w not in w.^succ one begin one end no end.succ no begin & Workstation.succ no begin & end all w : Workstation | w in begin.^succ
inv9 O:     │           └──  all w : Workstation-end | one w.succ all w : Workstation | w not in w.^succ   no end.succ no begin & Workstation.succ no begin & end all w : Workstation | w in begin.^succ
inv1 S:     ├──  all w | w in (Human + Robot)
inv1 C:     │   └──  all w:Worker | w in (Human + Robot)
inv1 S:     │       └──  all w | w in (Human + Robot)
inv1 O:     │           └──  all w : univ | w in (Human + Robot)
inv1 C:     │               └──  all w:Worker | w in (Human + Robot)
inv2 S:     │                   └──  all s:Workstation | some s.workers all w:Worker | one Workstation.s
inv2 T:     │                       └──  all s:Workstation | some s.workers all w:Worker | one Workstation.w
inv2 T:     │                           └──  all s:Workstation | some s.workers all w:Worker | one w.Workstation
inv2 T:     │                               └──  all s:Workstation | some s.workers and (s.workers in iden)
inv2 U:     │                                   └──  all s:Workstation | some s.workers
inv2 T:     │                                       └──  all s:Workstation | some s.workers and s.workers in iden
inv2 T:     │                                           └──  all s:Workstation, w:Worker | some s.workers and s.w in iden
inv2 B:     │                                               └──  workers in Workstation some -> one Worker
inv2 C:     │                                                   └──  workers in Workstation one -> some Worker
inv3 O:     │                                                       └──  workstation in Component some -> one Workstation
inv3 B:     │                                                           └──  workstation in Component some -> some Workstation
inv3 U:     │                                                               └──  workstation in Component -> some Workstation
inv3 C:     │                                                                   └──  workstation in Component -> one Workstation
inv3 C:     │                                                                       └──  workstation in Component -> one Workstation
inv2 U:     │                                                                           └──  all w:Worker | one workers.w
inv2 C:     │                                                                               └──  all w:Worker | one workers.w all w:Workstation | some w.workers
inv3 S:     │                                                                                   └──  all c.Component | one c.workstation
inv3 C:     │                                                                                       └──  all c:Component | one c.workstation
inv2 C:     │                                                                                           └──  all w:Worker | one workers.w     Workstation = workers.Worker
inv4 S:     │                                                                                               └──  all c:Components | some c.parts
inv4 U:     │                                                                                                   └──  all c:Component | some c.parts
inv4 C:     │                                                                                                       └──  all c:Component | some c.parts all m:Material | no m.parts
inv5 S:     │                                                                                                           └──  all w:Workstation | w.workers &
inv5 S:     │                                                                                                               └──  all w:Workstation | w.workers &
inv6 B:     │                                                                                                                   └──  some c:Component | no (c.parts & Component)
inv6 B:     │                                                                                                                       └──  some c:Component | no (c.parts & c)
inv6 B:     │                                                                                                                           └──  some c:Component | c not in c.parts
inv5 S:     │                                                                                                                               └──  all s:Workstation, h:Human, r:Robot |hnot in s.workers or r not in s.workers
inv5 C:     │                                                                                                                                   └──  all s:Workstation, h:Human, r:Robot |h not in s.workers or r not in s.workers
inv5 S:     │                                                                                                                                       └──  all s:Workstation | w.workers in Human or w.workers in Robot
inv5 O:     │                                                                                                                                           └──  all s:Workstation | s.workers in Human or s.workers in Robot
inv5 C:     │                                                                                                                                               └──  no workers.Human & workers.Robot
inv5 C:     │                                                                                                                                                   └──  no (workers.Human & workers.Robot)
inv6 B:     │                                                                                                                                                       └──  some c:Component | c not in c.parts
inv6 T:     │                                                                                                                                                           └──  some c:Component | c not in *(c.parts)
inv6 T:     │                                                                                                                                                               └──  some c:Component | c not in ^(c.parts)
inv6 O:     │                                                                                                                                                                   └──  some c:Component | c not in c.*parts
inv6 B:     │                                                                                                                                                                       └──  some c:Component | c not in c.parts
inv6 B:     │                                                                                                                                                                           └──  some c:Component | c not in c.parts
inv6 B:     │                                                                                                                                                                               └──  some c:Component | c not in c.^parts
inv6 C:     │                                                                                                                                                                                   └──  all c:Component | c not in c.^parts
inv7 T:     │                                                                                                                                                                                       └──  all c:Component | c.^parts & Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                                           └──  all c:Component | c.^parts.Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                                                                                               └──  all c:Component | c.^parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                                                   └──  all c:Component | c.^parts in Dangerous != none implies c in Dangerous
inv7 B:     │                                                                                                                                                                                                       └──  all c:Component | c.^parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                                                                                                                           └──  all c:Component | some c.^parts in Dangerous
inv7 T:     │                                                                                                                                                                                                               └──  all c:Component | some c.parts in Dangerous
inv7 C:     │                                                                                                                                                                                                                   └──  all c:Component | some c.parts & Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                                                                                                       └──  all c:Component | some (c.parts & Dangerous) implies c in Dangerous
inv8 T:     │                                                                                                                                                                                                                           └──  all c:Component, ws:Workstation | c in Dangerous implies no ws.workers in Human
inv8 O:     │                                                                                                                                                                                                                               └──  all c:Component, ws:Workstation | c in Dangerous implies no w: ws.workers | w in Human
inv8 O:     │                                                                                                                                                                                                                                   └──  all c:Component, ws:Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C:     │                                                                                                                                                                                                                                       └──  all c:Dangerous, ws:c.workstation | all w:ws.workers | w not in Human
inv8 C:     │                                                                                                                                                                                                                                           └──  all c:Dangerous, ws:c.workstation | no ws.workers & Human
inv8 S:     │                                                                                                                                                                                                                                               └──  al c:Dangerous, ws:c.workstations.workers | no ws & Human
inv8 S:     │                                                                                                                                                                                                                                                   └──  all c:Dangerous, ws:c.workstations.workers | no ws & Human
inv8 C:     │                                                                                                                                                                                                                                                       └──  all c:Dangerous, ws:c.workstation.workers | no ws & Human
inv8 C:     │                                                                                                                                                                                                                                                           └──  all c:Dangerous | no c.workstation.workers & Human
inv8 C:     │                                                                                                                                                                                                                                                               └──  no Dangerous.workstation.workers & Human
inv8 T:     │                                                                                                                                                                                                                                                                   └──  no Dangerous.workstation.workers in Human
inv8 T:     │                                                                                                                                                                                                                                                                       └──  no (Dangerous.workstation.workers in Human)
inv8 C:     │                                                                                                                                                                                                                                                                           └──  no Dangerous.workstation.workers & Human
inv9 T:     │                                                                                                                                                                                                                                                                               └──  all b:begin | one end in b.^succ
inv9 S:     │                                                                                                                                                                                                                                                                                   └──  all b:begin  e:end | end in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                       └──  all b:begin, e:end | end in b.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                           └──  all b:begin, e:end | end in b.^succ and b != e
inv9 B:     │                                                                                                                                                                                                                                                                                               └──  all w:Workstation - end | one w.succ no end.succ some begin.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                   └──  all w:Workstation - end | one w.succ no end.succ some begin.*succ
inv9 C:     │                                                                                                                                                                                                                                                                                                       └──  all w:Workstation - end | one w.succ no end.succ Workstation in begin.*succ
inv4 C:     ├──  all c:Component | some c.parts all m:Material | m.parts = none
inv4 U:     │   └──  parts in Component -> Product
inv4 C:     │       └──  parts in Component -> some Product
inv4 C:     │           └──  Component = parts.Product
inv3 S:     │               └──  all c:Component
inv3 S:     │                   └──  all c:Component
inv5 C:     │                       └──  no workers.Human & workers.Robot
inv5 C:     │                           └──  workers.Human & workers.Robot = none
inv6 C:     │                               └──  all c:Component | c not in c.^parts
inv6 O:     │                                   └──  no iden & ^parts
inv7 S:     │                                       └──  all c:Components | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                           └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 O:     │                                               └──  parts.Dangerous in Dangerous
inv7 T:     │                                                   └──  parts.Dangerous in Dangerous all c:Component  | some c.parts in Dangerous -> c in Dangerous
inv7 T:     │                                                       └──  parts.Dangerous in Dangerous all c:Component  | some c.parts & Dangerous -> c in Dangerous
inv7 O:     │                                                           └──  parts.Dangerous in Dangerous all c:Component  | some c.parts & Dangerous implies c in Dangerous
inv8 C:     │                                                               └──  all c:Dangerous, ws:c.workstation,w:ws.workers | w not in Human
inv8 C:     │                                                                   └──  all c:Dangerous | no c.workstation.workers & Human
inv9 C:     ├──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv10 T:    │   └──  all p:Product | p.parts
inv10 O:    │       └──  all p:Product | no p.parts
inv10 T:    │           └──  all p:Product | p.parts
inv10 T:    │               └──  all p:Product | no p.parts.Component
inv10 T:    │                   └──  all p:Product | p.parts
inv10 T:    │                       └──  all p:Product | p.parts.Component
inv10 T:    │                           └──  all p:Product | p.parts & Component
inv10 O:    │                               └──  all p:Product | no p.parts & Component
inv10 O:    │                                   └──  all p:Product | no (p.parts & Component).workstation
inv10 O:    │                                       └──  all p:Product | (p.parts & Component).workstation in ~succ.p.workstation
inv10 B:    │                                           └──  all p:Product | (p.parts & Component).workstation in ~succ.(p.workstation)
inv10 B:    │                                               └──  all p:Product | (p.parts & Component).workstation in ^~succ.(p.workstation)
inv10 T:    │                                                   └──  all p:Product | (p.parts & Component).workstation in ~succ.^(p.workstation)
inv10 B:    │                                                       └──  all p:Product | (p.parts & Component).workstation in ~succ.(p.workstation)
inv10 T:    │                                                           └──  all p:Product | (p.parts & Component).workstation
inv10 B:    │                                                               └──  all p:Product | (p.workstation) in ((p.parts & Component).workstation).*succ
inv10 B:    │                                                                   └──  all p:Product | (p.workstation) in ((p.parts & Component).workstation).^succ
inv10 B:    │                                                                       └──  all p:Product | (p.workstation) in ((p.parts & Component).workstation).*succ
inv10 B:    │                                                                           └──  all c:Component | (c.workstation) in c.parts.workstation.*succ
inv10 B:    │                                                                               └──  all c:Component | c.workstation in c.parts.workstation.*succ
inv10 B:    │                                                                                   └──  all c:Component | c.workstation in (c.parts & Component).workstation.*succ
inv10 B:    │                                                                                       └──  all c:Component | c.workstation in c.parts.workstation.*succ
inv10 U:    │                                                                                           └──  all c:Component | workstation.c in c.parts.workstation.*succ
inv10 B:    │                                                                                               └──  all c:Component | c.workstation in (((c.parts).workstation).*succ)
inv10 B:    │                                                                                                   └──  all c:Component | c.workstation in c.parts.workstation.*succ
inv10 B:    │                                                                                                       └──  all c:Component | c.workstation in c.parts.workstation.^succ
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 U:     │   └──  all w:Worker | one ws : Workstation | ws->w in workers
inv2 C:     │       └──  all w:Worker | one ws : Workstation | ws->w in workers all ws: Workstation | some w:Worker | ws->w in workers
inv3 C:     │           └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 S:     │               └──  all c : Components | some p:Product | c->p in parts
inv4 S:     │                   └──  all c : Components | some p:Product | c->p in parts
inv4 U:     │                       └──  all c : Component | some p:Product | c->p in parts
inv4 C:     │                           └──  all c : Component | some p:Product | c->p in parts all m : Material | no p:Product | m->p in parts
inv5 O:     │                               └──  all ws : Workstation | all h1,h2 : Worker | ws->h1 in workers and ws->h2 in workers and h1 in Human implies h2 in Human
inv6 B:     │                                   └──  all c : Component | c->c in parts
inv6 U:     │                                       └──  all c : Component | c->c not in parts
inv6 C:     │                                           └──  all c : Component | c not in c.^(parts)
inv6 U:     │                                               └──  all c : Component | c not in c.~(parts)
inv6 C:     │                                                   └──  all c : Component | c not in c.^(parts)
inv7 T:     │                                                       └──  all p:Product | lone d:Dangerous | p->d in parts implies p is Dangerous
inv7 S:     │                                                           └──  all c:Component | lone d:Dangerous | c->d in parts implies p is Dangerous
inv7 T:     │                                                               └──  all c:Component | lone d:Dangerous | c->d in parts implies c is Dangerous
inv7 B:     │                                                                   └──  all c:Component | lone d:Dangerous | c->d in parts implies c in Dangerous
inv7 B:     │                                                                       └──  all c:Component | some d:Dangerous | c->d in parts implies c in Dangerous
inv7 B:     │                                                                           └──  all c:Component | one d:Dangerous | c->d in parts implies c in Dangerous
inv7 C:     │                                                                               └──  all c:Component | all d:Dangerous | c->d in parts implies c in Dangerous
inv1 S:     ├──  all w : Worker | w in Humam or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 S:     │       └──  all wtt : Workstation | some wtt.workers  all wtt : Workstation | all w : worker | w in wtt.workers
inv2 B:     │           └──  all wtt : Workstation | some wtt.workers  all wtt : Workstation | all w : Worker | w in wtt.workers
inv2 B:     │               └──  all wtt : Workstation | some wtt.workers  some wtt : Workstation | all w : Worker | w in wtt.workers
inv2 B:     │                   └──  all wtt : Workstation | some wtt.workers  one wtt : Workstation | all w : Worker | w in wtt.workers
inv2 C:     │                       └──  all wtt : Workstation | some wtt.workers  all w : Worker | one wtt : Workstation | w in wtt.workers
inv2 C:     │                           └──  all wtt : Workstation | some wtt.workers all w : Worker | one wtt : Workstation | w in wtt.workers
inv3 C:     │                               └──  all c : Component | one c.workstation
inv4 C:     │                                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 O:     │                                       └──  all wtt : Workstation | wtt.workers in Human or wtt.workers in Robot
inv5 O:     │                                           └──  all wtt : Workstation | wtt.workers in Human or wtt.workers in Robot
inv6 S:     │                                               └──  all c : Component | p : Product | c.parts not in p.parts
inv6 S:     │                                                   └──  all c,d : Component | c.parts not in (d.parts.^)
inv6 S:     │                                                       └──  all c,d : Component | c.parts not in (d.parts.^)
inv6 S:     │                                                           └──  all c,d : Component | c.parts not in (d.parts.^)
inv6 O:     │                                                               └──  all c,d : Component | c.parts not in (d.^parts)
inv6 O:     │                                                                   └──  all c,d : Component | c.parts not in (c.^parts)
inv6 O:     │                                                                       └──  all c : Component | c.parts not in (c.^parts)
inv6 O:     │                                                                           └──  all c : Component | c.parts not in (c.^parts) all c,d : Component | c.parts not in (d.^parts)
inv5 O:     │                                                                               └──  all wtt : Workstation | wtt.workers in Human or wtt.workers in Robot
inv6 O:     │                                                                                   └──  all c : Component | c.parts not in (c.^parts) all c,d : Component | c.parts not in (d.^parts)
inv6 O:     │                                                                                       └──  all c : Component |	all p : Product | c.parts not in (p.^parts)
inv6 C:     │                                                                                           └──  all c : Component | c not in (c.^parts)
inv7 B:     │                                                                                               └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                   └──  all c : Component | c.parts & Dangerous implies c in Dangerous
inv7 T:     │                                                                                                       └──  all c : Component | some c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                           └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 T:     │                                                                                                               └──  all c : Component | no(c.parts not in Dangerous) implies c in Dangerous
inv7 T:     │                                                                                                                   └──  all c : Component | no(c.parts in Dangerous) implies c  not in Dangerous
inv7 T:     │                                                                                                                       └──  all c : Component | no (c.parts in Dangerous) implies c  not in Dangerous
inv7 B:     │                                                                                                                           └──  all c : Component | no (c.parts & Dangerous) implies c  not in Dangerous
inv7 B:     │                                                                                                                               └──  all c : Component | no (c.parts & Dangerous) implies c not in Dangerous
inv7 B:     │                                                                                                                                   └──  all c : Component | c.parts in Dangerous implies c in Dangerous
inv7 C:     │                                                                                                                                       └──  all c : Component | some (c.parts & Dangerous) implies c in Dangerous
inv8 S:     │                                                                                                                                           └──  all c : Component | c.parts in Danger iff c.workstation.workers in Robot
inv8 S:     │                                                                                                                                               └──  all c : Component | some (c & Danger) implies c.workstation.workers in Robot
inv7 C:     │                                                                                                                                                   └──  all c : Component | some (c.parts & Dangerous) implies c in Dangerous
inv8 O:     │                                                                                                                                                       └──  all c : Component | some (c & Dangerous) implies c.workstation.workers in Robot
inv8 O:     │                                                                                                                                                           └──  all c : Component | some (c & Dangerous) implies c.workstation.workers in Robot
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 C:     │   └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv3 C:     │       └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │           └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 O:     │               └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 C:     │                   └──  all c : Component | c not in c.^(parts)
inv7 O:     │                       └──  all c : Component | all p : Product | (p in Dangerous and p in c.^(parts)) implies (c in Dangerous)
inv8 S:     │                           └──  all c : Component | c in Dangerous implies (all w : Workstation | w in c.workstation implies Human not in w.workers))
inv8 B:     │                               └──  all c : Component | c in Dangerous implies (all w : Workstation | w in c.workstation implies Human not in w.workers)
inv8 S:     │                                   └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers)
inv8 B:     │                                       └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 B:     │                                           └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 B:     │                                               └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 B:     │                                                   └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 C:     │                                                       └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies (all h : Human | h not in w.workers)
inv1 C:     ├──  Worker in (Human + Robot)
inv2 U:     │   └──  all w1:Workstation, w2:Worker | some w1.workers and some workers.w2
inv2 U:     │       └──  all w:Workstation | some w.workers all w:Worker | some workers.w
inv2 U:     │           └──  all w:Workstation | some w.workers all w:Worker | some ws:Workstation| w in ws.workers
inv2 C:     │               └──  all w:Workstation | some w.workers all w:Worker | one ws:Workstation| w in ws.workers
inv3 C:     │                   └──  all c:Component | one ws:Workstation | ws in c.workstation
inv4 C:     │                       └──  all c:Component | some c.parts all m:Material | no m.parts
inv4 C:     │                           └──  all c:Component | some c.parts no Material.parts
inv5 O:     │                               └──  all ws:Workstation | ws.workers in Human iff ws.workers not in Robot
inv5 O:     │                                   └──  all ws:Workstation | Workstation.workers in Human iff Workstation.workers not in Robot
inv6 U:     │                                       └──  all c:Component | c not in c.parts
inv6 C:     │                                           └──  all c:Component | c not in c.^parts
inv7 S:     │                                               └──  all c:Components | some c.^parts.Dangerous implies c in Dangerous
inv7 T:     │                                                   └──  all c:Component | some c.^parts.Dangerous implies c in Dangerous
inv7 O:     │                                                       └──  all c:Component | some (c.^parts & Dangerous) implies c in Dangerous
inv8 O:     │                                                           └──  (Component & Dangerous).workstation.workers in Robot
inv9 B:     │                                                               └──  end in begin.^succ
inv9 T:     │                                                                   └──  begin.^succ.end
inv9 T:     │                                                                       └──  begin.^succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws : Workstation | some w.workers all w : Worker | one ws : Workstation | w in ws.workers
inv2 C:     │       └──  all ws : Workstation | some ws.workers all w : Worker | one ws : Workstation | w in ws.workers
inv3 C:     │           └──  all c : Component | one ws : Workstation | ws in c.workstation
inv4 B:     │               └──  some Component.parts and no Material.parts
inv4 C:     │                   └──  all c : Component |some c.parts no Material.parts
inv5 B:     │                       └──  all ws : Workstation | Human in ws.workers iff Robot not in ws.workers
inv5 B:     │                           └──  all ws : Workstation | Human in ws.workers implies Robot not in ws.workers
inv5 B:     │                               └──  all ws : Workstation | Human in ws.workers implies Robot not in ws.workers all ws : Workstation | Robot in ws.workers implies Human not in ws.workers
inv5 S:     │                                   └──  all ws : Workstation, some h : Human, some r : Robot | h in ws.workers iff r not in ws.workers
inv5 B:     │                                       └──  all ws : Workstation | some h : Human | some r : Robot | h in ws.workers iff r not in ws.workers
inv5 O:     │                                           └──  all ws:Workstation | ws.workers in Human iff ws.workers not in Robot
inv6 C:     │                                               └──  all c : Component | c not in c.^parts
inv7 O:     │                                                   └──  all c : Component | some (c.^parts & Dangerous) implies c in Dangerous
inv8 B:     │                                                       └──  all d : Dangerous | d.workstation.workers not in Human
inv8 B:     │                                                           └──  all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 S:     │                                                               └──  Worstation.^succs = Workstation
inv9 S:     │                                                                   └──  Workstation.^succs = Workstation
inv9 B:     │                                                                       └──  Workstation.^succ = Workstation
inv9 B:     │                                                                           └──  all w : Workstation | w.^succ = Workstation
inv9 C:     │                                                                               └──  all w: Workstation | w not in w.^succ all w, wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                   └──  all c1,c2 : Component, w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) => w1 in w2.^(succ)
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 S:     │   └──  (all ws : Workstation | ws.workers != None) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv2 C:     │       └──  (all ws : Workstation | ws.workers != none) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv3 S:     │           └──  all c : Component | one ws : WorkStation | ws in c.workstation
inv3 C:     │               └──  all c : Component | one ws : Workstation | ws in c.workstation
inv4 C:     │                   └──  all c : Component | some p : Product | p in c.parts all m : Material | no p : Product | p in m.parts
inv5 B:     │                       └──  all ws : Workstation | all w1, w2 : Worker | (w1 in ws.workers and w2 in ws.workers and w1 = Human) implies w2 = Human
inv6 C:     │                           └──  all c : Component | c not in c.^(parts)
inv7 B:     │                               └──  all c : Component | all p : Product | p = Dangerous and p in c.^(parts) implies c = Dangerous
inv7 B:     │                                   └──  all c : Component | all p : Product | (p = Dangerous and p in c.^(parts)) implies c = Dangerous
inv7 O:     │                                       └──  all c : Component | all p : Product | (p in Dangerous and p in c.^(parts)) implies c in Dangerous
inv8 S:     │                                           └──  all c : Component | all ws : Workstation | c in Dangerous and ws in c.workstation implies (Human not in w.workers)
inv8 B:     │                                               └──  all c : Component | all ws : Workstation | c in Dangerous and ws in c.workstation implies (Human not in ws.workers)
inv8 C:     │                                                   └──  all c : Component | all ws : Workstation | c in Dangerous and ws in c.workstation implies (all h : Human | h not in ws.workers)
inv9 S:     │                                                       └──  all ws, wsb : Workstation | (wsb in begin and ws = != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstaion | ws not in end implies w.succ
inv9 S:     │                                                           └──  all ws, wsb : Workstation | (wsb in begin and ws = != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstaion | ws not in end implies w.succ
inv9 S:     │                                                               └──  all ws, wsb : Workstation | (wsb in begin and ws = != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstaion | ws not in end implies w.succ
inv9 S:     │                                                                   └──  all ws, wsb : Workstation | (wsb in begin and ws != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstaion | ws not in end implies w.succ
inv9 S:     │                                                                       └──  all ws, wsb : Workstation | (wsb in begin and ws != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstation | ws not in end implies w.succ
inv9 T:     │                                                                           └──  all ws, wsb : Workstation | (wsb in begin and ws != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstation | ws not in end implies ws.succ
inv9 T:     │                                                                               └──  all ws, wsb : Workstation | (wsb in begin and ws != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstation | (ws not in end) implies ws.succ
inv9 C:     │                                                                                   └──  all ws, wsb : Workstation | (wsb in begin and ws != wsb) implies ws in wsb.^(succ) all ws : Workstation | ws not in ws.^(succ) all ws : Workstation | (ws not in end) implies one ws.succ
inv10 B:    │                                                                                       ├──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
TuafWa5SQMdsMoTLQ M:     │                                                                                       └──  user added theme options. same as previous submission
inv1 E:     ├──   
inv7 B:     │   └──  all c: Component | some d : Dangerous | d->c in parts implies c in Dangerous
inv7 B:     │       └──  all c: Component | some d : Dangerous | c->d in parts implies c in Dangerous
inv7 B:     │           └──  all c: Component | some d : Dangerous | c->d in parts implies c in Dangerous
inv5 C:     │               └──  all h : Human, r : Robot, w : Workstation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv6 E:     │                   └──   
inv7 B:     │                       └──  all c: Component | some d : Dangerous | c->d in parts implies c in Dangerous
inv5 C:     ├──  no (workers.Human & workers.Robot)
inv6 O:     │   └──  no (iden & ^parts)
inv7 O:     │       └──  parts.Dangerous in Dangerous
inv8 C:     │           └──  no (Human & Dangerous.workstation.workers)
inv10 B:    │               └──  parts in (workstation.~succ).~workstation
inv10 B:    │                   └──  parts :> Component in (workstation.~succ).~workstation
inv10 B:    │                       └──  parts :> Component in ^(workstation.~succ.~workstation)
inv10 B:    │                           └──  parts :> Component in ^(workstation.~succ.(~workstation :> Product))
mszSPKei3GWgeBLEf N:     │                               └──  user added extra characters to pred name
pFLRzwDzeWBa2Xzs9 N:     │                                   └──  user added extra characters to pred name
inv10 B:    │                                       └──  parts :> Component in ^((Component <: workstation ).~succ.(~workstation :> Component))
inv10 B:    │                                           └──  parts :> Component in ((Component <: workstation ).~succ.(~workstation :> Component))
inv10 B:    │                                               └──  parts :> Component in ^((Component <: workstation).succ.(~workstation :> Component))
inv10 B:    │                                                   └──  parts :> Component in ^((Component <: workstation).~succ.(~workstation :> Component))
inv10 B:    │                                                       └──  parts :> Component not in ^(workstation.succ.~workstation) + workstation.~workstation
inv10 O:    │                                                           └──  no (parts :> Component & ^(workstation.succ.~workstation) + workstation.~workstation)
inv10 B:    │                                                               └──  no (parts :> Component & (^(workstation.succ.~workstation) + workstation.~workstation))
inv10 S:    │                                                                   └──  no (parts :> Component & ^(workstation.succ.~workstation)
inv10 B:    │                                                                       └──  no (parts :> Component & ^(workstation.succ.~workstation))
inv10 S:    │                                                                           └──  no (parts :> Component & (^(workstation.succ.~workstation) + (Component <:workstation ).(~workstation :> Component))
inv10 B:    │                                                                               └──  no (parts :> Component & (^(workstation.succ.~workstation) + (Component <:workstation ).(~workstation :> Component)))
SRyF9sWNYwTzoRsoz N:     │                                                                                   └──  user added extra characters to pred name
inv10 B:    │                                                                                       └──  no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation)))
inv10 S:    │                                                                                           └──  no (parts :> Component & (Component->Component <: (workstation.~workstation)) + ^(workstation.succ.~workstation)))
inv10 S:    │                                                                                               └──  no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation))
inv10 B:    │                                                                                                   └──  no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation)))
inv10 S:    │                                                                                                       └──  no (parts :> Component & (workstation.~workstation + ^(workstation.succ).~workstation)))
inv10 B:    │                                                                                                           └──  no (parts :> Component & (workstation.~workstation + ^(workstation.succ).~workstation))
inv10 B:    │                                                                                                               └──  no (parts :> Component & (workstation.~workstation + workstation.^succ.~workstation))
inv10 B:    │                                                                                                                   └──  no (parts :> Component & (workstation.*succ.~workstation))
inv10 B:    │                                                                                                                       └──  no (parts :> Component & workstation.*succ.~workstation)
inv9 T:     │                                                                                                                           └──  begin.(^succ - ^(succ).end) = end
inv10 B:    │                                                                                                                               └──  no (parts :> Component & workstation.*succ.~workstation)
inv9 O:     │                                                                                                                                   └──  begin.(^succ - (^succ :> end)) = end
inv9 B:     │                                                                                                                                       └──  one (begin.^succ :> end)
inv9 T:     │                                                                                                                                           └──  one (begin.^succ :> end - iden)
inv9 B:     │                                                                                                                                               └──  one (begin.^succ :> end - begin)
inv9 U:     │                                                                                                                                                   └──  lone (begin.^succ :> end - begin)
inv9 B:     │                                                                                                                                                       └──  no (begin & end) and lone (begin.^succ :> end - begin)
inv9 B:     │                                                                                                                                                           └──  no (Workstation & begin & end) and lone (begin.^succ :> end - begin)
inv9 B:     │                                                                                                                                                               └──  no (Workstation & begin & end) and one (begin.^succ :> end - begin)
inv9 U:     │                                                                                                                                                                   └──  begin != end implies one (begin.^succ :> end - begin)
inv9 S:     │                                                                                                                                                                       └──  no (Workstations & begin & end) implies one (begin.^succ :> end - begin)
inv9 U:     │                                                                                                                                                                           └──  no (Workstation & begin & end) implies one (begin.^succ :> end - begin)
inv9 U:     │                                                                                                                                                                               └──  Workstation :> begin != Workstation :> end implies one (begin.^succ :> end - begin)
inv9 T:     │                                                                                                                                                                                   └──  (begin.^succ :> (end - begin))
inv9 B:     │                                                                                                                                                                                       └──  one (begin.^succ :> (end - begin))
inv9 U:     │                                                                                                                                                                                           └──  lone (begin.^succ :> (end - begin))
inv9 T:     │                                                                                                                                                                                               └──  lone (begin.^succ :> end - iden)
inv9 U:     │                                                                                                                                                                                                   └──  lone ((begin.^succ :> end) - begin)
inv9 U:     │                                                                                                                                                                                                       └──  lone ((begin.^succ :> (end + begin)) - begin)
inv9 B:     │                                                                                                                                                                                                           └──  one ((begin.^succ :> (end + begin)) - begin)
inv9 U:     │                                                                                                                                                                                                               └──  lone ((begin.^succ :> (end + begin)) - begin)
shdfy6DMoMSRgaESQ M:     │                                                                                                                                                                                                                   ├──  user added theme options. same as previous submission
inv9 B:     │                                                                                                                                                                                                                   └──  no (begin.^succ :> (Workstation - end))
inv9 B:     │                                                                                                                                                                                                                       └──  one (begin.^succ :> (Workstation - begin))
inv9 B:     │                                                                                                                                                                                                                           └──  lone (begin.^succ :> (Workstation - begin))
inv9 B:     │                                                                                                                                                                                                                               └──  begin.^succ = end
inv9 B:     │                                                                                                                                                                                                                                   └──  begin.^succ in end
inv9 B:     │                                                                                                                                                                                                                                       └──  begin.^succ - begin in end
inv9 U:     │                                                                                                                                                                                                                                           └──  begin.^succ - (Workstation - end) in end
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 S:     │   └──  Workstation one -> Worker some
inv2 S:     │       └──  workers in Workstation one -> Worker some
inv2 C:     │           └──  workers in Workstation one -> some Worker
inv3 C:     │               └──  workstation in Component -> one Workstation
inv1 C:     │                   └──  all w:Worker | w in Human + Robot
inv2 U:     │                       └──  workers in Workstation one -> Worker
inv2 C:     │                           └──  workers in Workstation one -> some Worker
inv3 C:     │                               └──  workstation in Component -> one Workstation
inv4 S:     │                                   └──  parts in Component -> some Product parts in Material -> no Product
inv4 T:     │                                       └──  parts in Component -> some Product parts in Material -> none Product
inv4 O:     │                                           └──  parts in Component -> some Product parts in Material -> lone Product
inv4 T:     │                                               └──  parts in Component -> some Product no parts in Material
inv4 C:     │                                                   └──  parts in Component -> some Product
inv4 U:     │                                                       └──  parts in Component -> Product
inv4 C:     │                                                           └──  parts in Component -> some Product
inv4 S:     │                                                               └──  c.parts != none no m.parts
inv4 C:     │                                                                   └──  all c: Component | c.parts != none all m: Material| no m.parts
inv5 T:     │                                                                       └──  workers != Human & Robot
inv5 T:     │                                                                           └──  workers not in Human & Robot
inv5 O:     │                                                                               └──  workers.Workstation not in Human & Robot
inv5 B:     │                                                                                   └──  workers.Worker not in Human & Robot
inv5 B:     │                                                                                       └──  workers.Worker not in Human + Robot
inv5 B:     │                                                                                           └──  Human + Robot not in workers.Worker
inv5 T:     │                                                                                               └──  workers != Human + Robot
inv5 C:     │                                                                                                   └──  no workers.Human & workers.Robot
inv6 U:     │                                                                                                       └──  all c:Component | c not in c.parts
inv6 C:     │                                                                                                           └──  all c:Component | c not in c.^parts
inv7 B:     │                                                                                                               └──  all c:Component | c.parts in Dangerous implies c in Dangerous
inv7 B:     │                                                                                                                   └──  all c:Component | c.^parts in Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                       └──  all c:Component | some c.^parts & Dangerous implies c in Dangerous
inv7 O:     │                                                                                                                           └──  all c:Component | some c.^parts & Dangerous iff c in Dangerous
inv7 O:     │                                                                                                                               └──  parts.Dangerous in Dangerous
inv8 S:     │                                                                                                                                   └──  all c: Dangerous, w: c.worstation.workers | w not in Human
inv8 S:     │                                                                                                                                       └──  all c: Dangerous, w: c.worstations.workers | w not in Human
inv8 C:     │                                                                                                                                           └──  all c: Dangerous, w: c.workstation.workers | w not in Human
inv8 C:     │                                                                                                                                               └──  all c:Dangerous | no c.workstation.workers & Human
inv8 C:     │                                                                                                                                                   └──  no Dangerous.workstation.workers & Human
inv9 C:     │                                                                                                                                                       └──  all w:Workstation-end | one w.succ no end.succ Workstation in begin.*succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 B:     │       └──  all w : Workstation, work : Worker | w->work in workers and (one wn : Workstation | wn->work in workers)
inv3 C:     │           └──  all c : Component | one w : Workstation | c->w in workstation
inv4 B:     │               └──  all c : Component, m : Material, p : Product, p1 : Product | (c in Product and p->p1 in parts) and (m in Product and p->p1 not in parts)
inv4 B:     │                   └──  all c : Component, m : Material, p : Product, p1 : Product, p2 : Product, p3 : Product | (c in Product and p->p1 in parts) and (m in Product and p2->p3 not in parts)
inv4 B:     │                       └──  all c : Component, m : Material | (c in Product and c->c in parts) and ( m in Product and m->m not in parts )
inv4 B:     │                           └──  all c : Component, m : Material | (c in Product and c->c in parts) and ( m in Product and m->m not in parts )
inv4 B:     │                               └──  all c : Component, c1 : Component, m : Material | (c in Product and c->c1 in parts) and ( m in Product and m->m not in parts )
inv4 B:     │                                   └──  all c : Component, c1 : Component, m : Material, m1 : Material | (c in Product and c->c1 in parts) and ( m in Product and m->m1 not in parts )
inv4 S:     │                                       └──  all c : Component, m : Material | (c in Product and c->c1 in parts) and ( m in Product and m->m not in parts )
inv4 B:     │                                           └──  all c : Component, m : Material | (c in Product and c->c in parts) and ( m in Product and m->m not in parts )
inv5 S:     │                                               └──  all w : Workstation, work : Workers | w->work in workers and work in Human implies work not in robots
inv5 S:     │                                                   └──  all w : Workstation, work : Workers | w->work in workers and work in Human implies work not in robots
inv5 S:     │                                                       └──  all w : Workstation, work : Worker | w->work in workers and work in Human implies work not in robots
inv5 U:     │                                                           └──  all w : Workstation, work : Worker | w->work in workers and work in Human implies work not in Robot
inv5 U:     │                                                               └──  all w : Workstation, work : Worker | (w->work in workers and work in Human implies work not in Robot) and (w->work in workers and work in Robot implies work not in Human)
inv5 S:     │                                                                   └──  all h : Human, r : Robot, w : Worksation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv5 C:     │                                                                       └──  all h : Human, r : Robot, w : Workstation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv5 C:     │                                                                           └──  all h : Human, r : Robot, w : Workstation | (w->h in workers implies w->r not in workers) and (w->r in workers implies w->h not in workers)
inv6 U:     │                                                                               └──  all c : Component, p : Product | c in Product and c->c not in parts
inv6 U:     │                                                                                   └──  all c : Component | c in Product and c->c not in parts
inv6 O:     │                                                                                       └──  all c : Component, p : Product | c in Product and c->p in parts and p not in Component
inv6 O:     │                                                                                           └──  all c : Component | no (c.parts)
inv6 O:     │                                                                                               └──  all c : Component, p : Product | c in Product and c->p in parts and p not in Component
inv6 B:     │                                                                                                   └──  all c : Component, p : Product | c in Product and c->p in parts implies p not in Component
inv6 B:     │                                                                                                       └──  all c : Component, p : Product | c in Product and c->p in parts
inv6 U:     │                                                                                                           └──  all c : Component | c->c not in parts
inv6 S:     │                                                                                                               └──  all c : Component, part : Product | c->part in parts and part not in Component
inv6 O:     │                                                                                                                   └──  all c : Component, pa : Product | c->pa in parts and pa not in Component
inv6 O:     │                                                                                                                       └──  all c : Component, pa : Product | c in Product and c->pa in parts and pa not in Component
inv6 B:     │                                                                                                                           └──  all c : Component, pa : Product |c->pa in parts implies pa not in Component
inv6 B:     │                                                                                                                               └──  all c : Component, pa : Product | c->pa in parts implies pa not in Component
inv6 U:     │                                                                                                                                   └──  all c : Component | c->c not in parts
inv6 U:     │                                                                                                                                       └──  all c : Component | c in Product and c->c not in parts
inv6 O:     │                                                                                                                                           └──  all c : Component, p : Product | c in Product and c->p in parts and p not in Component
inv6 U:     │                                                                                                                                               └──  all c : Component | c->c not in parts
dv344Gr2DuExENf7j M:     │                                                                                                                                                   └──  user added theme options. same as previous submission
4yMvtB93L4NBMi6gq M:     │                                                                                                                                                       └──  user added theme options. same as previous submission
kaJWAeihvQuJDafNi M:     │                                                                                                                                                           └──  user added theme options. same as previous submission
inv2 U:     ├──  some workers.Worker
inv2 B:     │   └──  some workers.Worker and lone Workstation.workers
inv2 B:     │       └──  lone workers.Worker and some Workstation.workers
inv2 U:     │           └──  some workers.Worker and some Workstation.workers
inv2 B:     │               └──  lone workers.Worker and some Workstation.workers
inv2 S:     │                   └──  all w : Worker | one workers.w and w: Workstation | some w.workers
inv2 U:     │                       └──  all w : Worker | one workers.w and all w: Workstation | some w.workers
inv2 C:     │                           └──  all w : Worker | one workers.w all w: Workstation | some w.workers
inv3 C:     │                               └──  all c: Component | one c.workstation
inv3 T:     │                                   └──  all c: Component | one c.Workstation
inv3 C:     │                                       └──  all c: Component | one c.workstation
inv4 S:     │                                           └──  no parts.Material and some parts.Components
inv4 B:     │                                               └──  no parts.Material and some parts.Component
inv4 S:     │                                                   └──  no Material.parts. and some parts.Component
inv4 B:     │                                                       └──  no Material.parts and some parts.Component
inv4 B:     │                                                           └──  no Material.~parts and some parts.Component
inv4 S:     │                                                               └──  parts in Component -> some Produt
inv4 C:     │                                                                   └──  parts in Component -> some Product
inv1 S:     ├──  all w : Workers | w in Robot or w in Human
inv1 C:     │   └──  all w : Worker | w in Robot or w in Human
inv2 T:     │       └──  all wb : Workstation | some Worker in wb
inv2 O:     │           └──  all wb : Workstation | some w : Worker | w in wb
inv2 U:     │               └──  all wb : Workstation | some w : Worker | w in wb.workers
inv2 S:     │                   └──  all wb : Workstation | some w : Worker | w in wb.workers Worker in wb.workers
inv2 B:     │                       └──  all wb : Workstation | some w : Worker | w in wb.workers all wb : Workstation | Worker in wb.workers
inv2 S:     │                           └──  None
inv2 T:     │                               └──  all wb : Workstation | some w : Worker | w in wb.workers all w : Worker | w in workers
inv2 T:     │                                   └──  all wb : Workstation | some w : Worker | w in wb.workers Worker in workers
inv2 T:     │                                       └──  all wb : Workstation | some w : Worker | w in wb.workers all w : Worker | w in workers
inv2 T:     │                                           └──  all wb : Workstation | some w : Worker | w in wb.workers all w : Worker | w in workers
inv2 U:     │                                               └──  all wb : Workstation | some w : Worker | w in wb.workers all w : Worker | w in Workstation.workers
inv2 U:     │                                                   └──  all wb : Workstation | some w : Worker | w in wb.workers
inv2 B:     │                                                       └──  all wb : Workstation | some w : Worker | w in wb.workers some wb : Workstation | all w : Worker | w in wb.workers
inv2 O:     │                                                           └──  all wb : Workstation | one w : Worker | w in wb.workers one wb : Workstation | all w : Worker | w in wb.workers
inv2 O:     │                                                               └──  all wb : Workstation | one w : Worker | Worker in wb.workers one wb : Workstation | all w : Worker | w in wb.workers
inv2 B:     │                                                                   └──  all wb : Workstation | Worker in wb.workers some wb : Workstation | all w : Worker | w in wb.workers
inv2 B:     │                                                                       └──  all wb : Workstation | Worker in wb.workers one wb : Workstation | all w : Worker | w in wb.workers
inv2 T:     │                                                                           └──  all wb : Workstation | wb.Worker one wb : Workstation | all w : Worker | w in wb.workers
inv2 O:     │                                                                               └──  all wb : Workstation | Worker in wb.workers one wb : Workstation | one w : Worker | w in wb.workers
inv2 B:     │                                                                                   └──  all wb : Workstation | Worker in wb.workers all wb : Workstation | one w : Worker | w in wb.workers
inv2 T:     │                                                                                       └──  all wb : Workstation | Worker in wb.workers one w : Worker | w in workers
inv2 T:     │                                                                                           └──  all wb : Workstation | Worker in wb.workers all w : Worker | w in workers
inv2 B:     │                                                                                               └──  all wb : Workstation | Worker in wb.workers all wb : Workstation | one w : Worker | w in wb.workers
inv2 B:     │                                                                                                   └──  all wb : Workstation | Worker in wb.workers all w : Worker | one wb : Workstation | w in wb.workers
inv2 C:     │                                                                                                       └──  all wb : Workstation | some wb.workers all w : Worker | one wb : Workstation | w in wb.workers
inv3 C:     │                                                                                                           └──  all c : Component | one wb : Workstation | c->wb in workstation
inv4 S:     │                                                                                                               └──  all c : Component | some c.parts all m : Materials | no m.parts
inv4 C:     │                                                                                                                   └──  all c : Component | some c.parts all m : Material | no m.parts
inv1 S:     ├──  all w : Work | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 S:     │       └──  (some w : Worker | all ws : Workstation | w in ws.workers) and (one ws : Workstation | all w : Worker | w2 in ws3.workers)
inv2 B:     │           └──  (some w : Worker | all ws : Workstation | w in ws.workers) and (one ws : Workstation | all w : Worker | w in ws.workers)
inv2 O:     │               └──  (some w : Worker | all ws : Workstation | w in ws.workers) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv2 C:     │                   └──  (all ws : Workstation | some w : Worker | w in ws.workers) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv3 C:     │                       └──  all c : Component | one w : Workstation | w in c.workstation
inv4 S:     │                           └──  all c : Components | all m : Material | all p : Product | c in p.parts and m not in p.parts
inv4 B:     │                               └──  all c : Component | all m : Material | all p : Product | c in p.parts and m not in p.parts
inv4 S:     │                                   └──  all c : Component | some p : Product | c in p.parts) and (all m : Material | no p : Product | p in m.parts
inv4 B:     │                                       └──  (all c : Component | some p : Product | c in p.parts) and (all m : Material | no p : Product | p in m.parts)
inv4 C:     │                                           └──  (all c : Component | some p : Product | p in c.parts) and (all m : Material | no p : Product | p in m.parts)
inv5 O:     │                                               └──  all w1,w2 : Worker | all ws : Workstation | w1 in Human and w2 in Robot implies ((w1 in ws.workers and w2 not in ws.workers) or (w1 not in ws.workers and w2 in ws.workers))
inv6 C:     │                                                   └──  all c : Component | c not in c.^(parts)
inv7 S:     │                                                       └──  all p : Product | c : Component | p in Dangerous and c in p.parts implies c in Dangerous
inv7 S:     │                                                           └──  all p : Product | c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv7 O:     │                                                               └──  all p : Product | all c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv8 O:     │                                                                   └──  all w : Worker | all c : Component | c in Dangerous implies w not in Human
inv8 O:     │                                                                       └──  all c : Component | all w : Worker | c in Dangerous implies w not in Human
inv8 B:     │                                                                           └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies w.workers not in Human
inv8 O:     │                                                                               └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies w.workers in Robot
inv9 T:     │                                                                                   └──  all w,wb : Workstation | wb in begin and w != wb implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 C:     │                                                                                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 T:     │                                                                                           └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 S:     │                                                                                               └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 S:     │                                                                                                   └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 T:     │                                                                                                       └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 T:     │                                                                                                           └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not int end implies one w.succ
inv9 C:     │                                                                                                               └──  all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                   └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv9 U:     ├──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)
inv9 U:     │   └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | w not in w.^(succ)
inv9 O:     │       └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | one w.succ
inv9 C:     │           └──  all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ) all w : Workstation | lone w.succ
inv1 C:     ├──  all w : Worker | w in Human or w in Robot
inv2 C:     │   └──  all ws : Workstation | some ws.workers all w : Worker | one ws : Workstation | w in ws.workers
inv2 C:     │       └──  all ws : Workstation | some ws.workers all w : Worker | one ws : Workstation | w in ws.workers
inv3 B:     │           └──  one ws: Workstation | ws in Component.workstation
inv3 C:     │               └──  all c: Component | one ws: Workstation | ws in c.workstation
inv4 C:     │                   └──  all p: Product | no p.parts implies p in Material all p: Product | some p.parts implies p in Component
inv5 E:     │                       └──   
inv4 C:     │                           └──  all p: Product | no p.parts implies p in Material all p: Product | some p.parts implies p in Component
inv5 T:     │                               └──  all w1,w2: Worker , ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 T:     │                                   └──  all w1,w2: Worker , ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 S:     │                                       └──  all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 S:     │                                           └──  all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv5 S:     │                                               └──  all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv5 O:     │                                                   └──  all w1,w2: Worker | all ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv6 U:     │                                                       └──  all c: Product | c in Component implies c not in c.parts
inv6 C:     │                                                           └──  all c: Product | c in Component implies c not in c.^(parts)
inv7 C:     │                                                               └──  all c: Component , p: Product | p in c.parts and p in Dangerous implies c in Dangerous
inv8 O:     │                                                                   └──  all c: Component , ws: Workstation | c in Dangerous and ws in c.workstation implies (all w: Worker | w in ws.workers implies w in Robot)
inv9 S:     │                                                                       └──  all ws: Workstation | w not in w.^(succ) all ws: Workstation | w not in end implies one ws.succ all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ)
inv9 C:     │                                                                           └──  all ws: Workstation | ws not in ws.^(succ) all ws: Workstation | ws not in end implies one ws.succ all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ)
inv10 B:    │                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv6 U:     ├──  all c:Component | c->c not in parts
inv6 T:     │   └──  all c:Component | c->c not in c.*parts
inv6 T:     │       └──  all c:Component | c->c not in c.(*parts)
inv6 T:     │           └──  all c:Component | c->c not in c.parts
inv6 S:     │               └──  all c:Component | c->c not in c*.parts
inv6 S:     │                   └──  all c:Component | c->c not in c^.parts
inv6 T:     │                       └──  all c:Component | c->c not in *(c.parts)
inv6 T:     │                           └──  all c:Component | c->c not in *(c.parts)
inv6 T:     │                               └──  all c:Component | c->c not in (c.*parts)
inv6 T:     │                                   └──  all c:Component | c->c not in ^(c.parts)
inv6 T:     │                                       └──  all c:Component | c->c not in c.parts
inv6 U:     │                                           └──  all c:Component | c->c not in parts
inv6 S:     │                                               └──  all c:Component | c->c not in *.parts
inv6 U:     │                                                   └──  all c:Component | c->c not in parts
inv6 S:     │                                                       └──  all c:Component | c->c not in *.parts
inv6 T:     │                                                           └──  all c:Component | c->c not in c.parts
inv6 U:     │                                                               └──  all c:Component | c not in c.parts
inv6 O:     │                                                                   └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                       └──  all c:Component | c not in c.^parts
inv6 O:     │                                                                           └──  all c:Component | c not in c.*parts
inv6 C:     │                                                                               └──  all c:Component | c->c not in ^parts
inv7 O:     │                                                                                   └──  all c:Component | c in ^parts.Dangerous  => c in Dangerous
inv7 B:     │                                                                                       └──  all c:Component | c in ^parts.Dangerous
inv7 O:     │                                                                                           └──  all c:Component | c in *parts.Dangerous => c in Dangerous
inv7 O:     │                                                                                               └──  all c:Component | c in ^parts.Dangerous => c in Dangerous
inv8 T:     │                                                                                                   └──  all c:Component | c in Dangerous => Human not in workers.workstation
inv8 T:     │                                                                                                       └──  all c:Component | c in Dangerous => Human not in c->workstation.workers
inv8 T:     │                                                                                                           └──  all c:Component | c in Dangerous => Human not in (c->workstation).workers
inv8 T:     │                                                                                                               └──  all c:Component, ws:Workstation | c in Dangerous and c->ws in workstation => Human not in workers
inv8 S:     │                                                                                                                   └──  all c:Component, ws:Workstation | c in Dangerous and c->ws in workstation => (not some h:Human h in workers)
inv8 T:     │                                                                                                                       └──  all c:Component, ws:Workstation | c in Dangerous and c->ws in workstation => (not some h:Human| h in workers)
inv8 U:     │                                                                                                                           └──  all c:Component, ws:Workstation | c in Dangerous and c->ws in workstation => (not some h:Human| h->ws in workers)
inv8 C:     │                                                                                                                               └──  all c:Component, ws:Workstation | c in Dangerous and c->ws in workstation => (not some h:Human| ws->h in workers)
inv9 S:     │                                                                                                                                   └──  disj all ws1, ws2:Workstation | ws1->ws2 in succ => not some ws3:Workstation | ws3->ws2 in succ
inv9 S:     │                                                                                                                                       └──  disj all ws1, ws2:Workstation | ws1->ws2 in succ => not some ws3:Workstation | ws3->ws2 in succ
inv9 B:     │                                                                                                                                           └──  all disj ws1, ws2:Workstation | ws1->ws2 in succ => not some ws3:Workstation | ws3->ws2 in succ
inv9 B:     │                                                                                                                                               └──  all disj ws1, ws2:Workstation | ws1->ws2 in succ => not some ws3:Workstation | ws3->ws2 in succ all disj ws1, ws2:Workstation | ws1->ws2 in succ and (not some ws3:Workstation | ws3->ws1 in succ) => ws1 in begin
inv9 B:     │                                                                                                                                                   └──  all disj ws1, ws2:Workstation | ws1->ws2 in succ => not some ws3:Workstation | ws3->ws2 in succ all disj ws1, ws2:Workstation | ws1->ws2 in succ and (not some ws3:Workstation | ws3->ws1 in succ) => ws1 in begin all disj ws1, ws2:Workstation | ws1->ws2 in succ and (not some ws3:Workstation | ws2->ws3 in succ) => ws2 in end
inv8 U:     │                                                                                                                                                       └──  all c:Component | c in Dangerous  => (workers . workstation . c) in Robot
inv8 U:     │                                                                                                                                                           └──  all c:Component | c in Dangerous  => workers . workstation . c in Robot
inv8 O:     │                                                                                                                                                               └──  all c:Component | c in Dangerous  => c.workstation.workers in Robot
inv9 C:     │                                                                                                                                                                   └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv9 U:     │                                                                                                                                                                       └──  succ in Workstation lone -> lone Workstation Workstation in (begin . *succ)
inv9 U:     │                                                                                                                                                                           └──  succ in Workstation lone -> lone Workstation  no (end . succ)
inv9 U:     │                                                                                                                                                                               └──  Workstation in (begin . *succ) no (end . succ)
inv9 U:     │                                                                                                                                                                                   └──  Workstation in (begin . *succ) no (end . succ)
inv9 C:     │                                                                                                                                                                                       └──  succ in Workstation  -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv9 C:     │                                                                                                                                                                                           └──  succ in Workstation lone  -> lone Workstation Workstation in (begin . *succ) no (end . succ)
inv10 T:    │                                                                                                                                                                                               └──  all c:Component, p:Product | (c->p in parts) => (Workstation.c) in (p.workstation.^succ)
inv10 T:    │                                                                                                                                                                                                   └──  all c:Component, p:Product | (c->p in parts) => (c.Workstation) in (p.workstation.^succ)
inv10 T:    │                                                                                                                                                                                                       └──  all c:Component, p:Product | (c->p in parts) => (c.Workstation) in (p.workstation.^succ)
inv10 B:    │                                                                                                                                                                                                           └──  all c:Component, p:Product | (c->p in parts) => (c.workstation) in (p.workstation.^succ)
inv10 B:    │                                                                                                                                                                                                               └──  all c:Component, p:Product | (p in c . parts) => (c.workstation) in (p.workstation.^succ)
inv10 B:    │                                                                                                                                                                                                                   └──  all c : Component, p : Product | (p in c . parts) => (c . workstation) in (p . workstation . ^succ)
inv10 B:    │                                                                                                                                                                                                                       └──  all c : Component, p : Product | (p in c . parts) => (p . workstation) in (c . workstation . ^succ)
inv1 C:     ├──  all w: Worker | w in Human or w in Robot
inv2 S:     │   └──  all ws: Workstation, some w: Worker | w in ws all w: Worker | w in Workstation
inv1 C:     │       └──  all w: Worker | w in Human or w in Robot
inv2 O:     │           └──  all ws: Workstation | some w: Worker | w in ws all w: Worker | w in Workstation
inv2 O:     │               └──  all ws: Workstation | some w: Worker | w in ws
inv2 U:     │                   └──  all ws: Workstation | some w: Worker | w in ws.workers
inv2 O:     │                       └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | w in Workstation
inv2 U:     │                           └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | w in Workstation.workers
inv2 S:     │                               └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | w in one Workstation.workers
inv2 T:     │                                   └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | w in (one Workstation).workers
inv2 S:     │                                       └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker, one ws: Workstation | w in ws.workers
inv2 C:     │                                           └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv2 C:     │                                               └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 C:     │                                                   └──  all c: Component | one ws: Workstation | ws in c.workstation
inv3 C:     │                                                       └──  all c: Component | one ws: Workstation | ws in c.workstation
inv4 U:     │                                                           └──  all c: Component | some c.parts
inv4 C:     │                                                               └──  all c: Component | some c.parts all m: Material | no m.parts
inv4 B:     │                                                                   └──  some (Component.parts)  no (Material.parts)
inv4 C:     │                                                                       └──  all c: Component | some c.parts  no (Material.parts)
inv4 C:     │                                                                           └──  all c: Component | some c.parts  no (Material.parts)
inv5 O:     │                                                                               └──  all ws: Workstation, w1, w2: Worker | w1 != w2 and w1 in ws.workers and w2 in ws.workers => (w1 in Human and w2 in Human) or (w1 in Robot and w2 in Robot)
inv5 O:     │                                                                                   └──  all ws: Workstation, w1, w2: Worker | w1 != w2 and w1 in ws.workers and w2 in ws.workers => (w1 in Human and w2 in Human) or (w1 in Robot and w2 in Robot)
inv6 C:     │                                                                                       └──  all c: Component | c not in c.^parts
inv7 O:     │                                                                                           └──  all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 S:     │                                                                                               └──  all c: Components | c in Dangerous => Humans not in c.workstation
inv8 S:     │                                                                                                   └──  all c: Component | c in Dangerous => Humans not in c.workstation
inv7 O:     │                                                                                                       └──  all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 T:     │                                                                                                           └──  all c: Component | c in Dangerous => (Human & c.workstation)
inv8 T:     │                                                                                                               └──  all c: Component | c in Dangerous => (Human & c.workstation.workers)
inv7 O:     │                                                                                                                   └──  all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 C:     │                                                                                                                       └──  all c: Component | c in Dangerous => no (Human & c.workstation.workers)
inv9 U:     │                                                                                                                           └──  all w: Workstation | w not in w.^succ
inv9 U:     │                                                                                                                               └──  all w: Workstation | w not in w.^succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 C:     │                                                                                                                                   └──  all w: Workstation | w not in w.^succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                                                                                                       └──  all w: Workstation | w not in w.^succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 U:     │                                                                                                                                           └──  all w: Workstation | w not in w.^succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in end implies some w.succ
inv9 U:     │                                                                                                                                               └──  all w: Workstation | w not in w.^succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 C:     │                                                                                                                                                   └──  all w: Workstation | w not in w.^succ all w, wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                                                       └──  all c1,c2 : Component, w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
KMqiF6wnFdRo8kcdj M:     │                                                                                                                                                           └──  user added theme options. same as previous submission
inv1 S:     ├──  all
inv1 E:     │   └──   
inv1 S:     │       └──  all w in Worker | w in Human or w in Robot
inv1 C:     │           └──  all w : Worker | w in Human or w in Robot
X7F2nXm7mYC7c5Bsv M:     │               └──  user added theme options. same as previous submission
inv1 C:     │                   └──  all w : Worker | w in Human or w in Robot
inv2 B:     │                       └──  all ws: Workstation, w: Worker | some ws.workers  and w in ws.workers
inv2 B:     │                           └──  all ws: Workstation, w: Worker | ws.workers not in none and w in ws.workers
inv1 C:     ├──  all w: Worker | w in Human or w in Robot
inv2 O:     │   └──  all ws: Workstation | one w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv2 O:     │       └──  all ws: Workstation | one w: Worker | w in ws.workers and all w: Worker | one ws: Workstation | w in ws.workers
inv2 O:     │           └──  (all ws: Workstation | one w: Worker | w in ws.workers) and (all w: Worker | one ws: Workstation | w in ws.workers)
inv2 C:     │               └──  all ws: Workstation | some w: Worker | w in ws.workers all w: Worker | one ws: Workstation | w in ws.workers
inv3 S:     │                   └──  all com: Component | one ws: WorkStation | ws in com.workstation
inv3 C:     │                       └──  all com: Component | one ws: Workstation | ws in com.workstation
inv4 O:     │                           └──  all com: Component | one p: Product | p in com.parts all m: Material | no p: Product | p in m.parts
inv4 C:     │                               └──  all com: Component | some p: Product | p in com.parts all m: Material | no p: Product | p in m.parts
inv4 C:     │                                   └──  all com: Component | some p: Product | p in com.parts all m: Material | no p: Product | p in m.parts
inv5 C:     │                                       └──  all h: Human | all r: Robot | all ws: Workstation | h in ws.workers implies r not in ws.workers
inv6 U:     │                                           └──  all com: Component | com not in com.parts
inv6 C:     │                                               └──  all com: Component | com not in com.^(parts)
inv6 U:     │                                                   └──  all com: Component | com not in com.(parts)
inv6 C:     │                                                       └──  all com: Component | com not in com.^(parts)
inv7 B:     │                                                           └──  all com : Component | one p : Product | p in Dangerous and p in com.parts implies com in Dangerous
inv7 S:     │                                                               └──  all com : Component | one p : Product | p in Dangerous and p in com..^(parts) implies com in Dangerous
inv7 B:     │                                                                   └──  all com : Component | one p : Product | p in Dangerous and p in com.^(parts) implies com in Dangerous
inv7 O:     │                                                                       └──  all com : Component | all p : Product | p in Dangerous and p in com.^(parts) implies com in Dangerous
inv8 S:     │                                                                           └──  all p: Component | all h: Human | all ws: Workstation p in Dangerous and h in ws.workers implies ws not in p.workstation
inv8 S:     │                                                                               └──  all p: Component | all h: Human | all ws: Workstation p in Dangerous and h in ws.workers implies ws not in p.workstation
inv8 C:     │                                                                                   └──  all p: Component | all h: Human | all ws: Workstation | p in Dangerous and h in ws.workers implies ws not in p.workstation
inv9 S:     │                                                                                       └──  all w1, w2: Workstations | (w1 != w2 and w1 in begin) implies w2 in w1.^(succ) all w: Workstation | w not in w.^(succs) all w: Workstation | w not in end implies one w.succ
inv9 S:     │                                                                                           └──  all w1, w2: Workstation | (w1 != w2 and w1 in begin) implies w2 in w1.^(succ) all w: Workstation | w not in w.^(succs) all w: Workstation | w not in end implies one w.succ
inv8 C:     │                                                                                               └──  all p: Component | all h: Human | all ws: Workstation | p in Dangerous and h in ws.workers implies ws not in p.workstation
inv1 S:     ├──  all w : Workers | w in Human or w in Robot
inv1 C:     │   └──  all w : Worker | w in Human or w in Robot
inv2 U:     │       └──  all ws1,ws2 : Workstation | all w1 : Worker | w1 in ws1.workers and w1 in ws2.workers implies ws1=ws2 all ws : Workstation | some w : Worker | w in ws.workers
inv2 U:     │           └──  all ws1,ws2 : Workstation | all w1 : Worker | w1 in ws1.workers and w1 in ws2.workers implies ws1=ws2 all ws : Workstation | some ws.workers
inv2 C:     │               └──  all ws1,ws2 : Workstation | all w1 : Worker | w1 in ws1.workers and w1 in ws2.workers implies ws1=ws2 all ws : Workstation | some ws.workers all w : Worker | w in Workstation.workers
inv3 C:     │                   └──  all c : Component | one c.workstation
inv4 S:     │                       └──  all m : Material | no m.parts all c : Component | some m.parts
inv4 C:     │                           └──  all m : Material | no m.parts all c : Component | some c.parts
inv5 O:     │                               └──  all h : Human | all r : Robot | all ws : Workstation | h in ws.workers <=> r not in ws.workers
inv6 U:     │                                   └──  all c1,c2 : Component | c1 in c2.parts implies c1!=c2
inv6 C:     │                                       └──  all c : Component | c not in c.^parts
inv7 O:     │                                           └──  all c : Component | all d : Dangerous | d in c.^parts implies c in Dangerous
inv8 C:     │                                               └──  all d : Dangerous | no d.workstation.workers&Human
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 E:     │   └──   
inv1 C:     │       └──  all w:Worker | w in Human or w in Robot
inv2 O:     │           └──  all ws: Workstation | #ws.workers > 0 all w: Worker | one ~workers.w
inv2 O:     │               └──  all ws: Workstation | some ws.workers all w: Worker | one ~workers.w
inv2 C:     │                   └──  all ws: Workstation | some ws.workers all w: Worker | one workers.w
inv3 C:     │                       └──  all c: Component | one c.workstation
inv4 S:     │                           └──  all c : Component | some c.parts all m : Material | no c.parts
inv4 C:     │                               └──  all c : Component | some c.parts all m : Material | no m.parts
inv5 S:     │                                   └──  all w : Workstation | all w.workers in Human or all w.workers in Robot
inv5 O:     │                                       └──  all w : Workstation |  w.workers in Human or  w.workers in Robot
inv6 S:     │                                           └──  all c : Component ! c not in c.parts
inv6 U:     │                                               └──  all c : Component | c not in c.parts
inv6 T:     │                                                   └──  all c : Component | c not in ^c.parts
inv6 C:     │                                                       └──  all c : Component | c not in c.^parts
inv7 T:     │                                                           └──  all c : Component | some c.^parts in Dangerous implies c in Dangerous
inv7 C:     │                                                               └──  all c : Component | all p : Product | p in Dangerous and p in c.parts implies c in Dangerous
inv8 B:     │                                                                   └──  all c : Component, w : c.workstation | c in Dangerous
inv8 T:     │                                                                       └──  all c : Component, w : c.workstation | c in Dangerous implies no Human in w.workers
inv8 B:     │                                                                           └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies Human not in w.workers
inv8 T:     │                                                                               └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies no Human in w.workers
inv8 O:     │                                                                                   └──  all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies w.workers in Robot
inv9 S:     │                                                                                       └──  all b, w in Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w in Workstation | w no in end implies some w.succ
inv9 S:     │                                                                                           └──  all b, w in Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w in Workstation | w no in end implies one w.succ
inv9 S:     │                                                                                               └──  all b, w in Workstation | (b in begin and b != w) implies w in b.^succ all w : Workstation | w not in w.^succ all w in Workstation | w no in end implies some w.succ
inv9 C:     │                                                                                                   └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 S:     │                                                                                                       └──  all b, w in Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w : Workstation | w no in end implies somee w.succ
inv9 S:     │                                                                                                           └──  all b, w in Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w : Workstation | w no in end implies some w.succ
inv9 S:     │                                                                                                               └──  all b, w : Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w : Workstation | w no in end implies some w.succ
inv9 U:     │                                                                                                                   └──  all b, w : Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies some w.succ
inv9 C:     │                                                                                                                       └──  all b, w : Workstation | b in begin and b != w implies w in b.^succ all w : Workstation | w not in w.^succ all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                           └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv8 C:     ├──  all c : Component | all w: Workstation | c in Dangerous and w in c.workstation implies (all h : Human | h not in w.workers)
inv9 T:     │   └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in succ
inv9 T:     │       └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in succ
inv9 T:     │           └──  one w : Workstation | w in end and no w.succ one w : Workstation |  w in begin and w not in succ
inv9 U:     │               └──  one w : Workstation | w in end and no w.succ one w : Workstation |  w in begin and w not in Workstation.succ
inv9 O:     │                   └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w : Workstation | one wb : begin | w in wb.^(succ)
inv9 O:     │                       └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w : Workstation | one wb : begin | w!=wb and w in wb.^(succ)
inv9 O:     │                           └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w : Workstation | one wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 U:     │                               └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 U:     │                                   └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ)
inv9 C:     │                                       └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                           └──  one w : Workstation | w in end and no w.succ one w : Workstation | w in begin and w not in Workstation.succ  all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                               └──  one w : Workstation | w in begin and w not in Workstation.succ all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                   └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)  all w : Workstation | w not in end implies one w.succ
inv9 U:     │                                                           └──  all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                                                               └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                   └──  all c,c2 : Component | all w : Workstation | w in c.workstation and c2 in c.^(parts) implies c in c2.^(parts)
inv10 E:    │                                                                       └──   
inv10 B:    │                                                                           └──  all c,c2 : Component | all w,w2 : Workstation | w in c.workstation and c2 in c.^(parts) and w2 in c2.workstation implies w in w2.^(succ)
inv10 B:    │                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv1 C:     │                                                                                   └──  all w : Worker | w in Human or w in Robot
inv2 C:     │                                                                                       └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv3 C:     │                                                                                           └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │                                                                                               └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 O:     │                                                                                                   └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 C:     │                                                                                                       └──  all c : Component | c not in c.^(parts)
inv7 O:     │                                                                                                           └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 C:     │                                                                                                               └──  all c : Component | all w: Workstation | c in Dangerous and w in c.workstation implies (all h : Human | h not in w.workers)
inv9 C:     │                                                                                                                   └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                       └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv1 C:     │                                                                                                                           └──  all w : Worker | w in Human or w in Robot
inv2 C:     │                                                                                                                               └──  (all ws : Workstation | some w : Worker | ws->w in workers) and (all w : Worker | one ws : Workstation | ws->w in workers)
inv3 C:     │                                                                                                                                   └──  all c : Component | one ws : Workstation | c->ws in workstation
inv4 C:     │                                                                                                                                       └──  (all c : Component | some p : Product | c->p in parts) and (all m : Material | no p : Product | m->p in parts)
inv5 O:     │                                                                                                                                           └──  all ws : Workstation | all w1,w2 : Worker | (ws->w1 in workers and ws->w2 in workers and w1 in Human) implies (w2 in Human)
inv6 C:     │                                                                                                                                               └──  all c : Component | c not in c.^(parts)
inv7 O:     │                                                                                                                                                   └──  all c : Component | all p : Product | p in Dangerous and p in c.^(parts) implies c in Dangerous
inv8 C:     │                                                                                                                                                       └──  all c : Component | all w: Workstation | c in Dangerous and w in c.workstation implies (all h : Human | h not in w.workers)
inv9 C:     │                                                                                                                                                           └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv10 B:    │                                                                                                                                                               └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv3 C:     ├──  all c: Component | one c.workstation
inv4 S:     │   └──  all c: Component | 	some c.parts all m: material | no m.parts
inv4 C:     │       └──  all c: Component | 	some c.parts all m: Material | no m.parts
inv5 C:     │           └──  all w: Workstation, h: Human, r: Robot | w->h in workers => w->r !in workers
inv6 T:     │               └──  all c: Component | c->c !in c.parts
inv6 B:     │                   └──  all c: Component | c.parts = Component - c
inv6 S:     │                       └──  c : Component | c in ~c.^parts
inv6 S:     │                           └──  c : Component | c in c.^parts
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv2 B:     │   └──  all w:Workstation, p:Worker | p in w.workers
inv1 U:     ├──  all x : Worker | no x & Human or no x & Robot
inv1 C:     │   └──  all x : Worker | one x & Human or one x & Robot
inv2 U:     │       └──  all x : Workstation | some x.workers all x : Worker | one x & Workstation.workers
inv2 B:     │           └──  all x : Workstation | some x.workers all x : Worker, y : Workstation | one x & y.workers
inv2 U:     │               └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one x & y.workers
inv2 U:     │                   └──  all x : Workstation | some x.workers all x : Worker | one x & Workstation.workers
inv2 S:     │                       └──  all x : Workstation | some x.workers all x : Worker, one y : Workstation | one x & y.workers
inv2 S:     │                           └──  all x : Workstation | some x.workers all x : Worker, some y : Workstation | one x & y.workers and no x & (Workstation-y).workers
inv2 C:     │                               └──  all x : Workstation | some x.workers all x : Worker|  some y : Workstation | one x & y.workers and no x & (Workstation-y).workers
inv2 C:     │                                   └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one x & y.workers and no x & (Workstation-y).workers
inv3 C:     │                                       └──  all x : Component | some y : Workstation | one x.workstation & y and no x.workstation & (Workstation-y)
inv3 O:     │                                           └──  all x : Component | some y : Workstation | one x.workstation & y & x.workstation & (Workstation-y)
inv3 C:     │                                               └──  all x : Component | some y : Workstation | one x.workstation & y and no x.workstation & (Workstation-y)
inv4 S:     │                                                   └──  all x : Components |
inv4 S:     │                                                       └──  all x : Components |
inv4 S:     │                                                           └──  all x : Components |
inv4 S:     │                                                               └──  all x : Components |
inv3 C:     │                                                                   └──  all x : Component | some y : Workstation | one x.workstation & y + x.workstation & (Workstation-y)
inv2 U:     │                                                                       └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one x & y.workers + x & (Workstation-y).workers
inv2 U:     │                                                                           └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one x & y.workers + (x & (Workstation-y).workers)
inv2 U:     │                                                                               └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one (x & y.workers) + (x & (Workstation-y).workers)
inv2 C:     │                                                                                   └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one (x & y.workers) and no (x & (Workstation-y).workers)
inv2 U:     │                                                                                       └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one (x & y.workers) + (x & (Workstation-y).workers)
inv4 S:     │                                                                                           └──  all x : Components |
inv3 U:     │                                                                                               └──  all x : Component | some y : Workstation | one x.workstation & y - x.workstation & (Workstation-y)
inv2 C:     │                                                                                                   └──  all x : Workstation | some x.workers all x : Worker | some y : Workstation | one (x & y.workers) - (x & (Workstation-y).workers)
inv3 U:     │                                                                                                       └──  all x : Component | some y : Workstation | one (x.workstation & y) - x.workstation & (Workstation-y)
inv3 U:     │                                                                                                           └──  all x : Component | some y : Workstation | one (x.workstation & y) - (x.workstation & (Workstation-y))
inv3 C:     │                                                                                                               └──  all x : Component | some y : Workstation | one (x.workstation & y) + (x.workstation & (Workstation-y))
inv4 S:     │                                                                                                                   └──  all x : Components | some x.parts all x : Material | no x.parts
inv4 C:     │                                                                                                                       └──  all x : Component | some x.parts all x : Material | no x.parts
inv5 U:     │                                                                                                                           └──  all x : Workstation | no x.workers & Human & Robot
inv5 B:     │                                                                                                                               └──  all x : Workstation | some x.workers & Human or some x.workers & Robot
inv5 C:     │                                                                                                                                   └──  all x : Workstation | no x.workers & Human or no x.workers & Robot
inv6 U:     │                                                                                                                                       └──  all x : Component | no x.parts & x
inv6 U:     │                                                                                                                                           └──  all x : Component | one x - x.parts
inv6 B:     │                                                                                                                                               └──  all x : Component | one x.^parts+x
inv6 U:     │                                                                                                                                                   └──  all x : Component | no x & x.parts
inv6 T:     │                                                                                                                                                       └──  all x : Component | no x & x.^(x.parts)
inv6 C:     │                                                                                                                                                           └──  all x : Component | no x & x.^(parts)
inv7 C:     │                                                                                                                                                               └──  all x : Component | no x.parts & Dangerous or x in Dangerous
inv7 C:     │                                                                                                                                                                   └──  all x : Component | no x.parts & Dangerous or one x & Dangerous
cf5qbLNqmBJf2rXt4 M:     │                                                                                                                                                                       ├──  user added theme options. same as previous submission
sFzCJztQCS7DCcgXe M:     │                                                                                                                                                                       └──  user added theme options. same as previous submission
inv8 B:     │                                                                                                                                                                           └──  no Dangerous.parts.workstation.workers & Human
inv8 B:     │                                                                                                                                                                               └──  no Dangerous.parts-Material.workstation.workers & Human
inv8 T:     │                                                                                                                                                                                   └──  no Dangerous.(parts-Material).workstation.workers & Human
inv8 B:     │                                                                                                                                                                                       └──  no (Dangerous.parts-Material).workstation.workers & Human
inv8 C:     │                                                                                                                                                                                           └──  no (Dangerous & Component).workstation.workers & Human
inv9 T:     │                                                                                                                                                                                               └──  one Workstation.^Workstation.succ
inv9 T:     │                                                                                                                                                                                                   └──  one ^Workstation.succ
inv9 T:     │                                                                                                                                                                                                       └──  one begin.(^begin.succ).end
inv9 T:     │                                                                                                                                                                                                           └──  one begin.(^succ).end
inv9 S:     │                                                                                                                                                                                                               └──  one begin.^(w : Workstation | some w.succ).end
inv9 S:     │                                                                                                                                                                                                                   └──  one begin.^(w : Workstation | some w.succ)
inv9 S:     │                                                                                                                                                                                                                       └──  ^(w : Workstation | some w.succ)
inv9 S:     │                                                                                                                                                                                                                           └──  ^w.succ
inv9 T:     │                                                                                                                                                                                                                               └──  ^Workstation.succ
inv9 T:     │                                                                                                                                                                                                                                   └──  ^begin.succ
inv9 T:     │                                                                                                                                                                                                                                       └──  begin.^succ
inv9 T:     │                                                                                                                                                                                                                                           └──  one begin.^succ.end
inv9 T:     │                                                                                                                                                                                                                                               └──  one begin.^(begin.succ.end)
inv9 T:     │                                                                                                                                                                                                                                                   └──  one begin.^(succ.end)
inv9 T:     │                                                                                                                                                                                                                                                       └──  one begin.^({ w:Workstation | some succ.w
inv9 T:     │                                                                                                                                                                                                                                                           └──  one begin.^{some w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                               └──  one begin.^{w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                                   └──  some w : Workstation | one begin.^{y : Workstation | one w.succ.y
inv9 T:     │                                                                                                                                                                                                                                                                       └──  one begin.^{w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                                           └──  one begin.^{w,z : Workstation | one w.succ.z
inv9 T:     │                                                                                                                                                                                                                                                                               └──  one begin.^{all w,z : Workstation | one w.succ.z
inv9 T:     │                                                                                                                                                                                                                                                                                   └──  one begin.^{all w,z : Workstation | one w.succ.z
inv9 T:     │                                                                                                                                                                                                                                                                                       └──  one begin.^{w,z : Workstation | one w.succ.z
inv9 T:     │                                                                                                                                                                                                                                                                                           └──  one begin.^{w,z : Workstation | one w.succ.z
inv9 T:     │                                                                                                                                                                                                                                                                                               └──  one begin.^{w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                                                                   └──  one begin.^{w : Workstation | some succ.w
inv9 T:     │                                                                                                                                                                                                                                                                                                       └──  end in begin.^{w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                                                                           └──  begin in ^{w : Workstation | one w.succ
inv9 T:     │                                                                                                                                                                                                                                                                                                               └──  one begin.^{w : Workstation | one succ.w
inv9 T:     │                                                                                                                                                                                                                                                                                                                   └──  one begin.^succ.Workstation
inv9 T:     │                                                                                                                                                                                                                                                                                                                       └──  one begin.^succ.Workstation.end
inv9 T:     │                                                                                                                                                                                                                                                                                                                           └──  one begin.^(succ.Workstation).end
inv9 T:     │                                                                                                                                                                                                                                                                                                                               └──  one w : Workstation | begin.^(succ.w).end
inv9 T:     │                                                                                                                                                                                                                                                                                                                                   └──  one w : Workstation | begin.^succ.end
inv9 T:     │                                                                                                                                                                                                                                                                                                                                       └──  all x : Workstation | one x.succ one begin.^succ.end
inv9 T:     │                                                                                                                                                                                                                                                                                                                                           └──  all x : Workstation | one x.succ begin.^succ.end
inv9 T:     │                                                                                                                                                                                                                                                                                                                                               └──  all x : Workstation | one x.succ begin.(^succ).end
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                   └──  all x : Workstation | one x.succ end in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                       └──  all x : Workstation | lone x.succ end in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                           └──  all x : Workstation | one x.succ end in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                               └──  all x : Workstation-end | one x.succ all x : Workstation | begin not in x.succ end in begin.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Workstation | one x.succ no end.succ no begin & (Workstation-begin).succ end in begin.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                       └──  all x : Workstation | one x.succ  no end.succ  no begin & (Workstation-begin).succ  end in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                           └──  all x : Workstation | lone x.succ  no end.succ  no begin & (Workstation-begin).succ  end in begin.^succ
inv9 O:     │                                                                                                                                                                                                                                                                                                                                                                               └──  all x : Workstation | one x.succ  no end.succ  no begin & (Workstation-begin).succ  end in begin.^succ
inv9 B:     │                                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Workstation-end | one x.succ  no end.succ  no begin & (Workstation-begin).succ  end in begin.^succ
inv9 U:     │                                                                                                                                                                                                                                                                                                                                                                                       └──  all x : Workstation-end | one x.succ  no end.succ  no begin & (Workstation-begin).succ  end in begin.*succ
inv9 C:     │                                                                                                                                                                                                                                                                                                                                                                                           └──  all x : Workstation-end | one x.succ  no end.succ  no begin & (Workstation-begin).succ  Workstation in begin.*succ
inv9 C:     │                                                                                                                                                                                                                                                                                                                                                                                               └──  all x : Workstation-end | one x.succ  no end.succ  no succ.begin  Workstation in begin.*succ
inv10 S:    │                                                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Component | x.parts.workstation not in x.*workstations
inv10 S:    │                                                                                                                                                                                                                                                                                                                                                                                                       └──  all x : Component | x.parts.workstations not in x.*workstations
j78HQSThvHd2pG9MN M:     │                                                                                                                                                                                                                                                                                                                                                                                                           ├──  user added theme options. same as previous submission
LKCkbATHpQg3LwqZG M:     │                                                                                                                                                                                                                                                                                                                                                                                                           ├──  user added theme options. same as previous submission
inv10 U:    │                                                                                                                                                                                                                                                                                                                                                                                                           ├──  all x : Component | no x.parts & (Component.workstation & x.workstation.*succ)
3jnTx6Ji74MpXMRJw M:     │                                                                                                                                                                                                                                                                                                                                                                                                           └──  user added theme options. same as previous submission
inv10 T:    │                                                                                                                                                                                                                                                                                                                                                                                                               └──  all x : Component | x.parts & x.workstation.*succ
inv10 T:    │                                                                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Component | x.parts & x.workstation.*succ
inv1 C:     │                                                                                                                                                                                                                                                                                                                                                                                                                       └──  Worker in Human + Robot
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                           └──  all x : Component | x.parts not in x.workstation.*succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                               └──  all x : Component | x.parts not in x.workstation.*succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Component | x.parts not in x.workstation.*succ
inv10 T:    │                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  all x : Component | x.parts not in x.*({ x: Workstation | one x.succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                                           └──  all x : Component | x.parts not in (x.workstation).*succ
inv10 T:    │                                                                                                                                                                                                                                                                                                                                                                                                                                               └──  all x : Component | (x.parts & Component).workstation & (x.workstation).*succ
inv10 B:    │                                                                                                                                                                                                                                                                                                                                                                                                                                                   └──  all x : Component | no (x.parts & Component).workstation & (x.workstation).*succ
nRSPRPMrsoGAg4o8B M:     │                                                                                                                                                                                                                                                                                                                                                                                                                                                       └──  user added theme options. same as previous submission
inv9 O:     ├──  all w : Workstation | w in begin.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 S:     │   └──  all w : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │       └──  all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │           └──  all w : Workstation-begin | w in begin.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │               └──  one begin all w : Workstation-begin | w in begin.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation | w not in end implies one w.succ
inv9 C:     │                   └──  one begin all w : Workstation-begin | w in begin.^(succ) all w : Workstation | w not in w.^(succ) all w : Workstation-end | one w.succ
inv9 C:     │                       └──  all w : Workstation-begin | w in begin.^(succ) all w : Workstation-end | one w.succ all w : Workstation | w not in w.^(succ)
inv5 T:     ├──  Workstation.workers in (Human || Robot)
inv5 O:     │   └──  Workstation.workers in Human or Workstation.workers in Robot
inv1 O:     ├──  Worker in Human & Robot
inv1 O:     │   └──  Worker in Human & Robot
inv1 C:     │       └──  Worker in Human + Robot
inv2 B:     │           └──  lone succ
inv2 O:     │               └──  lone succ and Workstation in (~workers).Workstation
inv10 T:    ├──  all c : Component | some ws : Workstation | lone c.^parts.ws
inv10 T:    │   └──  all c : Component | some ws : Workstation | lone c.parts.ws
inv1 E:     ├──   
inv7 B:     │   └──  all c : Component | c.^parts in Dangerous iff c in Dangerous
inv7 B:     │       └──  all c : Component | c.^parts in Dangerous => c in Dangerous
inv7 T:     │           └──  all c : Component | c.^parts.c in Dangerous => c in Dangerous
inv7 B:     │               └──  all c : Component | c.^parts in Dangerous => c in Dangerous
inv7 O:     │                   └──  parts.Dangerous in Dangerous all c : Component | parts.c in Dangerous => c in Dangerous
inv7 T:     │                       └──  parts.Dangerous in Dangerous all c : Component | c.parts & Dangerous => c in Dangerous
inv7 O:     │                           └──  parts.Dangerous in Dangerous all c : Component | some c.parts & Dangerous => c in Dangerous
inv7 O:     │                               └──  parts.Dangerous in Dangerous all c : Component | some c.parts & Dangerous <=> c in Dangerous
inv7 O:     │                                   └──  parts.Dangerous in Dangerous all c : Component | some c.parts & Dangerous => c in Dangerous
inv7 O:     │                                       └──  parts.Dangerous in Dangerous all c : Component | some c.parts & Dangerous => c in Dangerous
inv9 C:     │                                           └──  all w: Workstation- end | one w.succ no end.succ Workstation in begin.*succ
inv1 C:     ├──  all w:Worker | w in Human or w in Robot
inv1 C:     ├──  Worker in Human + Robot
inv1 E:     │   └──   
inv1 O:     │       └──  Worker in Human
inv1 O:     │           └──  Worker in Human or Worker in Robot
inv1 C:     │               └──  Worker in Human + Robot
inv1 C:     │                   └──  Worker in Human + Robot
inv2 U:     │                       └──  some Workstation->workers
inv2 U:     │                           └──  some Workstation.workers
inv2 U:     │                               └──  all w : Workstation | some w.workers Worker in Workstation.workers
inv2 T:     │                                   └──  all w : Workstation | some w.workers lone Worker in Workstation.workers
inv2 C:     │                                       └──  all w : Workstation | some w.workers all w : Worker | one ww : Workstation | w in ww.workers
inv2 B:     │                                           └──  all w : Workstation | some w.workers one ww : Workstation | Worker in ww.workers
inv3 S:     │                                               └──  all c : Component | one ww : Workstation | c in ww.components
inv2 T:     │                                                   └──  Worker.^workers all w : Worker | one ww : Workstation | w in ww.workers
inv3 S:     │                                                       └──  all c : Component | one ww : Workstation | c in ww.components
inv2 O:     │                                                           └──  Worker.^workers = Workstation all w : Worker | one ww : Workstation | w in ww.workers
inv2 C:     │                                                               └──  Worker.~workers = Workstation all w : Worker | one ww : Workstation | w in ww.workers
inv3 E:     │                                                                   └──   
inv3 C:     │                                                                       └──  all c : Component | one c.workstation
inv4 S:     │                                                                           └──  some Components.parts no Materials.parrs
inv4 S:     │                                                                               └──  some Component.parts no Material.parrs
inv4 B:     │                                                                                   └──  some Component.parts no Material.parts
inv4 O:     │                                                                                       └──  some Component.parts and no iden no Material.parts
inv4 T:     │                                                                                           └──  some Component.parts iden not in Component->parts no Material.parts
inv4 T:     │                                                                                               └──  some Component.parts iden not in Component->parts no Material.parts
inv4 B:     │                                                                                                   └──  some Component.parts iden not in parts no Material.parts
inv4 C:     │                                                                                                       └──  all c : Component | some c.parts iden not in parts no Material.parts
inv4 C:     │                                                                                                           └──  all c : Component | some c.parts no Material.parts
inv5 T:     │                                                                                                               └──  all w : Workstation | no w.workers and Robot or no w.workers and Human
inv5 T:     │                                                                                                                   └──  all w : Workstation | no w.workers and Robot or no w.workers and Human
inv5 C:     │                                                                                                                       └──  all w : Workstation | no w.workers & Robot or no w.workers & Human
inv5 C:     │                                                                                                                           └──  all w : Workstation | no w.workers & Robot or no w.workers & Human
inv6 U:     │                                                                                                                               └──  iden not in parts
inv6 S:     │                                                                                                                                   └──  no id & parts
inv6 B:     │                                                                                                                                       └──  no iden & parts
inv6 B:     │                                                                                                                                           └──  Component not in Component.parts
inv6 E:     │                                                                                                                                               └──   
inv6 B:     │                                                                                                                                                   └──  no Component & Component.parts
inv6 T:     │                                                                                                                                                       └──  Component.parts
inv6 U:     │                                                                                                                                                           └──  all c : Component | c not in c.parts
inv6 B:     │                                                                                                                                                               └──  all c : Component | no c.parts & Component
inv6 B:     │                                                                                                                                                                   └──  all c : Component | c.parts not in Component
inv6 B:     │                                                                                                                                                                       └──  all c : Component | no c.parts & Component
inv6 U:     │                                                                                                                                                                           └──  all c : Component | c not in c.parts
inv6 O:     │                                                                                                                                                                               └──  no iden & ^parts
inv7 C:     │                                                                                                                                                                                   └──  all c : Component | some c.parts & Dangerous implies c in Dangerous
inv8 B:     │                                                                                                                                                                                       └──  Human not in Dangerous.workstation.workers
inv8 C:     │                                                                                                                                                                                           └──  no Human & Dangerous.workstation.workers
inv9 U:     │                                                                                                                                                                                               └──  no iden & ^succ
inv9 U:     │                                                                                                                                                                                                   └──  one w : Workstation | not w in Workstation.succ
inv9 U:     │                                                                                                                                                                                                       └──  one w : Workstation | not w in Workstation.succ no iden & ^succ
inv9 U:     │                                                                                                                                                                                                           └──  Workstation - begin = Workstation.succ
inv9 U:     │                                                                                                                                                                                                               └──  Workstation - begin = Workstation.succ no iden & ^succ no end.succ
inv9 O:     │                                                                                                                                                                                                                   └──  Workstation - begin = Workstation.succ all w : Workstation | one w.succ no iden & ^succ no end.succ
inv9 O:     │                                                                                                                                                                                                                       └──  all w : Workstation | one w.succ no iden & ^succ no end.succ
inv9 B:     │                                                                                                                                                                                                                           └──  all w : Workstation | one w.succ
inv9 O:     │                                                                                                                                                                                                                               └──  all w : Workstation | one w.succ no iden & ^succ
inv9 B:     │                                                                                                                                                                                                                                   └──  all w : Workstation | one w.succ no iden & succ
inv9 E:     │                                                                                                                                                                                                                                       └──   
inv9 U:     │                                                                                                                                                                                                                                           └──  all w : Workstation | w not in w.succ
inv9 B:     │                                                                                                                                                                                                                                               └──  all w : Workstation | w not in w.succ and one w.succ
inv9 U:     │                                                                                                                                                                                                                                                   └──  all w : Workstation | w not in w.succ all w : Workstation - end | one w.succ
inv9 U:     │                                                                                                                                                                                                                                                       └──  all w : Workstation | w not in w.succ and begin not in w.succ all w : Workstation - end | one w.succ
inv9 B:     │                                                                                                                                                                                                                                                           └──  all w : Workstation | w not in w.succ and begin not in w.succ all w : Workstation - end | one w.succ begin != end
inv9 U:     │                                                                                                                                                                                                                                                               └──  all w : Workstation | w not in w.succ and begin not in w.succ all w : Workstation - end | one w.succ no iden & succ
inv9 U:     │                                                                                                                                                                                                                                                                   └──  all w : Workstation | w not in w.succ and begin not in w.succ all w : Workstation - end | one w.succ no iden & ^succ
inv9 C:     │                                                                                                                                                                                                                                                                       └──  all w : Workstation | w not in w.succ all w : Workstation - begin | w in Workstation.succ all w : Workstation - end | one w.succ no iden & ^succ
inv9 U:     │                                                                                                                                                                                                                                                                           └──  all w : Workstation | w not in w.succ all w : Workstation - begin | w in Workstation.succ all w : Workstation - end | one w.succ
inv9 C:     │                                                                                                                                                                                                                                                                               └──  all w : Workstation | w not in w.succ all w : Workstation - begin | w in Workstation.succ all w : Workstation - end | one w.succ no iden & ^succ
inv9 C:     │                                                                                                                                                                                                                                                                                   └──  all w : Workstation - begin | w in Workstation.succ all w : Workstation - end | one w.succ no iden & ^succ
inv9 C:     │                                                                                                                                                                                                                                                                                       └──  no iden & ^succ all w : Workstation - begin | w in Workstation.succ all w : Workstation - end | one w.succ
inv9 C:     │                                                                                                                                                                                                                                                                                           └──  no iden & ^succ Workstation - begin in Workstation.succ all w : Workstation - end | one w.succ
inv9 C:     │                                                                                                                                                                                                                                                                                               └──  no iden & ^succ Workstation - begin in Workstation.succ all w : Workstation - end | one w.succ
inv10 E:    │                                                                                                                                                                                                                                                                                                   └──   
inv10 S:    │                                                                                                                                                                                                                                                                                                       └──  all c : Components | c.parts & Component in Workstation.~component
inv10 S:    │                                                                                                                                                                                                                                                                                                           └──  all c : Component | c.parts & Component in Workstation.~component
inv10 B:    │                                                                                                                                                                                                                                                                                                               └──  all c : Component | c.parts & Component in Workstation.~workstation
inv10 E:    │                                                                                                                                                                                                                                                                                                                   └──   
udApvcWpZAYTarQFo M:     │                                                                                                                                                                                                                                                                                                                       └──  user added theme options. same as previous submission
inv3 C:     ├──  all c:Component | one c.workstation
inv1 O:     ├──  all w : Worker | w =  Human or w = Robot
inv2 T:     │   └──  all w : Workstation, t: workers | some w.workers and workers in w.workers
inv2 T:     │       └──  all w : Workstation, t: workers | (some w.workers) and (workers in w.workers)
inv2 T:     │           └──  all w : Workstation, t: Worker | (some w.workers) and (workers in w.workers)
inv2 B:     │               └──  all w : Workstation, t: Worker | (some w.workers) and (t in w.workers)
inv1 C:     ├──  all ws: Worker | ws in Human or ws in Robot
inv10 S:    │   └──  all c1, c2: Component | all w1, w2: Workstation | c2 in c1.parts and c1.workstation in w1 and c2.workstation in w2 implies w1 in w2.succs
inv10 B:    │       └──  all c1, c2: Component | all w1, w2: Workstation | c2 in c1.parts and c1.workstation in w1 and c2.workstation in w2 implies w1 in w2.succ
inv10 B:    │           └──  all c1, c2: Component | all w1, w2: Workstation | c2 in c1.^(parts) and w1 in c1.workstation and w2 in c2.workstation implies w1 in w2.succ
inv10 B:    │               └──  all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)
inv10 B:    │                   └──  all c1, c2: Component | all w1, w2: Workstation | c2 in c1.^(parts) and w1 in c1.workstation and w2 in c2.workstation implies w1 in w2.^(succ)
inv1 C:     └──  all w : Worker | w in Human+Robot
tYjy87F2Ckn64zM32 M:         └──  user added theme options. same as previous submission
