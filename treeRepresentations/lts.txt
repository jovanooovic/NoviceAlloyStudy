fk2TiiT3vQAz9bbgB
zoEADeCW2b2suJB2k M: └──  user added theme options. same as previous submission
inv4 S:     ├──  all s : Init <: trans | State in n.^(trans.Event)
inv4 T:     │   └──  all s : Init <: trans | State in s.^(trans.Event)
inv4 T:     │       └──  all s : Init <: trans | State in ^(s.trans.Event)
inv4 T:     │           └──  all s : Init <: trans | State in ^(Event.s.trans)
inv4 T:     │               └──  all s : Init <: trans | State in ^(Event.(s.trans))
inv4 T:     │                   └──  all s : Init <: trans | State in *(Event.(s.trans))
inv4 T:     │                       └──  all s : Init <: trans | State in *(s->Event.(s.trans))
inv4 T:     │                           └──  all s : Init <: trans | State in *(s->Event.(s.trans))
inv4 T:     │                               └──  all s : Init <: trans | State in ^(s->Event.(s.trans))
inv4 T:     │                                   └──  all s : Init <: trans | State in ^(s->(Event.(s.trans)))
inv4 T:     │                                       └──  all s : Init <: trans | ^(s->(Event.(s.trans)))
inv4 T:     │                                           └──  all s : (Init <: trans).Event.State | ^(s->(Event.(s.trans)))
inv4 S:     │                                               └──  all s : State | s in Init && State in ^(s->Event.(n.trans))
inv4 T:     │                                                   └──  all s : State | s in Init && State in ^(s->Event.(s.trans))
inv4 T:     │                                                       └──  all s : Init | State in ^(s->Event.(s.trans))
inv4 B:     │                                                           └──  all s : Init | State in s.^(s->Event.(s.trans))
inv4 B:     │                                                               └──  all s : Init | State in State.^(s->Event.(s.trans))
inv4 B:     │                                                                   └──  all s : Init | State->State in ^(s->Event.(s.trans))
inv4 B:     │                                                                       └──  all s : Init | State in ^(s->Event.(s.trans)).State
inv4 T:     │                                                                           └──  all s : Init | ^(s->Event.(s.trans))
inv4 T:     │                                                                               └──  all s : Init | ^(State->Event.(s.trans))
inv4 B:     │                                                                                   └──  all s : Init | State->State in ^(State->Event.(s.trans))
inv4 B:     │                                                                                       └──  all s : Init | State in  s.^(State->Event.(s.trans))
inv1 C:     ├──  no s:State | no s.trans
inv1 C:     │   └──  no s:State | no s.trans
inv2 U:     │       └──  all s1,s2:Init | s1=s2
inv2 C:     │           └──  one Init
inv2 U:     │               └──  all s1,s2:State | s1 in Init and s2 in Init implies s1=s2
inv2 C:     │                   └──  one Init
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 U:     │       └──  all s:State, e:Event | lone e.trans.s
inv3 O:     │           └──  all s:State | lone s.trans
inv3 B:     │               └──  all s:State | lone trans.s
inv2 C:     │                   └──  one Init
inv3 O:     │                       └──  all s:State | lone s.trans
inv3 O:     │                           └──  all s:State | one s.trans
inv3 U:     │                               └──  all s:State, e:Event | lone e->s
inv3 T:     │                                   └──  all s:State, e:Event | one trans in e->s
inv3 T:     │                                       └──  all s:State, e:Event | trans in e->s
inv4 T:     │                                           └──  all s:State | some i:Init | s in i.trans
inv4 T:     │                                               └──  all s:State | some i:Init | s in trans.i
inv4 T:     │                                                   └──  all s:State | s in s.trans
inv4 T:     │                                                       └──  all s:State | s in s->Event->s
inv4 S:     │                                                           └──  all s:State, some i:Init | s in i->Event->s
inv4 T:     │                                                               └──  all s:State| some i:Init | s in i->Event->s
inv4 T:     │                                                                   └──  all s:State| some i:Init | i->Event->s in State
inv4 B:     │                                                                       └──  all s:State| some i:Init | i->Event->s in trans
inv4 T:     │                                                                           └──  all s : State, i:Init | s in i.trans
inv4 B:     │                                                                               └──  all s : State, i:Init | s in i.trans.Event
inv4 B:     │                                                                                   └──  all s : State, i:Init | s in i.trans.State
inv4 B:     │                                                                                       └──  all s : State, i:Init | s in i.trans.s
inv4 T:     │                                                                                           └──  all s : State, i:Init | s in i.trans
inv4 T:     │                                                                                               └──  all s : State, i:Init | s in trans.i
inv4 B:     │                                                                                                   └──  all s : State, i:Init, e:Event |  s in trans.i.e
inv4 B:     │                                                                                                       └──  all s : State, i:Init, e:Event |  s in i.trans.e
inv4 T:     │                                                                                                           └──  all s : State, i:Init, e:Event |  s in i.trans.e.s
inv4 B:     │                                                                                                               └──  all s : State, i:Init, e:Event |  s in trans.e.i
inv4 S:     │                                                                                                                   └──  None
inv5 O:     │                                                                                                                       └──  all s1,s2:State | s1.trans = s2.trans
inv5 U:     │                                                                                                                           └──  all s1,s2:State | s1.trans.Event = s2.trans.Event
inv5 U:     │                                                                                                                               └──  all s1,s2:State | (s1.trans).Event = (s2.trans).Event
inv5 B:     │                                                                                                                                   └──  all s1,s2:State | Event.(s1.trans) = Event.(s2.trans)
inv5 U:     │                                                                                                                                       └──  all s1,s2:State | State.(s1.trans) = State.(s2.trans)
inv5 C:     │                                                                                                                                           └──  all s1,s2:State | (s1.trans).State = (s2.trans).State
inv6 O:     │                                                                                                                                               └──  all e:Event | some e.trans
inv6 O:     │                                                                                                                                                   └──  all e:Event | some trans.e
inv6 S:     │                                                                                                                                                       └──  all e:Event| some s.State | s in trans.e
inv6 T:     │                                                                                                                                                           └──  all e:Event| some s:State | s in trans.e
inv6 T:     │                                                                                                                                                               └──  all e:Event| some s:State | s in e->State
inv6 T:     │                                                                                                                                                                   └──  all e:Event| some s:State | s in (e->State).trans
inv6 T:     │                                                                                                                                                                       └──  all e:Event| some s:State | s in (e.State).trans
inv6 T:     │                                                                                                                                                                           └──  all e:Event| some s:State | e in s->trans.State
inv6 T:     │                                                                                                                                                                               └──  some e:Event| some s:State | e in s->trans->State
inv6 B:     │                                                                                                                                                                                   └──  all s:State | some s.trans.State
inv6 B:     │                                                                                                                                                                                       └──  all s:State | some (s.trans).State
inv6 B:     │                                                                                                                                                                                           └──  all s:State | one (s.trans).State
inv6 C:     │                                                                                                                                                                                               └──  all e:Event | some e.(State.trans)
inv3 S:     │                                                                                                                                                                                                   └──  all s:State, e:Event | lone t:Trans | t in e->s
inv3 T:     │                                                                                                                                                                                                       └──  all s:State, e:Event | lone t:trans | t in e->s
inv7 T:     │                                                                                                                                                                                                           └──  all s:State | s in trans.State implies s in ^trans.State
inv7 T:     │                                                                                                                                                                                                               └──  all s:State | s in trans.State implies s in State.^trans
inv7 T:     │                                                                                                                                                                                                                   └──  all s:State | s in Event.(trans.State) implies s in Event.(State.^trans)
inv7 T:     │                                                                                                                                                                                                                       └──  all s:State | s in Event.(trans.State) implies s in Event.(^trans.State)
inv7 T:     │                                                                                                                                                                                                                           └──  all s:State | one i:Init | i in (^trans.s)
inv7 T:     │                                                                                                                                                                                                                               └──  all s:State | one i:Init | i in Event.(^trans.s)
inv7 T:     │                                                                                                                                                                                                                                   └──  all s:State | one i:Init | i in (^trans.s).Event
inv7 T:     │                                                                                                                                                                                                                                       └──  all s:State | one i:Init | i in Event.(s.^trans)
inv7 T:     │                                                                                                                                                                                                                                           └──  all s:State | one i:Init | i in State.(s.^trans)
inv7 T:     │                                                                                                                                                                                                                                               └──  all s:State | one i:Init | i in (s.^trans).Event
inv7 T:     │                                                                                                                                                                                                                                                   └──  all s:State | one i:Init | i in (s.^trans).State
inv7 T:     │                                                                                                                                                                                                                                                       └──  all s:State | one i:Init | i in (s.^trans)
inv7 S:     │                                                                                                                                                                                                                                                           └──  all s:State | one i:Init | i in
inv7 S:     │                                                                                                                                                                                                                                                               └──  all s:State | one i:Init
inv6 C:     │                                                                                                                                                                                                                                                                   └──  all e:Event | some e.(State.trans)
inv3 S:     │                                                                                                                                                                                                                                                                       └──  all s:State, all e:Event | lone s->e->State
inv3 S:     │                                                                                                                                                                                                                                                                           └──  all s1,s2:State, all e:Event | lone s1->e->s2
ciYK2NRjQGhrbjWfL N:     ├──  user added extra characters to pred name
inv5 U:     │   └──  all x : State | x.trans in State.trans
inv2 C:     │       └──  one Init
inv3 C:     │           └──  all e : Event, s : State | lone e<:s.trans
inv4 O:     │               └──  State in Event.(*(Init.trans))
inv5 U:     │                   └──  all x : State | x.trans in State.trans
inv3 C:     │                       └──  all e : Event, s : State | lone e<:s.trans
NbdA4LJSKXoS9PMuH M:     │                           └──  user added theme options. same as previous submission
inv1 C:     │                               └──  trans.State.Event = State
inv5 U:     │                                   └──  all x : State | x.trans in State.trans
inv1 C:     │                                       └──  trans.State.Event = State
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s:State,e:Event | lone e.(s.trans)
inv4 T:     │           └──  State in Init.trans
inv4 S:     │               └──  State in e.(Init.trans)
inv4 O:     │                   └──  State in Event.(Init.trans)
inv4 B:     │                       └──  State in Event.(Init.trans) + Init
inv4 B:     │                           └──  State in (Event.(Init.trans) + Init)
inv4 B:     │                               └──  State in Init
inv4 O:     │                                   └──  State in Event.(Init.trans)
inv4 O:     │                                       └──  State in Event.^(Init.trans)
inv4 O:     │                                           └──  State in Event.(Init.trans)
inv5 S:     │                                               └──  all s1,s2:State|e:Event | some e.(s1.trans) implies some e.(s2.trans)
inv5 B:     │                                                   └──  all s1,s2:State|some e:Event | some e.(s1.trans) implies some e.(s2.trans)
inv5 C:     │                                                       └──  all s1,s2:State,e:Event | some e.(s1.trans) implies some e.(s2.trans)
inv6 C:     │                                                           └──  Event in (State.trans).State
inv7 T:     │                                                               └──  trans.~trans in iden
inv7 T:     │                                                                   └──  State.trans.~trans in iden
inv7 B:     │                                                                       └──  (State.trans).~(State.trans) in iden
inv7 B:     │                                                                           └──  ~(State.trans).(State.trans) in iden
inv7 T:     │                                                                               └──  (Event.(State.trans)).~(Event.(State.trans)) in iden
inv7 T:     │                                                                                   └──  (Event.(State.trans)).(Event.~(State.trans)) in iden
inv7 B:     │                                                                                       └──  some (Event.(State.trans))
inv7 T:     │                                                                                           └──  some (Event.(State.trans)) . ~trans
inv7 B:     │                                                                                               └──  some trans.(Event.(State.trans))
inv7 T:     │                                                                                                   └──  some ~trans.(Event.(State.trans))
inv7 B:     │                                                                                                       └──  some (Event.(State.trans))
inv1 C:     │                                                                                                           └──  all s:State | some s.trans
inv2 C:     │                                                                                                               └──  one Init
inv3 C:     │                                                                                                                   └──  all s:State,e:Event | lone e.(s.trans)
inv5 C:     │                                                                                                                       └──  all s1,s2:State,e:Event | some e.(s1.trans) implies some e.(s2.trans)
inv6 C:     │                                                                                                                           └──  Event in (State.trans).State
inv4 O:     │                                                                                                                               └──  State in Event.(Init.trans)
inv4 O:     │                                                                                                                                   └──  State in Event.^(Init.trans)
inv4 O:     │                                                                                                                                       └──  State in Event.*(Init.trans)
inv4 U:     │                                                                                                                                           └──  some *(Init.trans)
inv4 B:     │                                                                                                                                               └──  some ^(Init.trans)
inv4 U:     │                                                                                                                                                   └──  some *(Init.trans)
inv4 O:     │                                                                                                                                                       └──  State in Event.(*(Init.trans))
inv4 B:     │                                                                                                                                                           └──  some (Event.(Init.trans))
inv4 T:     │                                                                                                                                                               └──  some ^(Event.(Init.trans))
inv4 T:     │                                                                                                                                                                   └──  some *(Event.(Init.trans))
inv4 O:     │                                                                                                                                                                       └──  State in Event.(*(Init.trans))
inv7 B:     │                                                                                                                                                                           └──  some (Event.(State.trans))
inv6 C:     │                                                                                                                                                                               └──  Event in (State.trans).State
inv4 O:     │                                                                                                                                                                                   └──  State in Event.(*(Init.trans))
jin9Z3xtHdSk65AL6 M:     │                                                                                                                                                                                       └──  user added theme options. same as previous submission
59SMa6WuP5PP3EwJX N:     ├──  user added extra characters to pred name
inv3 T:     ├──  all e : Event | State in trans.e
inv3 T:     │   └──  all e : Event | State in trans.(e -> State)
inv3 T:     │       └──  all e : Event | State in trans.(e->State)
inv3 T:     │           └──  all e : Event | State in trans.(e->State)
inv4 E:     │               └──   
inv3 B:     │                   └──  trans.State.Event = State
inv3 T:     │                       └──  all e : Event | State in trans.e
inv3 O:     │                           └──  all e : Event | State->State in trans.e
inv3 U:     │                               └──  all e : Event | trans.e in State->State
inv3 O:     │                                   └──  all e : Event | State->State in trans.e
inv3 T:     │                                       └──  ~trans.trans in iden
inv3 U:     │                                           └──  all e : Event | ~(trans.e).(trans.e) in iden
inv3 C:     │                                               └──  all s : State | ~(s.trans).(s.trans) in iden
inv3 O:     │                                                   └──  ~(State.trans).(State.trans) in iden
inv3 T:     │                                                       └──  ~trans.trans in State->State
inv3 T:     │                                                           └──  ~trans.trans in trans->trans
inv3 U:     │                                                               └──  ~(State.trans).(State.trans) in State->State
inv3 B:     │                                                                   └──  State->State in ~(State.trans).(State.trans)
inv3 C:     │                                                                       └──  all s : State | ~(s.trans).(s.trans) in iden
inv3 O:     │                                                                           └──  ~(State.trans).(State.trans) in iden
inv4 O:     │                                                                               └──  State in Init.^(Event.trans)
inv4 B:     │                                                                                   └──  State in Init.*(Event.trans)
inv4 U:     │                                                                                       └──  Init.*(Event.trans) in State
inv4 B:     │                                                                                           └──  all e : Event | State in Init.*(e.trans)
inv4 O:     │                                                                                               └──  State = Init.^(Event.trans)
inv4 B:     │                                                                                                   └──  all e : Event | State = Init.^(e.trans)
inv4 O:     │                                                                                                       └──  State in Init.^(Event.trans)
inv4 O:     │                                                                                                           └──  all s : State | s in Init.^(Event.trans)
inv4 B:     │                                                                                                               └──  all s : State | s in Init.*(Event.trans)
inv4 B:     │                                                                                                                   └──  some Event.^(Init.trans)
inv4 T:     │                                                                                                                       └──  State->State in Init->^(Event.trans)
inv4 O:     │                                                                                                                           └──  State in Init.^(Event.trans)
inv5 T:     │                                                                                                                               └──  {x,y: State | x.(trans.y) in Event
inv5 T:     │                                                                                                                                   └──  {x,y: State | Event in x.(trans.y)
inv5 T:     │                                                                                                                                       └──  {x,y: State | Event in Event<:x.(trans.y)
inv5 B:     │                                                                                                                                           └──  Event in State.(trans.State)
inv5 B:     │                                                                                                                                               └──  Event = State.(trans.State)
inv5 B:     │                                                                                                                                                   └──  Event in (State.trans).State
inv5 B:     │                                                                                                                                                       └──  Event = (State.trans).State
inv5 O:     │                                                                                                                                                           └──  all s : State | Event in (s.trans).State
inv5 O:     │                                                                                                                                                               └──  all s : State | Event = (s.trans).State
inv5 C:     │                                                                                                                                                                   └──  all s : State | (State.trans).State = (s.trans).State
inv6 C:     │                                                                                                                                                                       └──  Event in State.trans.State
inv1 C:     ├──  all s: State | some s.trans
inv2 E:     │   └──   
inv2 E:     │       └──   
inv2 C:     │           └──  one Init
inv3 E:     │               └──   
inv3 U:     │                   └──  all e: Event | all s: State | lone s.trans.e
inv3 C:     │                       └──  all e: Event | all s: State | lone s.trans[e]
inv3 C:     │                           └──  all e: Event, s: State | lone s.trans[e]
inv4 T:     │                               └──  Init.*trans = State
inv4 T:     │                                   └──  Init.*(State.trans.Event) = State
inv4 T:     │                                       └──  Init.*(~trans.Event) = State
inv3 C:     │                                           └──  all e: Event, s: State | lone s.trans[e]
inv4 T:     │                                               └──  Init.*(State.trans[Event]) = State
inv4 S:     │                                                   └──  Init.*({x: State, y: State | any e: Event | x.trans[e] = y
inv4 S:     │                                                       └──  Init.*({x: State, y: State | (any e: Event | x.trans[e] = y)
inv3 C:     │                                                           └──  all e: Event, s: State | lone s.trans[e]
inv3 C:     │                                                               └──  all e: Event, s: State | lone s.trans[e]
inv3 C:     │                                                                   └──  all e: Event, s: State | lone s.trans[e]
inv4 U:     │                                                                       └──  Init.*{x: State, y: State | some (x.trans).y
inv4 U:     │                                                                           └──  Init.*({x: State, y: State | some (x.trans).y
inv4 B:     │                                                                               └──  Init.*({x: State, y: State | some e: Event | x.trans[e] = y
inv4 U:     │                                                                                   └──  Init.*({x: State, y: State | some (x.trans).y
inv4 C:     │                                                                                       └──  Init.^({x: State, y: State | some (x.trans).y
inv3 C:     │                                                                                           └──  all e: Event, s: State | lone s.trans[e]
inv4 C:     │                                                                                               └──  Init.^({x: State, y: State | some (x.trans).y
inv4 U:     │                                                                                                   └──  Init.*({x: State, y: State | some (x.trans).y
inv4 C:     │                                                                                                       └──  Init.^({x: State, y: State | some (x.trans).y
inv5 O:     │                                                                                                           └──  all x: State, y: State | (x.trans).univ = (univ.trans).y
inv5 B:     │                                                                                                               └──  all x: State, y: State | (x.trans).univ = (univ.trans).x
inv5 O:     │                                                                                                                   └──  all x: State, y: State | (x.trans).univ = (univ.trans).y
inv5 C:     │                                                                                                                       └──  all x: State, y: State | (x.trans).univ = (y.trans).univ
inv5 C:     │                                                                                                                           └──  all x: State, y: State | (x.trans).univ = (y.trans).univ
inv6 C:     │                                                                                                                               └──  all e: Event | some e.(univ.trans)
inv7 B:     │                                                                                                                                   └──  inv4
inv7 S:     │                                                                                                                                       └──  let t = {x: State, y: State | some (x.trans).y
inv7 S:     │                                                                                                                                           └──  let t = {x: State, y: State | some (x.trans).y
inv7 B:     │                                                                                                                                               └──  let t = {x: State, y: State | some (x.trans).y
inv7 B:     │                                                                                                                                                   └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                       └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                           └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                               └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                   └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                       └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                           └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                               └──  let t = {x: State, y: State | some (x.trans).y
inv7 S:     │                                                                                                                                                                                   └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                                       └──  let t = {x: State, y: State | some (x.trans).y
inv7 O:     │                                                                                                                                                                                           └──  let t = {x: State, y: State | some (x.trans).y
inv7 S:     │                                                                                                                                                                                               └──  let t = {x: State, y: State | some (x.trans).y
inv7 C:     │                                                                                                                                                                                                   └──  let t = {x: State, y: State | some (x.trans).y
inv4 S:     ├──  State in ^fromState[Init]
inv1 E:     │   └──   
inv1 E:     │       └──   
inv1 E:     │           └──   
inv4 S:     │               └──  None
inv4 S:     │                   └──  None
inv4 S:     │                       └──  State in fromState[Init].^fromState
inv4 S:     │                           └──  State in (fromState[Init]).^fromState
inv4 S:     │                               └──  None
inv4 S:     │                                   └──  None
inv4 S:     │                                       └──  State in Init.^lookupState
inv4 T:     │                                           └──  State in ^(lookupState[Init])
inv4 S:     │                                               └──  State in Init.^lookupState
inv3 S:     │                                                   └──  
inv3 S:     │                                                       └──  
inv4 S:     │                                                           └──  None
inv4 S:     │                                                               └──  State in Init.^lookupState
inv4 S:     │                                                                   └──  None
inv4 S:     │                                                                       └──  None
inv4 S:     │                                                                           └──  None
inv4 S:     │                                                                               └──  None
inv4 S:     │                                                                                   └──  None
inv4 S:     │                                                                                       └──  None
inv3 S:     │                                                                                           └──  
inv4 S:     │                                                                                               └──  None
inv4 S:     │                                                                                                   └──  None
inv4 S:     │                                                                                                       └──  None
inv4 S:     │                                                                                                           └──  None
7GsitrmFNEuyMxYg5 M:     │                                                                                                               └──  user added theme options. same as previous submission
inv4 S:     │                                                                                                                   └──  None
inv4 S:     │                                                                                                                       └──  None
inv4 C:     │                                                                                                                           └──  State in Init.^{s1, s2: State | s2 in s1.trans[Event]
inv1 C:     ├──  trans.State.Event = State
inv6 C:     │   └──  Event in State.trans.State
inv7 U:     │       └──  all s: State.trans.Event | s in s.^{y,x: State | some x.trans.y
inv7 B:     │           └──  all s: Event.(State.trans) | s in s.^{y,x: State | some x.trans.y
inv7 B:     │               └──  all s: Event.(State.trans) | s in s.^{x,y: State | some y.trans.x
inv7 B:     │                   └──  all s: Event.(State.trans) | s in s.^{x,y: State | some y.trans.x
inv7 U:     │                       └──  all s: Event.(State.trans) | s in s.*{x,y: State | some y.trans.x
inv7 B:     │                           └──  all s: Event.(State.trans) | s in s.^{x,y: State | some y.trans.x
inv7 B:     │                               └──  all s: Event.(State.trans) | s in ^{x,y: State | some y.trans.x
inv7 B:     │                                   └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 U:     │                                       └──  all s: Event.(State.trans) | s in *{x,y: State | some x.trans.y
inv7 B:     │                                           └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 B:     │                                               └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 B:     │                                                   └──  all s: Event.(State.trans) | Init in ^{x,y: State | some x.trans.y
inv7 B:     │                                                       └──  all s: Event.(State.trans) - Init | Init in ^{x,y: State | some x.trans.y
inv7 B:     │                                                           └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 B:     │                                                               └──  all s: Event.(State.trans) | State in ^{x,y: State | some x.trans.y
inv7 B:     │                                                                   └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 T:     │                                                                       └──  all s: Event.(State.trans) | trans.(Event.State) in ^{x,y: State | some x.trans.y
inv7 B:     │                                                                           └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv1 E:     ├──   
inv1 C:     ├──  trans.State.Event = State
inv2 S:     │   └──  one Initial
inv2 C:     │       └──  one Init
inv4 T:     │           └──  all s : State | Init.^{x,y : State | x.trans.y
inv4 T:     │               └──  all s : State | Init.^{x,y : State | x.trans.y
inv4 T:     │                   └──  all s : State | Init.^{x,y : State | some x.trans.y
inv4 C:     │                       └──  all s : State | Init.^{x,y : State | some x.trans.y
inv4 C:     │                           └──  Init.^{x,y : State | some x.trans.y
inv1 E:     ├──   
inv1 S:     │   └──  all s: State | some s.transition
inv1 C:     │       └──  all s: State | some s.trans
inv2 C:     │           └──  one Init
inv2 C:     │               └──  one Init
inv3 C:     │                   └──  all s: State, e: Event | lone s.trans[e]
inv4 T:     │                       └──  State in Init.^trans[Event]
inv3 C:     │                           └──  all s: State, e: Event | lone s.trans[e]
inv3 C:     │                               └──  all s: State, e: Event | lone s.trans[e]
inv4 O:     │                                   └──  State in Init.trans[Event]
inv4 T:     │                                       └──  State in Init.^trans[Event]
inv4 T:     │                                           └──  State in ^Init.trans[Event]
inv4 T:     │                                               └──  State in Init <: ^trans[Event]
inv4 T:     │                                                   └──  State in Init <: ^(trans[Event])
inv4 T:     │                                                       └──  State in Init <: ^(trans.Event)
inv4 U:     │                                                           └──  let rel = { s1, s2: State | some s1 -> Event -> s2 & trans
inv4 U:     │                                                               └──  let rel = { s1, s2: State | some s1 -> Event -> s2 & trans
inv4 C:     │                                                                   └──  let rel = { s1, s2: State | some s1 -> Event -> s2 & trans
inv4 C:     │                                                                       └──  let rel = { s1, s2: State | some s1 -> Event -> s2 & trans
inv5 E:     │                                                                           └──   
inv5 C:     │                                                                               └──  all s1, s2: State | s1.trans.State = s2.trans.State
inv5 C:     │                                                                                   └──  all s1, s2: State | s1.trans.State = s2.trans.State
inv6 C:     │                                                                                       └──  all e: Event | some s: State | e in s.trans.State
inv7 S:     │                                                                                           └──  all s: State | from[Init, to] => from[to, Init]
inv7 S:     │                                                                                               └──  all to: State | from[Init, to] => from[to, Init]
inv6 C:     │                                                                                                   └──  all e: Event | some s: State | e in s.trans.State
inv7 O:     │                                                                                                       └──  all to: State | reachable[Init, to] => reachable[to, Init]
inv7 U:     │                                                                                                           └──  all to: State | one Init and reachable[Init, to] => reachable[to, Init]
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  State in trans.State.Event
inv2 C:     │       └──  one Init
inv4 S:     │           └──  State in
inv6 C:     │               └──  Event in State.trans.State
inv3 O:     │                   └──  let R = State.trans | ~R.R in iden
inv3 O:     │                       └──  let R = State.trans | iden in ~R.R
inv3 T:     │                           └──  all s : State, e : s.trans | ~e.e in iden
inv3 T:     │                               └──  all s : State, e : s.trans | ~e.e in iden
inv3 T:     │                                   └──  all s : State, e : s.trans | ~e.e in iden
inv3 S:     │                                       └──  all s : State, e | ~(s.trans).(s.trans) in iden
inv3 C:     │                                           └──  all s : State| ~(s.trans).(s.trans) in iden
inv3 O:     │                                               └──  ~(State.trans).(State.trans) in iden
inv5 S:     │                                                   └──  all disj s, s1 : s.trans.State = s1.trans.State
inv5 S:     │                                                       └──  all disj s, s1 | s.trans.State = s1.trans.State
inv5 C:     │                                                           └──  all disj s, s1 : State | s.trans.State = s1.trans.State
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s : State | lone s.trans
inv3 T:     │           └──  all s : State | lone ^s.trans
inv3 B:     │               └──  all s : State | lone trans.s
inv3 C:     │                   └──  all s : State, e : Event | lone e.(s.trans)
inv5 T:     ├──  all x, y, z : State | some e : Event | x->y in trans implies y->x in trans
inv5 B:     │   └──  all x, y, z : State | some e : Event | x->e->y in trans implies y->e->x in trans
inv5 T:     │       └──  all x, y : State | some e : Event | some x->e->y in trans
inv5 B:     │           └──  all x, y : State | some e : Event | x->e->y in trans
inv5 O:     │               └──  all x, y : State | some e : Event | x->Event->y in trans
inv5 O:     │                   └──  all x, y : State | x->Event->y in trans
inv5 O:     │                       └──  all x, y : State, e : Event | x->e->y in trans
inv5 O:     │                           └──  all x : State, e : Event | x->e->State in trans
inv5 O:     │                               └──  all x : State | x->Event->State in trans
inv5 O:     │                                   └──  all x : State | x->Event->State in trans
inv5 B:     │                                       └──  all x : State | some x->Event->State
inv5 B:     │                                           └──  all x : State | some y : State | some x->Event->y
inv5 S:     │                                               └──  None
inv5 S:     │                                                   └──  None
inv5 T:     │                                                       └──  all x : State | some x.trans in Event
inv5 T:     │                                                           └──  all x : State | x.trans in Event
inv5 T:     │                                                               └──  all x : State | x:>trans in Event
inv5 T:     │                                                                   └──  all x : State | x<:trans in Event
inv5 T:     │                                                                       └──  all x : State | x.trans in Event
inv5 O:     │                                                                           └──  all x : State | Event.(x.trans) in Event
inv5 O:     │                                                                               └──  all x : State | Event.(x.trans) in Event
inv5 U:     │                                                                                   └──  all x : State | (x.trans).Event in Event
inv5 T:     │                                                                                       └──  all x : State | Event:>(x.trans) in Event
inv5 T:     │                                                                                           └──  all x : State | Event<:(x.trans) in Event
inv5 O:     │                                                                                               └──  all x : State | Event.(x.trans) in Event
inv5 T:     │                                                                                                   └──  all x : State | Event.x in Event
inv5 O:     │                                                                                                       └──  all x : State | Event.(x.trans) in Event
inv5 U:     │                                                                                                           └──  all x : State | State.(x.trans) in Event
inv5 U:     │                                                                                                               └──  all x : State | State.(x.trans) in Event
inv5 B:     │                                                                                                                   └──  all x : State | some (x.trans)
inv5 B:     │                                                                                                                       └──  all x : State | some (x.trans)
inv5 O:     │                                                                                                                           └──  all x : State | Event.(x.trans) in Event
inv5 U:     │                                                                                                                               └──  all x : State | Event.(trans.x) in Event
inv5 T:     │                                                                                                                                   └──  all x : State | Event<:(trans.x) in Event
inv5 T:     │                                                                                                                                       └──  all x : State | Event:>(trans.x) in Event
inv5 T:     │                                                                                                                                           └──  all x : State | Event.(trans<:x) in Event
inv5 U:     │                                                                                                                                               └──  all x : State | Event.(trans.x) in Event
inv5 T:     │                                                                                                                                                   └──  all x : State | (trans.x) in Event
inv5 T:     │                                                                                                                                                       └──  all x : State | (trans) in Event
inv5 U:     │                                                                                                                                                           └──  all x : State | (x.trans.x) in Event
inv5 U:     │                                                                                                                                                               └──  all x : State | (x.trans.State) in Event
inv5 T:     │                                                                                                                                                                   └──  all x : State | some (x.Event.State)
inv5 B:     │                                                                                                                                                                       └──  all x : State | some (x->Event->State)
inv5 U:     │                                                                                                                                                                           └──  all x : State, e : Event | some x->e->State
inv5 U:     │                                                                                                                                                                               └──  all x : State, e : Event | some State->Event->State
inv5 B:     │                                                                                                                                                                                   └──  some State->Event->State
inv5 U:     │                                                                                                                                                                                       └──  all x : State, e : Event | some State->e->State
inv5 U:     │                                                                                                                                                                                           └──  all x : State, e : Event | some x->e->State
inv5 U:     │                                                                                                                                                                                               └──  all x : State, e : Event | some x->Event
inv5 U:     │                                                                                                                                                                                                   └──  all x : State, e : Event | some x->e
inv5 B:     │                                                                                                                                                                                                       └──  all x : State | some x->Event
inv5 U:     │                                                                                                                                                                                                           └──  all x : State, e : Event | some x->e->State
inv5 B:     │                                                                                                                                                                                                               └──  some Event
inv5 T:     │                                                                                                                                                                                                                   └──  all x : State | some x.Event
inv5 B:     │                                                                                                                                                                                                                       └──  all x : State | some x->Event
inv5 U:     │                                                                                                                                                                                                                           └──  all x, y : State | some x->Event implies some y->Event
inv5 U:     │                                                                                                                                                                                                                               └──  all x, y : State, e : Event | some x->e implies some y->e
inv5 S:     │                                                                                                                                                                                                                                   └──  all x, y : State | e : Event | some x->e implies some y->e
inv5 B:     │                                                                                                                                                                                                                                       └──  all x, y : State | some e : Event | some x->e implies some y->e
inv5 U:     │                                                                                                                                                                                                                                           └──  all x, y : State, e : Event | some x->e implies some y->e
inv5 U:     │                                                                                                                                                                                                                                               └──  all x, y : State | some x->Event implies some y->Event
inv5 B:     │                                                                                                                                                                                                                                                   └──  all x, y : State | some x->Event
inv5 U:     │                                                                                                                                                                                                                                                       └──  all x, y : State | some x->Event implies some y->Event
inv5 U:     │                                                                                                                                                                                                                                                           └──  all x, y : State | some x->Event implies some y->Event
inv5 B:     │                                                                                                                                                                                                                                                               └──  all x : State | some x->Event
inv5 T:     │                                                                                                                                                                                                                                                                   └──  all x : State | x->Event
inv5 T:     │                                                                                                                                                                                                                                                                       └──  all x : State | x->Event
inv5 T:     │                                                                                                                                                                                                                                                                           └──  all x : State | State in x.trans
inv7 E:     │                                                                                                                                                                                                                                                                               └──   
inv7 E:     │                                                                                                                                                                                                                                                                                   └──   
inv7 E:     │                                                                                                                                                                                                                                                                                       └──   
inv7 E:     │                                                                                                                                                                                                                                                                                           └──   
inv7 E:     │                                                                                                                                                                                                                                                                                               └──   
inv7 E:     │                                                                                                                                                                                                                                                                                                   └──   
inv5 B:     │                                                                                                                                                                                                                                                                                                       └──  all x, y : State | some e : Event | x->e->State in trans implies y->e->State in trans
inv5 U:     │                                                                                                                                                                                                                                                                                                           └──  all x, y : State | x.trans in State.trans
inv5 U:     │                                                                                                                                                                                                                                                                                                               └──  all x : State | x.trans in State.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                   └──  all x : State | x.trans = State.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                       └──  all x : State | State.trans in x.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                           └──  all x : State | State.trans = x.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                               └──  all x : State | State.trans = x.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                   └──  all x : State | x.trans = State.trans
inv5 U:     │                                                                                                                                                                                                                                                                                                                                       └──  all x : State | x.trans in State.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                           └──  all x : State | x.trans = State.trans
inv5 T:     │                                                                                                                                                                                                                                                                                                                                               └──  all x : State | some e : Event | x.e->State = State.e->Stat
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                   └──  all x : State | some e : Event | x.e->State = State.e->State
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                       └──  all x : State | some e : Event | x.e->State = State.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                           └──  all x : State | some e : Event | x.trans = State.trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                               └──  all x : State | x.trans = State.trans
inv6 E:     │                                                                                                                                                                                                                                                                                                                                                                   ├──   
inv5 U:     │                                                                                                                                                                                                                                                                                                                                                                   │   └──  all x : State | x.trans in State.trans
inv5 S:     │                                                                                                                                                                                                                                                                                                                                                                   │       └──  all x : State | State in s->Event
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │           └──  all x : State | State in x->Event
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │               └──  all x : State | State in x<:Event
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                   └──  all x : State | Event in x<:Event
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                       └──  all x : State | State in x:>Event
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                           └──  Event in Event.(State.trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                               └──  Event in Event<:(State.trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                   └──  Event in (State.trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                       └──  Event in (trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                           └──  Event in (trans.Event)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                               └──  Event in (Event<:trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                   └──  Event in (Event:>trans)
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                       └──  Event in (Event:>State.trans)
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                           └──  Event in (Event.(State.trans))
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                               └──  Event in (State.(State.trans))
inv5 T:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                   └──  all x, y : State | x->y in trans implies y->y in trans
inv5 S:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                       └──  all x, y : State | somne e : Event | x->e->y in trans implies y->e->y in trans
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                           └──  all x, y : State | some e : Event | x->e->y in trans implies y->e->y in trans
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                               └──  all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans
inv5 U:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                   └──  all x, y : State | all e : Event | some x->e->y implies some y->e->y
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                       └──  all x, y : State | some e : Event | some x->e->y implies some y->e->y
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                           └──  all x, y : State | x->Event->y in trans implies y->Event->y in trans
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                               └──  all x, y : State | x->Event->y in trans implies y->Event->x in trans
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                                   └──  all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                                       └──  all x, y : State | all e : Event | x->e->y in trans and y->e->y in trans
inv5 B:     │                                                                                                                                                                                                                                                                                                                                                                   │                                                                                                           └──  all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans
inv5 O:     │                                                                                                                                                                                                                                                                                                                                                                   └──  all x : State | x.trans = State.trans
E6z8epDdFFboKyngo N:     ├──  user added extra characters to pred name
inv4 S:     │   └──  None
inv4 S:     │       └──  None
inv4 S:     │           └──  None
inv4 S:     │               └──  None
inv4 S:     │                   └──  None
inv4 S:     │                       └──  None
inv5 E:     ├──   
inv7 E:     │   └──   
inv7 E:     │       └──   
inv4 B:     │           ├──  Init.(^{ s, ns : State | s->Event->ns in trans
inv4 B:     │           └──  Init.(^{ s, ns : State | s->Event->ns in trans
inv4 T:     ├──  State in Event.Init.trans
inv1 C:     │   └──  all s: State | some s.trans
inv2 C:     │       └──  one Init
inv3 O:     │           └──  all s: State | lone s.trans
inv4 T:     │               └──  State in Event.Init.trans
inv3 B:     │                   └──  all s: State | lone (s.trans).State
inv1 S:     ├──  all s: State |some s.trans
inv1 C:     │   └──  all s: State | some s.trans
inv2 C:     │       └──  one Init
inv3 S:     │           └──  all s: State |lone State.trans.s
inv2 C:     │               └──  one Init
inv3 B:     │                   └──  all s: State | lone State.trans.s
inv3 S:     │                       └──  all s: State | all e: Event |lone s.tran[e]
inv3 S:     │                           └──  all s: State | all e: Event | lone s.tran[e]
inv3 S:     │                               └──  all s: State | all e: Event | lone s.tran[e]
inv3 C:     │                                   └──  all s: State | all e: Event | lone s.trans[e]
inv4 T:     │                                       └──  State in Init.^trans
inv4 T:     │                                           └──  State in Init.trans.^Event
inv4 T:     │                                               └──  State in ^(Init.trans.Event)
inv4 O:     │                                                   └──  State in Init.^(trans.Event)
inv4 T:     │                                                       └──  State in Init.trans.^(trans.Event)
inv4 O:     │                                                           └──  State in Init.^(trans.Event)
inv4 T:     │                                                               └──  State in Init.^(trans)
inv4 O:     │                                                                   └──  State in Init.^(Event.trans)
inv4 O:     │                                                                       └──  State in Init.^(Event.trans)
inv4 O:     │                                                                           └──  State in Init.^(Event.trans)
inv4 S:     │                                                                               └──  State in Init.^(trans[Etat])
inv4 O:     │                                                                                   └──  State in Init.^(trans[Event])
inv4 T:     │                                                                                       └──  State in Init.^trans
inv4 T:     │                                                                                           └──  State in ^(Init.trans)
inv4 S:     │                                                                                               └──  for s: State | some e: Event |(Init.trans).e
inv5 S:     │                                                                                                   └──  all s1, s2: State |s1.(trans.State) = s2.(trans.State)
inv5 C:     │                                                                                                       └──  all s1, s2: State | s1.(trans.State) = s2.(trans.State)
inv4 S:     │                                                                                                           └──  for s: State | some e: Event | (Init.trans).^(Event->State)
inv4 O:     │                                                                                                               └──  some (Init.trans).^(Event->State) & iden
inv4 O:     │                                                                                                                   └──  some (Init.trans).^(Event->State) & iden
inv4 T:     │                                                                                                                       └──  some (Init.trans)[Event].^trans & iden
inv4 T:     │                                                                                                                           └──  some (Init.trans)[Event].^trans & iden
inv6 B:     │                                                                                                                               └──  some State.trans.State
inv6 C:     │                                                                                                                                   └──  Event in State.trans.State
inv4 S:     │                                                                                                                                       └──  ((init.trans)^[Event]).trans[Event]
inv4 S:     │                                                                                                                                           └──  State in ((init.trans)^[Event]).trans[Event]
inv4 S:     │                                                                                                                                               └──  State in ((init.trans)[Event]).trans[Event]
inv4 O:     │                                                                                                                                                   └──  State in ((Init.trans)[Event]).trans[Event]
inv4 T:     │                                                                                                                                                       └──  State in (Init.trans)^(~(Init.trans))
inv4 T:     │                                                                                                                                                           └──  State in (Init.trans).^(~(Init.trans))
inv4 U:     │                                                                                                                                                               └──  State in Init.^(trans.State.Event->State)
zaRNLGRYGbbLdxLPw M:     │                                                                                                                                                                   └──  user added theme options. same as previous submission
inv4 O:     │                                                                                                                                                                       └──  State in Init.trans.Event
inv4 O:     │                                                                                                                                                                           └──  State in Init.trans[Event]
inv4 B:     │                                                                                                                                                                               └──  State in Init.trans[Event] + Init
inv4 B:     │                                                                                                                                                                                   └──  State in (Init.trans[Event] + Init)
inv4 T:     │                                                                                                                                                                                       └──  State in (Init.trans[Event] + ~Init.trans[Event])
inv4 O:     │                                                                                                                                                                                           └──  State in (Init.trans[Event] + trans[Event].State)
inv4 O:     │                                                                                                                                                                                               └──  State in (Init.trans[Event] + trans[Event].Init)
inv4 T:     │                                                                                                                                                                                                   └──  State in (Init.trans[Event] + State.trans[Event].Init)
inv4 S:     │                                                                                                                                                                                                       └──  all s: State |some i: Init | i in Event.(trans.s)
inv4 S:     │                                                                                                                                                                                                           └──  all s: State | some i: Init | i in Event.(trans.s)
inv4 S:     │                                                                                                                                                                                                               └──  all s: State | some i: Init | i in Event.(trans.s)
inv4 O:     │                                                                                                                                                                                                                   └──  all s: State | some i: Init | i in Event.(trans.s)
inv4 O:     │                                                                                                                                                                                                                       └──  all s: State | some i: Init | i in trans.(trans.s.Event).Event
inv4 U:     │                                                                                                                                                                                                                           └──  State in State.trans[Event]
inv4 U:     │                                                                                                                                                                                                                               └──  State in State.trans[Event]
inv4 O:     │                                                                                                                                                                                                                                   └──  State in Init.trans[Event]
inv4 O:     │                                                                                                                                                                                                                                       └──  State in Init.trans[Event]
inv4 O:     │                                                                                                                                                                                                                                           └──  State in Init.trans[Event]
inv4 S:     │                                                                                                                                                                                                                                               └──  State in Event.^(Init.trans).
inv4 O:     │                                                                                                                                                                                                                                                   └──  State in Event.^(Init.trans)
AREqMNJ2pyWACEkvq N:     │                                                                                                                                                                                                                                                       └──  user added extra characters to pred name
inv4 T:     │                                                                                                                                                                                                                                                           └──  State in Init.trans.trans
inv4 S:     │                                                                                                                                                                                                                                                               └──  State in Init.trans..trans
inv4 T:     │                                                                                                                                                                                                                                                                   └──  State in Init.trans.Event.trans
inv4 T:     │                                                                                                                                                                                                                                                                       └──  State in Init.Event.trans.trans
inv4 T:     │                                                                                                                                                                                                                                                                           └──  State in Event.Event(Init.State.State)
inv4 T:     │                                                                                                                                                                                                                                                                               └──  State in Event.Event(Init.trans.trans)
inv4 S:     │                                                                                                                                                                                                                                                                                   └──  State in Event.(Event(Init.trans.trans))
inv4 O:     │                                                                                                                                                                                                                                                                                       └──  State in Event.(Event.(Init.trans.trans))
inv4 T:     │                                                                                                                                                                                                                                                                                           └──  State in ~(Init.trans.trans).^Event
inv4 T:     │                                                                                                                                                                                                                                                                                               └──  State in ~(Event.(Init.trans.trans)).^Event
inv4 S:     │                                                                                                                                                                                                                                                                                                   └──  for s: State |some i: Init |i in trans.s.Event
inv4 S:     │                                                                                                                                                                                                                                                                                                       └──  for s: State | some i: Init | i in trans.s.Event
inv4 O:     │                                                                                                                                                                                                                                                                                                           └──  all s: State | some i: Init | i in trans.s.Event
inv4 S:     │                                                                                                                                                                                                                                                                                                               └──  let r = {State->(State.trans.e) | e in Event
inv4 S:     │                                                                                                                                                                                                                                                                                                                   └──  let r = {State->(State.trans.e) | e in Event
inv4 S:     │                                                                                                                                                                                                                                                                                                                       └──  let r = {State->(State.trans.e)| all: e in Event
inv4 S:     │                                                                                                                                                                                                                                                                                                                           └──  let r = {State->(State.trans.e)| all e: Event
inv4 S:     │                                                                                                                                                                                                                                                                                                                               └──  let r = {all e: Event |State->(State.trans.e)
inv4 T:     │                                                                                                                                                                                                                                                                                                                                   └──  let r = {all e: Event | State->(State.trans.e)
inv4 T:     │                                                                                                                                                                                                                                                                                                                                       └──  let r = all e: Event | State->(State.trans.e) |  	 		State in Init.^r
inv4 T:     │                                                                                                                                                                                                                                                                                                                                           └──  let r = all e: Event | State->(State.trans.e) |  	 		State in Init.^r
inv1 E:     ├──   
inv3 E:     │   ├──   
RkKikr4CH75HAfbpH M:     │   └──  user added theme options. same as previous submission
inv1 C:     ├──  all s: State | some s.trans
inv2 T:     │   └──  all s: State | one s.~trans
inv2 C:     │       └──  one Init
inv3 O:     │           └──  lone State.trans
inv3 O:     │               └──  all s: State | lone s.trans
inv3 B:     │                   └──  all s: State |one e: Event | lone s.trans.e
inv3 B:     │                       └──  all s: State |one e: Event | lone trans.e
inv3 O:     │                           └──  all s: State |one e: Event | lone s.trans->e
inv3 T:     │                               └──  all s: State |one e: Event | lone s->e in State
inv3 B:     │                                   └──  all s: State |one e: Event | lone s->e
inv4 S:     │                                       └──  all s: State | s^.trans
inv4 S:     │                                           └──  Init^.trans
inv4 S:     │                                               └──  Init^.trans
inv4 T:     │                                                   └──  Init.^trans
inv4 T:     │                                                       └──  Init.^trans in State
inv4 T:     │                                                           └──  State.^trans
inv4 T:     │                                                               └──  all s: State | all e: Event | one Init.^trans implies s->e->s
inv1 S:     │                                                                   └──  some S.trans
inv1 S:     │                                                                       └──  some S.trans
inv1 B:     │                                                                           └──  some State.trans
inv3 S:     │                                                                               └──  all s:State |one e: Event : lone e->s in trans
inv3 T:     │                                                                                   └──  all s:State |one e: Event | lone e->s in trans
inv3 T:     │                                                                                       └──  all s:State |one e: Event | lone trans.e in s.trans
inv3 O:     │                                                                                           └──  all s:State |one e: Event | lone s.trans
inv3 B:     │                                                                                               └──  all s:State |one e: Event | lone s.trans.e
inv3 T:     │                                                                                                   └──  all s:State |some e: Event | s.trans implies lone trans.e
inv3 T:     │                                                                                                       └──  all s:State |some e: Event | s.trans implies lone trans.e->s
inv3 T:     │                                                                                                           └──  all s:State |some e: Event | s.trans implies lone e in trans
inv3 T:     │                                                                                                               └──  all s:State |some e: Event | s.trans implies lone trans.e->s
inv3 T:     │                                                                                                                   └──  all s:State |some e: Event | s.trans implies lone e->s
inv6 S:     │                                                                                                                       └──  s.trans in State
inv6 T:     │                                                                                                                           └──  State.trans in State
inv6 S:     │                                                                                                                               └──  all e: Event |
inv6 S:     │                                                                                                                                   └──  all e: Event |
inv6 S:     │                                                                                                                                       └──  all e: Event |
inv6 S:     │                                                                                                                                           └──  all e: Event |
inv6 S:     │                                                                                                                                               └──  all e: Event |
inv6 S:     │                                                                                                                                                   └──  all e: Event |
inv6 S:     │                                                                                                                                                       └──  all e: Event |
inv6 S:     │                                                                                                                                                           └──  all e: Event |
inv6 S:     │                                                                                                                                                               └──  all e: Event |
inv4 T:     │                                                                                                                                                                   └──  some e: Event | all s: State | Init.trans implies e->s in trans
inv4 T:     │                                                                                                                                                                       └──  some e: Event | all s: State | Init.trans implies s
inv4 T:     │                                                                                                                                                                           └──  some e: Event | all s: State | s in Init.^trans
inv4 T:     │                                                                                                                                                                               └──  some e: Event | all s: State | s in Init.^trans.e
inv4 T:     │                                                                                                                                                                                   └──  some e: Event | all s: State | Init.trans and e->s in trans
inv4 T:     │                                                                                                                                                                                       └──  some e: Event | all s: State | Init.trans implies e->s
inv4 T:     │                                                                                                                                                                                           └──  some e: Event | Init.trans implies *trans.e
inv5 T:     │                                                                                                                                                                                               └──  all s: State | s.trans.s
inv5 T:     │                                                                                                                                                                                                   └──  all s: State | s.trans.s
inv4 T:     │                                                                                                                                                                                                       └──  all s: State | all e: Event | Init.trans.e
inv4 T:     │                                                                                                                                                                                                           └──  all s: State | all e: Event | Init.trans
inv4 T:     │                                                                                                                                                                                                               └──  all s: State | all e: Event | Init.trans implies e->s
inv4 T:     │                                                                                                                                                                                                                   └──  all s: State | all e: Event | Init.trans implies e->s in trans
inv4 T:     │                                                                                                                                                                                                                       └──  all s: State | all e: Event | Init.trans in trans implies e->s in trans
inv4 T:     │                                                                                                                                                                                                                           └──  all s: State | some e: Event | Init.trans in trans implies e->s in trans
inv4 T:     │                                                                                                                                                                                                                               └──  all s: State | some e: Event | Init.trans in trans implies trans.e->s in trans
inv4 T:     │                                                                                                                                                                                                                                   └──  all s: State | some e: Event | Init.trans in trans implies ~trans.e->s in trans
inv4 T:     │                                                                                                                                                                                                                                       └──  all s: State | some e: Event | Init.trans in trans implies trans.e->s in trans
inv4 T:     │                                                                                                                                                                                                                                           └──  all s: State | some e: Event | Init.trans in trans implies trans.e in trans
inv4 T:     │                                                                                                                                                                                                                                               └──  all s: State | some e: Event | Init.trans in trans implies trans.e->s in State
inv4 T:     │                                                                                                                                                                                                                                                   └──  all s: State | some e: Event | Init.trans in trans implies e->s in State
inv4 T:     │                                                                                                                                                                                                                                                       └──  all s: State | some e: Event | Init.trans in trans implies e->s
inv4 T:     │                                                                                                                                                                                                                                                           └──  all s: State | all e: Event | Init.trans in trans implies e->s
inv4 T:     │                                                                                                                                                                                                                                                               └──  all s: State | all e: Event | Init.trans implies e->s
inv4 T:     │                                                                                                                                                                                                                                                                   └──  all s: State | all e: Event | Init.trans implies e->s in trans
inv4 T:     │                                                                                                                                                                                                                                                                       └──  all s: State | all e: Event | Init.trans implies e->s in State
inv4 B:     │                                                                                                                                                                                                                                                                           └──  all s: State | all e: Event | e->s in Init.trans
inv4 O:     │                                                                                                                                                                                                                                                                               └──  all s: State | some e: Event | e->s in Init.trans
inv4 S:     │                                                                                                                                                                                                                                                                                   └──  all s: State | some e: Event | all e->s in Init.trans
inv5 T:     │                                                                                                                                                                                                                                                                                       └──  all s1, s2: State | all e: Event |some n: State| e->n in s1.trans = e->n in s2.trans
inv5 T:     │                                                                                                                                                                                                                                                                                           └──  all s1, s2: State | all e: Event |some n: State| e->n in s1.trans & e->n in s2.trans
inv5 U:     │                                                                                                                                                                                                                                                                                               └──  all disj s1, s2: State | all e: Event |some n: State| e->n in s1.trans implies e->n in s2.trans
inv5 T:     │                                                                                                                                                                                                                                                                                                   └──  all disj s1, s2: State | all e: Event |some n: State| e->n in s1.trans and e->n in s2.trans implies n.~trans.s1 = n.~trans.s2
inv5 U:     │                                                                                                                                                                                                                                                                                                       └──  all disj s1, s2: State | all e: Event |some n: State| e->n in s1.trans and e->n in s2.trans implies e=e
inv5 B:     │                                                                                                                                                                                                                                                                                                           └──  all disj s1, s2: State | all e1, e2: Event |some n: State| e1->n in s1.trans and e2->n in s2.trans implies e1=e2
inv6 T:     │                                                                                                                                                                                                                                                                                                               └──  all e: Event | some trans.e in State.trans
inv6 T:     │                                                                                                                                                                                                                                                                                                                   └──  all e: Event | some trans.e in State.trans
inv5 C:     │                                                                                                                                                                                                                                                                                                                       └──  all s1,s2: State | s1.trans.State = s2.trans.State
inv6 U:     │                                                                                                                                                                                                                                                                                                                           └──  all e: Event | lone State.trans.e
inv6 U:     │                                                                                                                                                                                                                                                                                                                               └──  all e: Event | lone State.trans.e
inv6 O:     │                                                                                                                                                                                                                                                                                                                                   └──  all e: Event | some State.trans.e
inv6 T:     │                                                                                                                                                                                                                                                                                                                                       └──  all e: Event | some State.~trans.e
inv6 U:     │                                                                                                                                                                                                                                                                                                                                           └──  all e: Event | some e->State
inv6 T:     │                                                                                                                                                                                                                                                                                                                                               └──  all e: Event | some e->State in State.trans
inv6 T:     │                                                                                                                                                                                                                                                                                                                                                   └──  all e: Event | some e->State in trans
inv6 U:     │                                                                                                                                                                                                                                                                                                                                                       └──  all e: Event | some e->State
inv6 C:     │                                                                                                                                                                                                                                                                                                                                                           └──  State.trans.State = Event
inv5 C:     │                                                                                                                                                                                                                                                                                                                                                               └──  all s1,s2: State | s1.trans.State = s2.trans.State
inv7 B:     │                                                                                                                                                                                                                                                                                                                                                                   └──  trans.State.Event = Init
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                       └──  some s: State | sin s.^trans.State.Event = Init
inv7 T:     │                                                                                                                                                                                                                                                                                                                                                                           └──  some s: State | s in s.^trans.State.Event = Init
inv7 T:     │                                                                                                                                                                                                                                                                                                                                                                               └──  some trans.State.Event = Init
inv7 B:     │                                                                                                                                                                                                                                                                                                                                                                                   └──  Init = trans.State.Event
inv4 B:     │                                                                                                                                                                                                                                                                                                                                                                                       └──  Init = trans.State.Event
3ibooHTB9bML7a9rS N:     ├──  user added extra characters to pred name
Fouyp6eEwtdYAX6by N:     │   └──  user added extra characters to pred name
HZFcZwbWeLdiN3xCo N:     │       └──  user added extra characters to pred name
inv4 E:     ├──   
inv4 E:     │   └──   
inv2 U:     │       └──  some State
inv2 U:     │           └──  some State
inv1 E:     ├──   
inv1 E:     ├──   
inv1 B:     ├──  all s : State | lone s.trans
inv1 B:     │   └──  all s : State | lone trans.s
inv1 B:     │       └──  all s : State | lone s.trans
inv1 C:     │           └──  all s : State | some s.trans
inv1 C:     │               └──  all s : State | some s.trans
inv2 C:     │                   └──  one Init
inv2 C:     │                       └──  one Init
inv3 O:     │                           └──  all s : State | lone s.trans
inv3 S:     │                               └──  all s : State, e : evento | lone e.(s.trans)
inv3 C:     │                                   └──  all s : State, e : Event | lone e.(s.trans)
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  all s : State | some s.trans
inv4 T:     │       └──  Init.State
inv4 T:     │           └──  Init.Event
inv1 E:     ├──   
inv1 O:     ├──  let r = State.trans | iden in ~r.r
inv1 T:     │   └──  let r = State->trans | iden in ~r.r
inv1 T:     │       └──  all s : State | iden in ~s.s
inv1 T:     │           └──  all s : State | iden in ~s.Event.s
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone(e.(s.trans))
inv4 C:     │           └──  State = Init.(^onlyStates)
inv5 C:     │               └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv6 C:     │                   └──  Event = (State.trans).State
inv5 B:     ├──  State in Event.(State.trans)
inv5 E:     │   └──   
inv5 U:     │       └──  all s : State | Event.(s.trans) in Event.(State.trans)
inv5 T:     │           └──  all s : State | Event.(s.trans)
inv5 O:     │               └──  all s : State, e : Event | some e.(s.trans)
inv5 T:     │                   └──  all s : State, e : Event | e.(s.trans) in State.trans
inv5 U:     │                       └──  all s : State, e : Event | e.(s.trans) in Event.(State.trans)
inv5 T:     │                           └──  trans in State -> State
inv5 T:     │                               └──  trans in Event -> State
inv5 T:     │                                   └──  Event in State.trans -> State.trans
inv5 T:     │                                       └──  trans in State.trans -> State.trans
inv5 T:     │                                           └──  Event in State.trans -> State.trans
inv5 T:     │                                               └──  Event in State -> State
inv5 T:     │                                                   └──  Event in Event -> State
inv5 T:     │                                                       └──  Event in State<:trans
inv5 T:     │                                                           └──  Event in State:>trans
inv5 T:     │                                                               └──  Event in State.trans
inv5 T:     │                                                                   └──  Event in trans.State
pGz5pPWTmCvTErFvY N:     ├──  user added extra characters to pred name
inv4 T:     │   └──  some r1: State->Event | some r2: Event->State | r1.Event->r2 = trans && State in Init.^(r1.r2)
inv4 T:     │       └──  some r1: State->Event | some r2: Event->State | r1.Event->r2 = trans && State in Init.^(r1.r2)
inv4 U:     │           └──  State in Init.^(State->State)
inv4 U:     │               └──  State in Init.^(State->State) or #State = 1
inv4 B:     │                   └──  State in Init.^(State->State) and #State != 1
inv4 U:     │                       └──  State in Init.^(State->State.trans[Event])
inv4 T:     │                           └──  State in Init.trans.^(State->State.trans[Event])
inv4 U:     │                               └──  State in Init.^(State->State.trans[Event])
inv4 U:     │                                   ├──  State in Init.^(State->State.trans[Event])
inv3 T:     │                                   │   └──  (Init.trans)
inv3 T:     │                                   │       └──  Init + Event.(Init.trans) + Event.((Event.(Init.trans)).trans) + Event.((Event.((Event.(Init.trans)).trans)).trans)
inv4 U:     │                                   │           └──  State in Init + Event.(Init.trans) + Event.((Event.(Init.trans)).trans) + Event.((Event.((Event.(Init.trans)).trans)).trans)
inv4 C:     │                                   │               └──  State in Event.(Init.trans) + Event.((Event.(Init.trans)).trans) + Event.((Event.((Event.(Init.trans)).trans)).trans)
oMAZfhHjeWpn7Kvcx M:     │                                   └──  user added theme options. same as previous submission
inv4 U:     │                                       └──  State in Init.^(State->State.trans[Event])
inv1 E:     ├──   
inv1 B:     ├──  some (State.trans & (Event->State))
inv1 B:     ├──  all s:State | some trans.s
inv1 B:     │   └──  some trans.State
inv1 B:     │       └──  lone trans.State
inv1 B:     │           └──  all s:State | lone trans.s
inv1 C:     │               └──  all s:State | some s.trans
inv2 B:     │                   └──  all s:State | Init in s
inv2 C:     │                       └──  one Init
inv2 C:     │                           └──  one Init
inv2 C:     │                               └──  one Init
inv3 O:     │                                   └──  lone State.trans
inv3 O:     │                                       └──  all s:State | lone s.trans
inv3 B:     │                                           └──  all s:State | lone trans.s
inv3 T:     │                                               └──  trans.~trans in iden
inv3 U:     │                                                   └──  all s:State, e:Event | lone s.trans.e
inv3 U:     │                                                       └──  all s:State, e:Event | lone s.trans.e
inv3 T:     │                                                           └──  all s:State, e:Event | s.trans -> lone trans.e
inv3 T:     │                                                               └──  all s:State, e:Event | s.trans lone ->  trans.e
inv3 T:     │                                                                   └──  all s:State, e:Event | trans.e lone ->  s.trans
inv3 U:     │                                                                       └──  lone trans.Event
inv3 U:     │                                                                           └──  lone trans.Event
inv3 U:     │                                                                               └──  lone Event.trans
inv3 T:     │                                                                                   └──  all s,p:State | s.trans in Event & p.trans in Evente implies s=p
inv3 T:     │                                                                                       └──  all s,p:State | s.trans in Event & p.trans in Event implies s=p
inv3 T:     │                                                                                           └──  all s,p:State , e:Event | s.trans in e & p.trans in e implies s=p
inv3 T:     │                                                                                               └──  all s,p:State , e:Event | s.trans in e & p.trans in e implies s=p
inv4 T:     │                                                                                                   └──  State.^Init
inv4 S:     │                                                                                                       └──  All s:State | s.^Init
inv4 S:     ├──  all s:State |
inv1 C:     │   └──  all s:State | some s.trans
inv2 C:     │       └──  one Init
inv2 C:     │           └──  one Init
inv3 O:     │               └──  all s:State | lone s.trans
inv3 O:     │                   └──  all s:State | lone s.trans
inv3 B:     │                       └──  all s:State, e:Event | lone trans.(s->e)
inv3 T:     │                           └──  all s1,s2:State, e:Event | lone  (s1->e->s2) in trans
inv3 T:     │                               └──  all s1,s2:State, e:Event | lone  (s1->e->s2) in trans
inv3 U:     │                                   └──  all s:State| some s2:State | no ((s.trans).s2) - Event
inv3 U:     │                                       └──  all s:State| some s2:State | no (((s.trans).s2) - Event)
inv3 T:     │                                           └──  all e:Event |some s:State | lone e.s.trans
inv3 T:     │                                               └──  all e:Event |some s:State | lone e.s.trans in State
inv3 T:     │                                                   └──  all e:Event |some s:State | lone e.s.trans in State
inv3 T:     │                                                       └──  all e:Event |some s:State | lone e.(s.trans) in State
inv3 C:     │                                                           └──  all e:Event |all s:State | lone e.(s.trans)
inv4 S:     │                                                               └──  States in init.^trans
inv4 S:     │                                                                   └──  State in init.^trans
inv4 T:     │                                                                       └──  State in Init.^trans
inv4 T:     │                                                                           └──  all i :Init | State in i.^trans
inv4 T:     │                                                                               └──  all i :Init | State in ^(i.trans)
inv4 B:     │                                                                                   └──  all i :Init | some e:Event| State in e.^(i.trans)
inv4 B:     │                                                                                       └──  all i :Init | some e:Event| State in e.*(i.trans)
inv4 B:     │                                                                                           └──  all i :Init | some e:Event| State in e.*(i.trans)
inv4 O:     │                                                                                               └──  some e:Event| State in e.^(Init.trans)
inv4 S:     │                                                                                                   └──  some e:Event, some s:State| Init in ^trans.(e->s)
inv1 B:     ├──  some trans.State
inv1 B:     │   └──  all s : State | some trans.s
inv1 S:     │       └──  all s : State | some s.tans
inv1 C:     │           └──  all s : State | some s.trans
inv1 C:     │               └──  all s : State | some s.trans
inv1 C:     │                   └──  all s : State | some s.trans
inv1 C:     │                       └──  all s : State | some s.trans
inv1 C:     │                           └──  all s : State | some s.trans
inv3 T:     │                               └──  lone trans & Event
inv1 C:     │                                   └──  all s : State | some s.trans
inv3 T:     │                                       └──  all s : State | lone s.~trans
inv3 T:     │                                           └──  all s : State | lone ~trans.s
inv3 T:     │                                               └──  all s : State | lone s.~trans
inv1 C:     │                                                   └──  all s : State | some s.trans
inv3 S:     │                                                       └──  one State -> lone Event
inv3 S:     │                                                           └──  some State -> lone Event
inv4 S:     │                                                               └──  for all i : Initial | trans.i
inv4 S:     │                                                                   └──  for all i : Initial | trans.Initial
inv4 S:     │                                                                       └──  for all i : Initial | trans.Initial
inv4 S:     │                                                                           └──  for all i : Initial | trans.Initial
inv4 S:     │                                                                               └──  for all i : Initial | trans.Initial
inv1 C:     │                                                                                   └──  all s : State | some s.trans
inv1 E:     ├──   
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv1 T:     │       └──  iden in trans.~trans
inv1 T:     │           └──  iden in State.trans.~trans
inv1 T:     │               └──  iden in State.trans.~trans.State
inv1 O:     │                   └──  iden in State.trans.~(trans.State)
inv3 O:     │                       └──  all s : State | lone s.trans
inv3 T:     │                           └──  all s : State | lone e : Event | s.e.S
inv3 S:     │                               └──  all s : State | lone e : Event
inv3 O:     │                                   └──  ~(State.trans).(State.trans) in iden
inv3 B:     │                                       └──  (State.trans).~(State.trans) in iden
inv1 C:     ├──  all s: State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s: State | lone Event.(s.trans)
inv3 C:     │           └──  all s: State, e: Event | lone e.(s.trans)
inv3 T:     │               └──  all s: State, e: Event | lone s.trans.~e
inv3 S:     │                   └──  all s: State, e: Event | lone s.trans~.e
inv3 S:     │                       └──  all s: State, e: Event | lone I e.~s.trans
inv3 S:     │                           └──  all s: State, e: Event | lone I e.(s.trans)
inv3 C:     │                               └──  all s: State, e: Event | lone e.(s.trans)
inv3 U:     │                                   └──  all s: State, e: Event | lone e.~(s.trans)
inv3 C:     │                                       └──  all s: State, e: Event | lone ~(s.trans).e
inv3 C:     │                                           └──  all s: State, e: Event | lone e.(s.trans)
inv4 T:     │                                               └──  all s: State | s.^Init
inv4 S:     │                                                   └──  all s: State |
inv4 E:     │                                                       └──   
inv4 T:     │                                                           └──  all s: State | Init.^function
inv4 S:     │                                                               └──  all s: State | Init^.function
inv4 T:     │                                                                   └──  all s: State | Init.^function
inv4 S:     │                                                                       └──  None
inv4 S:     │                                                                           └──  None
inv4 S:     │                                                                               └──  all s: State | Init.^function[s]
inv4 S:     │                                                                                   └──  all s: State | Init.^function(s)
inv4 S:     │                                                                                       └──  None
inv5 C:     │                                                                                           └──  all s1,s2: State | s1.trans.State = s2.trans.State
inv6 B:     │                                                                                               └──  all e: Event | lone e.(State.trans)
inv6 C:     │                                                                                                   └──  all e: Event | some e.(State.trans)
inv6 C:     │                                                                                                       └──  State.trans.State = Event
inv7 S:     │                                                                                                           └──  None
inv7 S:     │                                                                                                               └──  None
inv7 T:     │                                                                                                                   └──  all r : (Init.^function) | some Init in r.^function
inv7 T:     │                                                                                                                       └──  all r : (Init.^function) | lone Init in r.^function
inv7 S:     │                                                                                                                           └──  None
inv7 S:     │                                                                                                                               └──  None
inv7 T:     │                                                                                                                                   └──  all i: Init, r : (i.^function) | some i in r.^function
inv7 S:     │                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                               └──  None
inv1 U:     ├──  all s : State | some trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 C:     │       └──  one Init
inv3 U:     ├──  all s : State, e : Event | lone (s->e & State.trans)
inv3 U:     │   └──  all s : State, e, e1 : Event | s->e in State.trans and s->e1 in State.trans => e = e1
inv3 U:     │       └──  all s : State, disj e, e1 : Event | s->e in State.trans and s->e1 in State.trans => e = e1
inv3 B:     │           └──  all s : State, disj e, e1 : Event | s->e in trans.State and s->e1 in trans.State => e = e1
inv3 B:     │               └──  all s : State, e, e1 : Event | s->e in trans.State and s->e1 in trans.State => e = e1
inv3 B:     │                   └──  all s : State, disj e, e1 : Event | s->e in trans.State and s->e1 in trans.State => e = e1
inv4 T:     │                       └──  all s : State | s in Init.^trans
inv5 U:     │                           └──  all s : State | s.trans.State in Event
inv1 T:     ├──  no s : State | s.trans = none
inv1 T:     │   └──  no s : State | s.trans = none
inv1 O:     │       └──  no s : State | s.trans.Event = none
inv2 S:     │           └──  one s : Init
inv2 C:     │               └──  one s : Init | s in State
inv3 U:     │                   └──  all s : State, e : Event | lone s.trans.e
inv3 C:     │                       └──  all s : State, e : Event | lone e.(s.trans)
inv4 T:     │                           └──  all i : Init | State = i.^trans
inv4 T:     │                               └──  all i : Init | State = i.^trans
inv4 T:     │                                   └──  all i : Init | State = ^(i.trans)
inv4 B:     │                                       └──  all i : Init, e : Event | State = e.^(i.trans)
inv4 B:     │                                           └──  all i : Init, e : Event | State = e.(i.trans)
inv4 T:     │                                               └──  all i : Init, e : Event | State = ^e.(i.trans)
inv4 B:     │                                                   └──  all i : Init, e : Event | State = e.^(i.trans)
inv4 T:     │                                                       └──  State = Init.^trans
inv4 T:     │                                                           └──  State = ^Init.trans
inv4 T:     │                                                               └──  all e : Event | State = ^Init.trans
inv4 S:     │                                                                   └──  all e : Event | State = r.^(Init.trans)
inv4 B:     │                                                                       └──  all e : Event | State = e.^(Init.trans)
inv4 T:     │                                                                           └──  State = ^(Init.trans)
inv4 T:     │                                                                               └──  all e : Event | State = e.^trans
inv4 B:     │                                                                                   └──  all e : Event | State = e.^(Init.trans)
inv4 T:     │                                                                                       └──  all e : Event | State = ^(e.(Init.trans))
inv4 B:     │                                                                                           └──  all e : Event | State = (e.^(Init.trans))
inv4 B:     │                                                                                               └──  all e : Event | State = (e.^(Init.trans)) + Init
inv4 S:     │                                                                                                   └──  None
inv4 S:     │                                                                                                       └──  None
inv4 S:     │                                                                                                           └──  None
inv4 S:     │                                                                                                               └──  None
inv4 B:     │                                                                                                                   └──  all e : Event | State = Init + (e.^(Init.trans))
inv4 T:     │                                                                                                                       └──  all e : Event | State = Init + (e.(^Init.trans))
inv4 S:     │                                                                                                                           └──  all e : Event | State = Init + ((e.Init).^trans))
inv4 T:     │                                                                                                                               └──  all e : Event | State = Init + ((e.Init).^trans)
inv4 T:     │                                                                                                                                   └──  all e : Event | State = Init.^trans
inv4 E:     │                                                                                                                                       └──   
inv5 B:     │                                                                                                                                           └──  all disj s1, s2 : State | some e : Event | one e.(s1.trans) implies one e.(s2.trans)
inv5 B:     │                                                                                                                                               └──  all disj s1, s2 : State | some e : Event | one e.(s1.trans) implies one e.(s2.trans) else no e.(s1.trans)
inv5 B:     │                                                                                                                                                   └──  all disj s1, s2 : State | some e : Event | one e.(s1.trans) implies one e.(s2.trans)
inv5 B:     │                                                                                                                                                       └──  all disj s1, s2 : State | some e : Event | one e.(s1.trans) iff one e.(s2.trans)
inv5 B:     │                                                                                                                                                           └──  all disj s1, s2 : State | some e : Event | some e.(s1.trans) iff some e.(s2.trans)
inv5 B:     │                                                                                                                                                               └──  all disj s1, s2 : State | #(s1.trans) = #(s2.trans)
inv5 O:     ├──  State in State.(trans.Event)
inv5 O:     │   └──  State in State.(trans.Event)
inv1 E:     ├──   
inv4 T:     │   └──  all s : State | s in Init.^trans
inv4 O:     │       └──  all s : State | s in Init.^(Event.trans)
inv1 E:     ├──   
inv1 B:     ├──  some (State.trans & (Event->State))
inv2 C:     │   └──  one Init
inv2 C:     │       └──  one Init
inv1 B:     │           └──  some (State.trans)
inv1 C:     │               └──  trans.State.Event = State
inv3 B:     │                   └──  State.trans.State = Event
inv3 B:     │                       └──  (State.trans.State & Event) = Event
inv3 T:     │                           └──  ~trans.trans in id
inv1 C:     ├──  all s:State | some s.trans:>State
inv2 T:     │   └──  lone State in Init
inv2 U:     │       └──  lone Init
inv2 C:     │           └──  one Init
inv3 T:     │               └──  all s:State, e:Event | lone s.trans <: e
inv3 U:     │                   └──  all s:State, e:Event | lone s <: trans.e
inv3 U:     │                       └──  all s:State, e:Event | lone s <: trans.e
inv3 C:     │                           └──  all s:State, e:Event | lone e <: s.trans
inv4 T:     │                               └──  all s:State | some s.^~trans :> Init
inv4 T:     │                                   └──  all s:State | some (s.^~trans):>Init
inv4 T:     │                                       └──  all s:State | some (s.Event.^~trans):>Init
inv4 B:     │                                           └──  all s:State | some s.trans :> Init
inv4 T:     │                                               └──  all s:State | some s.^trans :> Init
inv4 T:     │                                                   └──  all s:State | some s.^~trans :> Init
inv4 T:     │                                                       └──  all s:State | some s.Event.^~trans :> Init
inv5 S:     │                                                           └──  all s:State, e:Event | all s->e in trans
inv5 T:     │                                                               └──  all s:State, e:Event | some s->e in trans
inv4 T:     │                                                                   └──  all s:State | some (s.Event).^~trans :> Init
inv6 O:     │                                                                       └──  all e:Event | some e.trans :> State
inv6 T:     │                                                                           └──  all e:Event | some State.e.State
inv6 T:     │                                                                               └──  all e:Event | some State.e
inv6 T:     │                                                                                   └──  all e:Event | some State->e in trans
inv6 O:     │                                                                                       └──  all e:Event | some (State.trans).e
inv6 O:     │                                                                                           └──  all e:Event | some (State.trans).e
inv6 C:     │                                                                                               └──  all e:Event | some e.(State.trans)
inv6 C:     │                                                                                                   └──  all e:Event | some e.(State.trans)
inv4 T:     │                                                                                                       └──  all s:State | some Init <: trans.(Event.s)
inv4 T:     │                                                                                                           └──  all s:State | some Init <: (Event.s)
inv4 T:     │                                                                                                               └──  all s:State | some Init <: trans.(Event.s)
inv4 O:     │                                                                                                                   └──  all s:State | some Init <: (trans.Event.s)
inv7 T:     │                                                                                                                       └──  all s:State | some trans.s implies s.~^trans :> Init
inv7 T:     │                                                                                                                           └──  all s:State | some trans.s implies (s.~^trans) :> Init
inv5 S:     │                                                                                                                               └──  all s:State, e:Events | some e.(s.trans)
inv5 O:     │                                                                                                                                   └──  all s:State, e:Event | some e.(s.trans)
inv5 O:     │                                                                                                                                       └──  all s:State, e:Event | some e.(s.trans)
inv6 T:     │                                                                                                                                           └──  all e:Event | e.(State.trans)
inv5 B:     │                                                                                                                                               └──  all s:State, e:Event | lone e.(s.trans)
inv5 O:     │                                                                                                                                                   └──  all s:State, e:Event | some e.(s.trans)
25YgHqaWAmvG8Wim4 M:     │                                                                                                                                                       └──  user added theme options. same as previous submission
inv4 T:     │                                                                                                                                                           ├──  all s:State | s in Init.trans:>State
inv5 C:     │                                                                                                                                                           └──  all disj s1,s2 :State |  no ((s1.trans).State) -((s2.trans).State) and no ((s2.trans).State) - ((s1.trans).State)
inv4 S:     │                                                                                                                                                               └──  let adj = ( all x,y:State | some e:Event | x->e->y in trans )   	^adj
inv4 S:     │                                                                                                                                                                   └──  let adj = ( all x,y:State | some e:Event | x->e->y in trans )   	^adj
inv4 S:     │                                                                                                                                                                       └──  let adj = ( all x,y:State | some e:Event | x->e->y in trans )
inv4 S:     │                                                                                                                                                                           └──  let adj =  {x,y:State | some e:Event | x->e->y in trans
inv4 S:     │                                                                                                                                                                               └──  let adj =  ({x,y:State | some e:Event | x->e->y in trans
inv7 T:     │                                                                                                                                                                                   └──  all s:State | some trans.s implies (s.trans).^Event :> Init
inv7 T:     │                                                                                                                                                                                       └──  all s:State | some trans.s implies ^((s.trans).Event) :> Init
inv7 T:     │                                                                                                                                                                                           └──  all s:State | some trans.s implies ^(s.trans) :> Init
2km3rqSd4vQ5kJYrM M:     │                                                                                                                                                                                               └──  user added theme options. same as previous submission
uMpYPnwNiEMRtoyBS M:     │                                                                                                                                                                                                   └──  user added theme options. same as previous submission
inv1 B:     ├──  some trans
inv1 C:     │   └──  all s:State | some s.trans
inv2 C:     │       └──  one Init
inv3 O:     │           └──  all s:State, e:Event | lone s.trans
inv3 O:     │               └──  all s:State | lone s.trans
inv3 U:     │                   └──  all s:State, e:Event | lone s.trans.e
inv3 T:     │                       └──  all s1, s2:State, e:Event | lone s1->e->s2 in trans
inv3 T:     │                           └──  all s1, s2:State, e:Event | lone (s1->e->s2 in trans)
inv4 B:     │                               └──  all s:State | Init->Event->s in trans
inv4 T:     │                                   └──  all s:State | s in Init.^trans
inv1 E:     ├──   
Mpken94J2756tuKM2 M:     ├──  user added theme options. same as previous submission
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone(e.(s.trans))
inv4 C:     │           └──  State = Init.(^onlyStates)
inv5 C:     │               └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv6 C:     │                   └──  Event = (State.trans).State
inv7 E:     │                       └──   
inv7 T:     │                           └──  all s : State | Init in s.~(trans)
inv7 T:     │                               └──  all s : State | Init in s.^(trans)
inv7 T:     │                                   └──  all s : State | Init in ^(s.trans)
inv7 T:     │                                       └──  all s : State | some (Init & ^(s.trans))
inv7 O:     │                                           └──  all s : State | some (^(s.trans) :> Init)
inv7 O:     │                                               └──  all s : State | some e : Event | (e->Init) in (^(s.trans))
inv7 T:     │                                                   └──  Init in ^(Init.trans)
inv7 B:     │                                                       └──  Init in Event.^(Init.trans)
inv7 O:     │                                                           └──  all s : State | Init in Event.^(s.trans)
inv1 E:     ├──   
inv1 E:     ├──   
inv1 E:     ├──   
inv1 C:     ├──  all s: State | some s.trans
inv2 C:     │   └──  one Init
inv2 C:     │       └──  one Init
inv3 C:     │           └──  all s : State, e: Event | lone e.(s.trans)
inv4 S:     │               └──  None
inv5 C:     │                   └──  all s,r:State | (s.trans).State = (r.trans).State
inv6 C:     │                       └──  all e: Event | some (trans.State).e
inv6 C:     │                           └──  all e: Event | some s: State| e in (s.trans).State
inv7 S:     │                               └──  None
inv7 S:     │                                   └──  None
3EgLKvbJ4mZgTffcF M:     │                                       └──  user added theme options. same as previous submission
inv1 C:     ├──  all s : State | some s.trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 C:     │       └──  one Init
inv3 S:     │           └──  all s: state | f : Event | lone n: State | f->n in s.trans
inv3 S:     │               └──  all s: state | set f : Event | lone n: State | f->n in s.trans
inv3 S:     │                   └──  all s: State | f : Event | lone n: State | f->n in s.trans
inv3 S:     │                       └──  all s: State | e : Event | lone n: State | e->n in s.trans
inv3 C:     │                           └──  all s: State | all e : Event | lone n: State | e->n in s.trans
inv5 C:     │                               └──  all s1, s2: State | s1.trans.State = s2.trans.State
inv6 C:     │                                   └──  State.trans.State = Event
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s : State | one s.trans
inv3 O:     │           └──  all s : State | lone s.trans
inv3 O:     │               └──  all s : State | one s.trans
inv1 S:     │                   └──  all s : State | all e->ns : s.trans | no s.trans
inv1 S:     │                       └──  all s : State | all (e->ns) : s.trans | no s.trans
inv1 T:     │                           └──  all s : State, e : Event | lone e.s.trans
inv3 O:     │                               └──  all s : State | one s.trans
inv1 B:     ├──  some State.trans
QvWWsJokQMwwZodFa N:     │   └──  user added extra characters to pred name
inv1 B:     │       └──  some State.trans
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone(e.(s.trans))
inv4 C:     │           └──  State = Init.(^onlyStates)
inv5 C:     │               └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv6 C:     │                   └──  Event = (State.trans).State
inv1 E:     ├──   
inv1 S:     ├──  all State | trans != none
inv1 T:     │   └──  all s:State | s.trans != none
inv1 T:     │       └──  all s:State | s.trans
inv1 T:     │           └──  all s:State |some e:Event | e in s.trans
inv1 C:     │               └──  all s:State |some e:Event | e.(s.trans) != none
inv2 C:     │                   └──  one Init
inv3 S:     │                       └──  all s:State | all disj e1, e2:Events | e1.(s.trans)!=e2.(s.trans)
inv3 B:     │                           └──  all s:State | all disj e1, e2:Event | e1.(s.trans)!=e2.(s.trans)
inv3 S:     │                               └──  all s:State | all  e1:Event | #(e1.(s.trans))=lone
inv3 S:     │                                   └──  all s:State | all  e1:Event | (e1.(s.trans))=lone
inv3 S:     │                                       └──  all s:State | all  e1:Event | e1.(s.trans)=lone
inv3 O:     │                                           └──  all s:State | all  e1:Event | e1.(s.trans)=1
inv3 O:     │                                               └──  all s:State | all  e1:Event | #(e1.(s.trans))=1
inv3 S:     │                                                   └──  all s:State | all  e1:Event | #(e1.(s.trans))=lone
inv3 O:     │                                                       └──  all s:State | all  e1:Event | #(e1.(s.trans))<1
inv3 O:     │                                                           └──  all  e1:Event | #(e1.(State.trans))<1
inv4 T:     │                                                               └──  all s:State - Init | s in Init.^trans
inv4 T:     │                                                                   └──  all s:State - Init | s in Init.trans
inv4 T:     │                                                                       └──  all s:State - Init |some e:Event| s in e.Init.trans
inv4 B:     │                                                                           └──  all s:State - Init |some e:Event| s in e.(Init.trans)
inv4 T:     │                                                                               └──  all s:State - Init |some e:Event| s in e.(Init.^trans)
inv4 B:     │                                                                                   └──  all s:State - Init |some e:Event| s in e.^(Init.trans)
inv4 B:     │                                                                                       └──  all s:State - Init |some e:Event| s in e.(Init.trans)
inv5 B:     │                                                                                           └──  all s1,s2:State | s1.~(s1.trans) = s2.~(s2.trans)
inv5 O:     │                                                                                               └──  all s1,s2,s3:State | s3.~(s1.trans) = s3.~(s2.trans)
inv6 C:     │                                                                                                   └──  all e:Event | some s1,s2:State | e in s1.~(s2.trans)
inv7 T:     │                                                                                                       └──  all s:State | s.trans=~s.trans
inv7 T:     │                                                                                                           └──  all s:State | s.trans=~s.trans
inv4 B:     │                                                                                                               └──  all s:State - Init |some e:Event| s in e.(Init.trans)
inv3 O:     │                                                                                                                   └──  all  e1:Event | #(e1.(State.trans))<1
inv3 C:     │                                                                                                                       └──  all s:State | all e:Event| lone e.(s.trans)
inv1 S:     ├──  all s: State, some e: State | s.trans = e
inv1 T:     │   └──  all s: State | some e: State | s.trans = e
inv1 T:     │       └──  all s: State | some e: State | s.Event = e
inv7 B:     ├──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 S:     │           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │                           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 T:     │                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 S:     │                                           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                                           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 U:     │                                                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │                                                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 C:     │                                                                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv6 S:     ├──  all e: Event, some s: State | some s.trans[e]
inv4 T:     │   └──  all s: State | s in Init.^trans[Event]
inv1 C:     │       └──  all s: State | some s.trans
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 U:     │       └──  all s : State, e : Event | one (s->e)
inv6 C:     │           └──  Event = (State.trans).State
inv3 B:     │               └──  all s1, s2 : State | lone (s1.trans.s2)
inv4 S:     │                   └──  States = (Init.^trans)
inv4 T:     │                       └──  State = (Init.^trans)
inv5 T:     │                           └──  all s : State, e : Event | s->e in trans
inv5 T:     │                               └──  all s : State, e : Event | s->e in trans
inv3 C:     │                                   └──  all s : State, e : Event | lone(e.(s.trans))
inv7 T:     │                                       └──  all s : State | (some ((Init.^trans) :> s)) implies (some ((s.^trans) :> Init))
inv7 T:     │                                           └──  all s : State | (some ((Init.^trans) :> s)) implies (some ((s.^trans) :> Init))
inv4 T:     │                                               └──  Init.^trans
inv7 T:     ├──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │               └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv1 C:     ├──  all s : State | some Event.(s.trans)
inv3 O:     │   └──  all s : State | lone Event.(s.trans)
inv3 C:     │       └──  all s : State, e : Event | lone e.(s.trans)
inv6 T:     │           └──  Event in State.trans
inv6 T:     │               └──  Event in State.trans
inv6 C:     │                   └──  all e : Event | some s : State  | e->s in State.trans
inv5 O:     │                       └──  State.trans = trans.State
inv5 C:     │                           └──  all s, s1 : State | (s.trans).State = (s1.trans).State
inv4 T:     │                               └──  all s : State, i : Init | i->s in ^trans
inv5 C:     │                                   └──  all s, s1 : State | (s.trans).State = (s1.trans).State
inv5 C:     │                                       └──  all s, s1 : State | (s.trans).State = (s1.trans).State
inv5 C:     │                                           └──  all s, s1 : State | (s.trans).State = (s1.trans).State
inv5 C:     │                                               └──  all s, s1 : State | (s.trans).State = (s1.trans).State
inv6 C:     │                                                   └──  Event in State.trans.State
inv7 B:     │                                                       └──  all n : State-Init | Init in ^(State.trans).n
inv4 T:     │                                                           └──  all s : State, i : Init | i->s in trans.trans
inv4 T:     │                                                               └──  all s : State, i : Init | i->s in trans.trans.trans
inv4 T:     │                                                                   └──  all s : State, i : Init | i->s in ^trans
inv4 T:     │                                                                       └──  all s : State, i : Init | i.trans.Event.trans.s
inv4 B:     │                                                                           └──  all s : State, i : Init | some i.trans.Event.trans.s
inv4 B:     │                                                                               └──  all s : State, i : Init | some (i.trans).Event.(trans.s)
inv4 T:     │                                                                                   └──  trans.trans
inv4 T:     │                                                                                       └──  Event.trans.trans.Event
inv4 T:     │                                                                                           └──  Event.trans
inv4 T:     │                                                                                               └──  trans.trans
inv4 T:     │                                                                                                   └──  trans.Event.trans
inv4 T:     │                                                                                                       └──  trans.trans
inv1 S:     ├──  all s:State | some t:trans
inv1 S:     │   └──  all s:State, some t:trans | t in s
inv1 T:     │       └──  all s:State | some t:trans | t in s
inv1 S:     │           └──  all s:State | some t:trans in s.trans
inv1 T:     │               └──  all s:State | some t:trans | t in s.trans
inv2 C:     │                   └──  one Init
inv1 S:     │                       └──  all s:State | some ss:State | e:Event | e->ss in s.trans
inv1 S:     │                           └──  None
inv1 S:     │                               └──  None
inv1 S:     │                                   └──  None
inv1 S:     │                                       └──  None
inv1 S:     │                                           └──  None
inv1 C:     │                                               └──  all s:State | some s.trans
inv1 S:     │                                                   └──  all s:State | some t:trans
inv1 C:     │                                                       └──  all s:State | some s.trans
inv3 O:     │                                                           └──  all s:State | lone s.trans
inv3 B:     │                                                               └──  all s:State | lone State.~(s.trans)
inv3 C:     │                                                                   └──  all s:State | all e:Event| lone e.(s.trans)
inv4 T:     │                                                                       └──  all s:State | s in Init.^trans
inv4 T:     │                                                                           └──  all s:State | s in Init.(^trans)
inv4 T:     │                                                                               └──  all s:State | s in Init.trans
inv4 O:     │                                                                                   └──  all s:State | s in Event.(Init.trans)
inv4 O:     │                                                                                       └──  all s:State | s in Event.^(Init.trans)
inv4 T:     │                                                                                           └──  all s:State | s in ^Event.(Init.trans)
inv4 O:     │                                                                                               └──  all s:State | s in Event.(Init.trans)
inv4 T:     │                                                                                                   └──  all s:State | s in ^(Event.(Init.trans))
inv4 U:     │                                                                                                       └──  all i:Init | i.trans in State.trans
inv4 T:     │                                                                                                           └──  all i:Init | State in i.trans
inv4 B:     │                                                                                                               └──  all i:Init | State in Event.(i.trans)
inv4 B:     │                                                                                                                   └──  all i:Init | State in Event.^(i.trans)
inv4 T:     │                                                                                                                       └──  all i:Init | State in Event.(i.^trans)
inv4 T:     │                                                                                                                           └──  all i:Init | State in Event.(^i.trans)
inv4 B:     │                                                                                                                               └──  all s:(State-Init) | s in Event.(Init.trans)
inv4 B:     │                                                                                                                                   └──  all s:(State-Init) | s in Event.^(Init.trans)
inv4 T:     │                                                                                                                                       └──  all s:(State-Init) | s in Event.(Init.^trans)
inv4 B:     │                                                                                                                                           └──  all s:(State-Init) | s in Init.(Event.trans)
inv5 U:     │                                                                                                                                               └──  all s:State | State.~(s.trans) in Event
inv5 U:     │                                                                                                                                                   └──  all s:State | State.(s.trans) in Event
inv5 O:     │                                                                                                                                                       └──  all s:State | Event in State.~(s.trans)
inv5 O:     │                                                                                                                                                           └──  all s:State | all e:Event | e in State.~(s.trans)
inv5 U:     │                                                                                                                                                               └──  State.~(State.trans) in Event
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 U:     │       └──  all s:State | lone s'
inv3 T:     │           └──  all s:State | lone s'=s.trans
inv3 O:     │               └──  all s:State | lone s.trans
inv3 S:     │                   └──  all s:s1:s2:State | s->s1 in Trans and s->s2 in Trans implies s1=s2
inv3 S:     │                       └──  all s:s1:s2:State | s->s1 in trans and s->s2 in trans implies s1=s2
inv1 C:     │                           └──  all s:State | some s.trans
inv2 C:     │                               └──  one Init
inv3 T:     │                                   └──  all s:State,e:Event | lone s.e
inv3 T:     │                                       └──  all s:State,e:Event | lone s.e in trans
inv3 U:     │                                           └──  all s:State,e:Event | lone s.trans.e
inv3 O:     │                                               └──  all s:State,e:Event | lone s.trans
inv3 T:     │                                                   └──  all s:State,e:Event | lone s->e in trans
inv3 O:     │                                                       └──  all s:State,e:Event | lone s.trans
inv3 T:     │                                                           └──  all s:State,e:Event | lone e.s.trans
inv3 U:     │                                                               └──  all s:State,e:Event | lone s.trans.e
inv3 T:     │                                                                   └──  all s:State,e:Event | lone s->e in trans
inv3 E:     │                                                                       └──   
inv4 T:     │                                                                           └──  all s:State | State in s.^trans
inv4 T:     │                                                                               └──  all s:State | State in s.^trans.Event
inv3 T:     │                                                                                   └──  all s,s1:State,e:Event | lone s->e->s1 in trans
inv3 B:     │                                                                                       └──  all s,s1:State,e:Event | s->e->s1 in trans
inv3 C:     │                                                                                           └──  all s,s1,s2:State,e:Event | s->e->s1 in trans and s->e->s2 in trans implies s1=s2
inv4 O:     │                                                                                               └──  all s:State | State in s.trans.Event
inv4 B:     │                                                                                                   └──  all s:State | some s.trans
inv4 T:     │                                                                                                       └──  State in Init.trans
inv4 O:     │                                                                                                           └──  State in Init.trans.Event
inv1 C:     │                                                                                                               └──  all s:State | some s.trans
inv2 C:     │                                                                                                                   └──  one Init
inv3 C:     │                                                                                                                       └──  all s,s1,s2:State,e:Event | s->e->s1 in trans and s->e->s2 in trans implies s1=s2
inv3 C:     │                                                                                                                           └──  all s,s1,s2:State,e:Event | s->e->s1 in trans and s->e->s2 in trans implies s1=s2
inv4 B:     │                                                                                                                               └──  some Init.trans
inv4 T:     │                                                                                                                                   └──  some Init.^trans
inv4 T:     │                                                                                                                                       └──  some Init.Event
inv4 O:     │                                                                                                                                           └──  some Init.trans.Event
inv5 T:     │                                                                                                                                               └──  all s,s1:State,e:Event | s->e in trans
inv5 O:     │                                                                                                                                                   └──  all s,s1:State,e:Event | s->e->s1 in trans
inv5 U:     │                                                                                                                                                       └──  all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s3 in trans
inv5 U:     │                                                                                                                                                           └──  all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s2 in trans
inv5 U:     │                                                                                                                                                               └──  all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s3 in trans
inv6 C:     │                                                                                                                                                                   └──  all e:Event | some s1,s2:State | s1->e->s2 in trans
inv7 O:     │                                                                                                                                                                       └──  all e:Event,s1,s2:State | s1->e->s2 in trans implies s2->e->s1 in trans
inv7 O:     │                                                                                                                                                                           └──  all e:Event,s1,s2:State |some e1:Event| s1->e->s2 in trans implies s2->e1->s1 in trans
nQpZfph6fNF3SKWvz M:     │                                                                                                                                                                               └──  user added theme options. same as previous submission
inv1 B:     ├──  some State.trans
inv2 C:     │   └──  one Init
inv1 T:     │       └──  all s:State | s.trans
inv1 C:     │           └──  all s:State | some s.trans
inv3 T:     │               └──  all e: Event, s:State | e in s.trans
inv3 B:     │                   └──  all e: Event, s:State |some s2: State | e->s2 in s.trans
inv3 O:     │                       └──  all e: Event, s:State |one s2: State | e->s2 in s.trans
inv3 U:     │                           └──  all e: Event, s:State | some s1,s2:State |  (s.trans = e->s2 and s.trans = e->s1) implies s1=s2
inv3 B:     │                               └──  all s:State | some s1,s2:State, e:Event |  (s.trans = e->s2 and s.trans = e->s1) implies s1=s2
inv3 C:     │                                   └──  all s:State | all e:Event| lone e.(s.trans)
inv4 T:     │                                       └──  all s: State | s in Init.^trans
inv4 B:     │                                           └──  all s:(State-Init) | s in Init.(Event.trans)
inv4 B:     │                                               └──  all s:(State-Init) | s in Init.^(Event.trans)
inv4 O:     │                                                   └──  all s:State | s in Init.^(Event.trans)
inv4 O:     │                                                       └──  all s:State | s in Init.(Event.trans)
inv4 T:     │                                                           └──  all s:State | s in ^trans
inv4 U:     │                                                               └──  all s:State, s1:State, e:Event | lone s.trans.Event
inv4 U:     │                                                                   └──  all s:State, s1:State, e:Event | lone s.trans.Event
inv4 O:     │                                                                       └──  all s:State | s.^(s.trans) = State
inv4 O:     │                                                                           └──  all s:State | Init.^(s.trans) = s
inv4 T:     │                                                                               └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                   └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                       └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                           └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                               └──  all s:State |some e:Event | Init.^(e->s)
inv3 S:     │                                                                                                   └──  None
inv3 S:     │                                                                                                       └──  None
inv4 T:     │                                                                                                           └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                                               └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                                                   └──  all s:State |some e:Event | Init.^(e->s)
inv4 T:     │                                                                                                                       └──  all s:State |some e:Event | Init.^(e->s)
inv3 C:     │                                                                                                                           └──  all s:State | all e:Event| lone e.(s.trans)
inv4 S:     │                                                                                                                               └──  all s:State |some e:Event | s in e.^(Initial.trans)
inv4 S:     │                                                                                                                                   └──  all s:State |some e:Event | s in e.^(Initial.trans)
inv4 O:     │                                                                                                                                       └──  all s:State |some e:Event | s in e.^(Init.trans)
inv4 T:     │                                                                                                                                           └──  all s:State |some e:Event | s in Init.trans
inv4 O:     │                                                                                                                                               └──  all s:State |some e:Event | e->s in Init.trans
inv4 T:     │                                                                                                                                                   └──  all s:State |some e:Event | e->s in Init.^trans
inv4 O:     │                                                                                                                                                       └──  all s:State |some e:Event | s in e.^(Init.trans)
inv4 B:     │                                                                                                                                                           └──  all s:State-Init |some e:Event | s in e.(Init.trans)
inv4 B:     │                                                                                                                                                               └──  all s:State-Init |some e:Event | s in e.(Init.trans)
inv4 B:     │                                                                                                                                                                   └──  all s:State-Init |some e:Event | s in e.^(Init.trans)
inv4 T:     │                                                                                                                                                                       └──  all s:State-Init |some e:Event | s in ^e.(Init.trans)
inv3 C:     ├──  all s : State, e : Event | lone e.(s.trans)
inv3 C:     │   └──  all s : State, e : Event | lone e.(s.trans)
inv1 C:     │       └──  all s : State | some s.trans
inv2 C:     │           └──  one Init
inv5 S:     │               └──  all s : State | e.(s.trans)
inv5 T:     │                   └──  all s : State | Event.(s.trans)
inv5 T:     │                       └──  all s : State, e : Event | e.(s.trans)
inv5 O:     │                           └──  all s1,s2 : State, e : Event | e.(s1.trans) = e.(s2.trans)
inv1 S:     ├──  all s: State | some x.trans
inv1 C:     │   └──  all s: State | some s.trans
inv1 T:     ├──  iden in trans.Event.State
inv1 T:     │   └──  iden in trans.State.Event
inv1 C:     │       └──  iden[State] in trans.State.Event
inv2 C:     │           └──  one Init
inv3 T:     │               └──  all s : State | (Event.s).(s.Event) in iden
inv3 B:     │                   └──  let st = trans.State | ~st.st in iden
inv3 U:     │                       └──  all s : State, e : Event | lone s.trans.e
inv3 U:     │                           └──  all s : State, e : Event | lone (s->e).trans
inv3 C:     │                               └──  all s : State, e : Event | lone e.(s.trans)
inv4 S:     │                                   └──  let st = Node
inv5 E:     │                                       └──   
inv5 E:     │                                           └──   
inv6 O:     │                                               └──  some s : State | Event in s.trans.State
inv6 O:     │                                                   └──  some s : State | Event in s.trans.State
inv6 C:     │                                                       └──  Event in State.trans.State
inv4 T:     │                                                           └──  ^Init
inv4 S:     │                                                               └──  
inv4 S:     │                                                                   └──  one Init
inv3 T:     │                                                                       └──  all s : State, e : Event | lone e.s.trans
inv3 C:     │                                                                           └──  all s : State, e : Event | lone e.(s.trans)
inv5 C:     │                                                                               └──  all disj s, s1 : State | (s.trans).State = (s1.trans).State
inv1 C:     │                                                                                   └──  iden[State] in trans.State.Event
inv1 C:     │                                                                                       └──  iden[State] in trans.State.Event
kAoWjMxhNHAARrW58 N:     │                                                                                           └──  user added extra characters to pred name
inv1 C:     │                                                                                               └──  iden[State] in trans.State.Event
inv4 T:     │                                                                                                   └──  let x = Init <: trans | State in ~(Event.(State.trans))
inv7 S:     │                                                                                                       └──  all n : State-Init | Init in Node.^trans.n
inv7 T:     │                                                                                                           └──  all n : State-Init | Init in State.^trans.n
inv7 B:     │                                                                                                               └──  all n : State-Init | Init in ^(State.trans).n
inv7 B:     │                                                                                                                   └──  all n : State-Init | Init in ^(State.trans).n
inv1 B:     ├──  some State.trans
inv1 B:     │   └──  some trans.State
inv1 B:     │       └──  some State.trans.State
inv1 S:     │           └──  all State.trans
inv1 T:     │               └──  always State.trans
inv1 T:     │                   └──  State.trans in State
inv1 T:     │                       └──  State.trans
inv1 T:     │                           └──  all s : State | s.trans
inv2 C:     │                               └──  one Init
inv1 T:     │                                   └──  all s : State | s.trans
inv1 T:     │                                       └──  all s : State | s.trans in State
inv1 T:     │                                           └──  all s1 : State | some s2 : State | s1 -> s2 in trans
inv1 S:     │                                               └──  all s1 : State , some s2 : State | s1 -> s2 in trans
inv4 T:     │                                                   └──  State.^trans in State
inv4 E:     │                                                       └──   
vsWM9mY27Q6xBegNk M:     │                                                           └──  user added theme options. same as previous submission
inv1 O:     ├──  all s1, s2:State | some e:Event | s1->e->s2 in trans
inv1 S:     │   └──  all s1, s2:State | some e:Event | (s1->e->s2 in trans and s1 not s2)
inv1 O:     │       └──  all s1, s2:State | some e:Event | (s1->e->s2 in trans and s1 != s2)
inv1 T:     │           └──  all s1, s2:State | some e:Event | (s1->e->s2 in trans and e not in iden)
inv1 T:     │               └──  all s1, s2:State | some e:Event | (s1->e->s2 in trans and e not in iden)
inv1 T:     │                   └──  all s1, s2:State | some e:Event | (s1->e->s2 in trans and s1.~s2 not in iden)
inv1 O:     │                       └──  all s1, s2:State | some e:Event | s1->e->s2 in trans
inv1 B:     │                           └──  all s1, s2:State | some e:Event | s1->e->s2 in trans implies s1!=s2
inv2 C:     │                               └──  one s:State | s in Init
inv3 U:     │                                   └──  all s1, s2:State, e:Event | lone s1->e->s2
inv3 B:     │                                       └──  all s1, s2:State | one e:Event | lone s1->e->s2
inv4 B:     │                                           └──  all i:Init, s:State, e:Event | i->e->s in trans
inv4 B:     │                                               └──  all i:Init, s:State, e:Event | i!=s and i->e->s in trans
inv5 O:     │                                                   └──  all s1, s2:State, e:Event | s1->e->s2 in trans
inv5 O:     │                                                       └──  all s1, s2:State, e:Event | s1->e->s2 in trans and s1->e->s1 in trans
inv5 O:     │                                                           └──  all s:State, e:Event | s->e->s in trans
inv7 T:     │                                                               └──  all s1, s2:State, e:Event | s1->e->s1 in trans implies ~e
inv7 T:     │                                                                   └──  all s1, s2:State, e:Event | s1->e->s1 in trans implies ~(s1->e->s1)
inv7 O:     │                                                                       └──  all s1, s2:State, e:Event | s1->e->s2 in trans implies s2->e->s1 in trans
inv1 B:     ├──  some trans
inv1 C:     │   └──  all s : State | some s.trans
inv1 B:     │       └──  some State.trans
inv1 B:     │           └──  some State<:trans
inv1 T:     │               └──  some State:>trans
inv1 U:     │                   └──  all s : State | some State.trans
inv1 C:     │                       └──  all s : State | some s.trans
inv2 C:     │                           └──  one Init
inv3 U:     │                               └──  all s : State | lone (s.trans).Event
inv3 U:     │                                   └──  all s : State | lone (s<:trans).Event
inv3 U:     │                                       └──  all s : State, e : Event | lone s.(e.trans)
inv3 C:     │                                           └──  all s : State, e : Event | lone e.(s.trans)
inv4 S:     │                                               └──  all i : Initial | State in i.trans
inv4 S:     │                                                   └──  all i : Initial | State in i.trans
inv4 T:     │                                                       └──  all i : Init | State in i.trans
inv4 T:     │                                                           └──  all i : Init | State in i<:trans
inv4 T:     │                                                               └──  some i : Init | State in i<:trans
inv4 S:     │                                                                   └──  all s : State | some Initial.^trans
inv4 T:     │                                                                       └──  all s : State | some Init.^trans
inv4 O:     │                                                                           └──  all s : State | some s.(Init.trans)
inv4 B:     │                                                                               └──  all s : State | some s.(Init<:trans)
inv4 T:     │                                                                                   └──  all s : State | some s.(Init:>trans)
inv4 B:     │                                                                                       └──  all s : State | some s.(Init<:trans)
inv4 B:     │                                                                                           └──  all s : State | some s.(Init<:trans:>State)
inv4 B:     │                                                                                               └──  all s : State | some s.(Init <: trans)
inv4 O:     │                                                                                                   └──  all s : State | some (Init <: trans).s
inv4 B:     │                                                                                                       └──  all s : State, i : Init | some (i <: trans).s
inv4 B:     │                                                                                                           └──  all s : State, i : Init | some s.(i <: trans)
inv4 B:     │                                                                                                               └──  all s : State, i : Init | some (i <: trans).s
inv4 O:     │                                                                                                                   └──  all s : State | some (Init <: trans).s
inv4 B:     │                                                                                                                       └──  all s : State | some s.(Init <: trans)
inv4 O:     │                                                                                                                           └──  all s : State | some s.(Init . trans)
inv4 B:     │                                                                                                                               └──  all s : State | some s.(Init <: trans)
inv4 O:     │                                                                                                                                   └──  all s : State | some Init.( s.trans)
inv4 O:     │                                                                                                                                       └──  all s : State | some Init<:(s.trans)
inv4 B:     │                                                                                                                                           └──  all s : State | some Init.(s<:trans)
inv4 O:     │                                                                                                                                               └──  all s : State | some (Init.trans).s
inv6 C:     │                                                                                                                                                   └──  all e : Event | some e.(State.trans)
inv7 T:     │                                                                                                                                                       └──  all s : State | s.*(trans + ~trans)
inv7 T:     │                                                                                                                                                           └──  all s : State | some (s + ~s)
inv4 T:     │                                                                                                                                                               └──  State in Init.trans
inv4 T:     │                                                                                                                                                                   └──  all s : State | s.(Init.trans)
inv4 O:     │                                                                                                                                                                       └──  all s : State | some s.(Init.trans)
inv4 B:     │                                                                                                                                                                           └──  all s : State | some s.(Init<:trans)
inv4 T:     │                                                                                                                                                                               └──  all s : State | Init.*(s.trans)
inv4 U:     │                                                                                                                                                                                   └──  all s : State | some Init.*(s.trans)
inv4 B:     │                                                                                                                                                                                       └──  all s : State | State in Init.*(s.trans)
inv4 B:     │                                                                                                                                                                                           └──  all s : State | State in Init.*(s.trans)
inv4 T:     │                                                                                                                                                                                               └──  all s : State | State in Init.*(s<:trans)
inv4 O:     │                                                                                                                                                                                                   └──  all s : State | State in Init.^(s.trans)
inv4 B:     │                                                                                                                                                                                                       └──  all s : State | State in Init.*(s.trans)
inv4 S:     │                                                                                                                                                                                                           └──  let t = {all x,y : State, some z : Event | x->z->y in trans
inv4 S:     │                                                                                                                                                                                                               └──  let t = {all x,y : State, some z : Event | x->z->y in trans
inv4 S:     │                                                                                                                                                                                                                   └──  let t = {all x,y : State, some z : Event | x->z->y in trans
inv4 S:     │                                                                                                                                                                                                                       └──  let t = {all x,y : State, some z : Event | x->z->y in trans
inv4 S:     │                                                                                                                                                                                                                           └──  let t = {all x,y : State, some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                                                                                                               └──  let t = {all x,y : State | some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                                                                                                                   └──  let t = {all x,y : State | some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                                                                                                                       └──  let t = {all x,y : State | some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                                                                                                                           └──  let t = {all x,y : State | some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                                                                                                                               └──  let t = {all x,y : State | some z : Event | x->z->y in trans
inv4 C:     │                                                                                                                                                                                                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv5 S:     │                                                                                                                                                                                                                                                       └──  all s : State | some Event(s.trans)
inv5 S:     │                                                                                                                                                                                                                                                           └──  all s : State | some Event(s.trans)
inv5 B:     │                                                                                                                                                                                                                                                               └──  all s : State | some Event.(s.trans)
inv5 O:     │                                                                                                                                                                                                                                                                   └──  all s : State | some (s.trans).Event
inv5 O:     │                                                                                                                                                                                                                                                                       └──  all s : State, e : Event | some (s.trans).e
inv5 T:     │                                                                                                                                                                                                                                                                           └──  all s : State, e : Event | some (s.trans)<:e
inv5 O:     │                                                                                                                                                                                                                                                                               └──  all s : State, e : Event | some (s.trans).e
inv5 O:     │                                                                                                                                                                                                                                                                                   └──  all s : State, e : Event | some e.(s.trans)
inv5 T:     │                                                                                                                                                                                                                                                                                       └──  all s : State | Event in s.trans
inv5 T:     │                                                                                                                                                                                                                                                                                           └──  all s : State | Event in s<:trans
inv5 B:     │                                                                                                                                                                                                                                                                                               └──  all s : State | some Event.(s.trans)
inv5 B:     │                                                                                                                                                                                                                                                                                                   └──  all s : State | some Event.(s.trans)
inv5 O:     │                                                                                                                                                                                                                                                                                                       └──  all s : State | some Event.(s<:trans)
inv5 B:     │                                                                                                                                                                                                                                                                                                           └──  all s : State | some Event.(s.trans)
inv7 O:     │                                                                                                                                                                                                                                                                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                                                                                                                                                                                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 T:     ├──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv7 T:     │   └──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv4 B:     │       └──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv4 B:     │           └──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv4 B:     │               └──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv4 B:     │                   └──  let adj = {x,y : State | some e : Event | x->e->y in trans
inv1 E:     ├──   
inv1 E:     ├──   
inv4 T:     ├──  all  i:Init  |  no (State - i.*(trans) )
inv4 T:     │   └──  all  i:Init  |  no (State - i.*(trans) )
inv5 E:     │       └──   
inv4 E:     │           └──   
inv4 E:     │               └──   
inv7 C:     │                   └──  
inv7 O:     │                       └──  
inv5 E:     │                           └──   
inv4 S:     │                               └──  all  s:State-Init |some e:Event |  some (trans^.(e->s) &Init)
inv4 T:     │                                   └──  all  s: State-Init |some e:Event |  some (trans.^(e->s) &Init)
inv4 S:     │                                       └──  all  s: State |some e:Event |  some (trans^.(e->s) & Init )
inv5 E:     │                                           └──   
inv4 S:     │                                               └──  all  s: State |some e:Event |  no (trans^.(e->s) & Init )
inv4 T:     │                                                   └──  all  s: State |some e:Event |  some (trans.(e->s) & Init )
inv4 T:     │                                                       └──  all  s:State |some e:Event |  some (trans.(e->s) & Init )
inv5 E:     │                                                           └──   
inv4 S:     │                                                               └──  None
inv4 S:     │                                                                   └──  None
inv4 S:     │                                                                       └──  None
inv4 S:     │                                                                           └──  all s:State-Init |some e:Event | no (Init& tran^.(e->s))
inv5 E:     │                                                                               └──   
inv1 T:     ├──  trans.State = State
inv1 T:     │   └──  trans.State = State
inv1 C:     │       └──  (trans.State).Event = State
inv1 C:     │           └──  trans.State.Event = State
inv2 C:     │               └──  one Init
inv3 B:     │                   └──  lone State.trans.State
inv3 B:     │                       └──  all s : State | lone s.trans.State
inv3 O:     │                           └──  all s : State | lone s.trans
inv3 O:     │                               └──  all e : Event | lone e<:State.trans
inv3 O:     │                                   └──  all e : Event | lone e<:(State.trans)
inv3 U:     │                                       └──  all e : Event | lone e<:(State.trans.State)
inv3 C:     │                                           └──  all e : Event, s : State | lone e<:s.trans
inv4 T:     │                                               └──  Init.(*trans) = State
inv4 T:     │                                                   └──  Init.(*trans) = State
inv4 T:     │                                                       └──  Init.(*trans.(State.Event)) = State
inv5 C:     │                                                           └──  all s : State | s.trans.State = State.trans.State
inv6 C:     │                                                               └──  State.trans.State = Event
inv4 S:     │                                                                   └──  Init.*trans_bin = State
inv4 B:     │                                                                       └──  Init.*trans_bin = State
inv4 B:     │                                                                           └──  Init.^trans_bin = State
inv4 B:     │                                                                               └──  Init.*trans_bin = State
inv4 T:     │                                                                                   └──  Init.*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                       └──  Init.*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                           └──  Init.*{s1 : State, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                               └──  Init.^{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                   └──  Init.*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                       └──  (Init.*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                           └──  all i : Init | i.*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                               └──  all i : Init | i.^{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                   └──  all i : Init | i.^{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                       └──  all i : Init | i.*{s1, s2 : State | s1->Event->s2 in trans
inv4 T:     │                                                                                                                           └──  all i : Init, s : State | some i.*{s1, s2 : State | s1->Event->s2 in trans
inv4 T:     │                                                                                                                               └──  all i : Init, s : State | some i.(*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                                   └──  all i : Init, s : State | s in i.(*{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                                       └──  all i : Init, s : State | s in i.(^{s1, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                                           └──  all i : Init, s : State | s in i.(^{s1, s2 : State | some e : Event | s1->e->s2 in trans
inv4 B:     │                                                                                                                                               └──  all i : Init | i.(^{s1, s2 : State | some e : Event | s1->e->s2 in trans
inv4 B:     │                                                                                                                                                   └──  all i : Init | i.(^{s1, s2 : State |s1->Event->s2 in trans
inv4 B:     │                                                                                                                                                       └──  all i : Init | i.(^{s1, s2 : State | s1->Event->s2 in trans
inv4 U:     │                                                                                                                                                           └──  all i : Init | i.(^{s1, s2 : State | s1->Event->s2 in trans
inv4 T:     │                                                                                                                                                               └──  {s1 : State, s2 : State | s1->Event->s2 in trans
inv4 S:     │                                                                                                                                                                   └──  Initial.{s1 : State, s2 : State | s1->Event->s2 in trans
inv4 B:     │                                                                                                                                                                       └──  Init.{s1 : State, s2 : State | s1->Event->s2 in trans
inv4 O:     │                                                                                                                                                                           └──  Init.{s1 : State, s2 : State | some e : Event | s1->e->s2 in trans
inv4 S:     │                                                                                                                                                                               └──  let trans_bin = {s1 : State, s2 : State | some s1.trans.s2
inv4 U:     │                                                                                                                                                                                   └──  let trans_bin = {s1 : State, s2 : State | some s1.trans.s2
inv4 U:     │                                                                                                                                                                                       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv4 C:     │                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                               └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                               └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                               └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                                                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                               └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                                                                       └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                                               └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv4 C:     │                                                                                                                                                                                                                                                                   └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                                                       └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                                                                           └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                                               └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                                                                                                   └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                                                       └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                                                           └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                                                                                                               └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                                                                   └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                                                                       └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                                                                                           └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                                                                                               └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                                                                                                                                   └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 U:     │                                                                                                                                                                                                                                                                                                                       └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv1 E:     ├──   
inv2 C:     ├──  one Init
inv1 B:     │   └──  some State.trans
inv1 B:     │       └──  some (State.trans & (Event->State))
inv1 B:     │           └──  some (State.trans & (Event->State))
inv1 T:     │               └──  State = trans.(Event->State)
inv1 O:     │                   └──  State = trans.Event.State
inv1 C:     │                       └──  State = trans.State.Event
inv6 C:     │                           └──  Event in State.trans.State
inv5 T:     │                               └──  {state: State, event: Event | some event.(state.trans)
inv5 O:     │                                   └──  {state: State, event: Event | some event.(state.trans)
inv7 B:     │                                       └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 O:     │                                           └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv7 B:     │                                               └──  all s: Event.(State.trans) | Init in ^{x,y: State | some x.trans.y
inv7 B:     │                                                   └──  all s: Event.(State.trans) | s in Init.^{x,y: State | some x.trans.y
inv5 C:     │                                                       └──  all disj s, ss: State | s.trans.State = ss.trans.State
inv4 C:     │                                                           └──  Init.^{x,y: State | some x.trans.y
inv3 C:     │                                                               └──  all s: State | ~(s.trans).(s.trans) in iden
inv2 C:     │                                                                   └──  one Init
inv1 C:     │                                                                       └──  trans.State.Event = State
inv7 O:     │                                                                           └──  all s: Event.(State.trans) | Init in s.^{x,y: State | some x.trans.y
inv7 T:     │                                                                               └──  all s: Event.(State.trans) | Init in Event.(s.~trans)
inv7 T:     │                                                                                   └──  all s: Event.(State.trans) | Init in (s.~trans).Event
inv7 T:     │                                                                                       └──  all s: Event.(State.trans) | Init in (^trans.State.Event)
inv7 T:     ├──  all s : State | Init in ^(~trans.s)
inv7 T:     │   └──  all s : State | Init in ^(~trans<:s)
inv7 T:     │       └──  all s : State | Init in ^(~trans)
inv7 T:     │           └──  all s : State | Init in ^(~s.trans)
inv7 T:     │               └──  all s : State | Init in ^(~s<:trans)
inv7 T:     │                   └──  all s : State | Init in ~(^s<:trans)
inv7 S:     │                       └──  all s : State | Init in ~(^strans)
inv7 T:     │                           └──  all s : State | Init in ~(^s.trans)
inv7 T:     │                               └──  all s : State | Init in ~(^s)
inv7 T:     │                                   └──  all s : State | Init in ~s
inv7 T:     │                                       └──  all s : State | some ~trans
inv7 T:     │                                           └──  all s : State | some ~s.trans
inv7 T:     │                                               └──  all s : State | some ~s<:trans
inv7 T:     │                                                   └──  all s : State | some ~State
inv7 T:     │                                                       └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 T:     │                                                           └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv5 T:     │                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv5 T:     │                                                                       └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv5 T:     │                                                                           └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 O:     │                                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                       └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 O:     │                                                                                           └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                       └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                           └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv1 E:     ├──   
inv1 U:     ├──  all s : State | some trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 U:     │       └──  lone Init
inv2 C:     │           └──  one Init
inv3 O:     │               └──  all s : State | one s.trans
inv3 O:     │                   └──  all s : State, e : Event | one s.(e.trans)
inv3 O:     │                       └──  all s : State, e : Event | one e.(s.trans)
inv3 C:     │                           └──  all s : State, e : Event | lone e.(s.trans)
inv1 C:     │                               └──  all s : State | some s.trans
inv3 C:     │                                   └──  all s : State, e : Event | lone e.(s.trans)
inv4 S:     │                                       └──  all s : State
inv5 S:     │                                           └──  all s : States
inv4 S:     │                                               └──  all s : State | one Intit
inv4 B:     │                                                   └──  all s : State | one Init
inv4 B:     │                                                       └──  State in Init
inv4 U:     │                                                           └──  Init in State
inv4 B:     │                                                               └──  Init in Event
inv4 B:     │                                                                   └──  State in Init
inv1 E:     ├──   
inv1 B:     ├──  lone trans
inv2 S:     │   └──  on Init
inv1 B:     │       └──  lone trans
inv1 B:     │           └──  all s: State | lone s.trans
inv1 S:     │               └──  lone s.trans
inv1 B:     │                   └──  lone State.trans
inv1 B:     │                       └──  lone trans
inv3 T:     │                           └──  lone State.Event
inv3 T:     │                               └──  lone State.Init
inv3 S:     │                                   └──  lone State.trans.Event
inv3 T:     │                                       └──  lone State.~trans.Event
inv1 B:     │                                           └──  lone trans
inv2 C:     ├──  one Init
inv1 C:     │   └──  trans.State.Event = State
inv3 B:     │       └──  Init.^{x,y: State | some (x.trans).y
inv4 C:     │           └──  Init.^{x,y: State | some (x.trans).y
inv4 C:     │               └──  Init.^{x,y: State | some (x.trans).y
inv3 U:     │                   └──  all e : Event | lone trans.e
inv3 U:     │                       └──  all s: State, e: Event | lone s.trans.e
inv3 U:     │                           └──  all s: State | iden & (Event->State) in (s.trans).~(s.trans)
inv3 U:     │                               └──  all s: State | (iden & (Event->State)) in (s.trans).~(s.trans)
inv3 B:     │                                   └──  all s: State | (iden & (Event->Event)) in (s.trans).~(s.trans)
inv3 U:     │                                       └──  all s: State, e: Event | (iden & (s->e)) in (s.trans).~(s.trans)
inv3 B:     │                                           └──  all s: State | (iden & (Event->Event)) in (s.trans).~(s.trans)
inv3 T:     │                                               └──  all s: State | (~s.trans).(s.trans) in iden
inv3 T:     │                                                   └──  all s: State | (~s.trans).(s.trans) in iden
inv3 C:     │                                                       └──  all s: State | ~(s.trans).(s.trans) in iden
inv4 C:     │                                                           └──  Init.^{x,y: State | some (x.trans).y
inv3 O:     │                                                               └──  ~(State.trans).(State.trans) in iden
inv3 C:     │                                                                   └──  all s: State | ~(s.trans).(s.trans) in iden
inv3 C:     │                                                                       └──  all s: State | ~(s.trans).(s.trans) in iden
inv4 C:     │                                                                           └──  Init.^{x,y: State | some x.trans.y
inv5 C:     │                                                                               └──  all s, ss: State | s.trans.State = ss.trans.State
inv5 C:     │                                                                                   └──  all s, ss: State | s.trans.State = ss.trans.State
inv6 C:     │                                                                                       └──  Event in State.trans.State
inv7 B:     ├──  all s: State | s in s.^{x, y: State | some (x.trans).y
inv7 B:     │   └──  all s: State | s in {x, y: State | some (x.trans).y
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone(e.(s.trans))
inv4 T:     │           └──  all s : State | some (s.~(Init.^trans))
inv4 T:     │               └──  all s : State | some (s.~(Init.^trans))
inv6 C:     │                   └──  Event = (State.trans).State
inv4 T:     │                       └──  all s : State | some (s.~(Init.^trans))
inv4 T:     │                           └──  all s : State | some (s.~(Init.^trans))
inv4 T:     │                               └──  all s : State | s in (Init.^trans)
inv4 T:     │                                   └──  all s : State | s in (Init.trans)
inv5 T:     │                                       └──  all s : State | Event = s.trans
inv1 E:     ├──   
inv1 C:     │   └──  all s: State | some s.trans
inv2 E:     │       └──   
inv2 C:     │           └──  one Init
inv3 S:     │               └──  all s: State, e: Event | lone s.tans.e
inv3 U:     │                   └──  all s: State, e: Event | lone s.trans.e
inv3 C:     │                       └──  all s: State, e: Event | lone e.(s.trans)
inv3 O:     │                           └──  all s: State, e: Event | one e.(s.trans)
inv3 C:     │                               └──  all s: State, e: Event | lone e.(s.trans)
inv4 E:     │                                   └──   
inv4 T:     │                                       └──  Init.^trans = State
inv4 T:     │                                           └──  Event.Init.^trans = State
inv4 T:     │                                               └──  Event.(Init.^trans) = State
inv4 T:     │                                                   └──  Init.trans
inv4 T:     │                                                       └──  Init.trans.Event
inv4 T:     │                                                           └──  Event.(Init.trans)
inv4 O:     │                                                               └──  Event.(Init.trans) = State
inv4 O:     │                                                                   └──  Event.^(Init.trans) = State
inv4 T:     │                                                                       └──  Event.(Init.^trans) = State
inv4 O:     │                                                                           └──  (Init.^(Event.trans)) = State
inv4 T:     │                                                                               └──  (Init.trans) = State
inv4 T:     │                                                                                   └──  (Init.*trans) = State
inv4 T:     │                                                                                       └──  (Init.^trans) = State
inv4 T:     │                                                                                           └──  (univ.^Init.trans) = State
inv4 O:     │                                                                                               └──  (univ.^(Init.trans)) = State
inv4 O:     │                                                                                                   └──  (Event.^(Init.trans)) = State
inv4 O:     │                                                                                                       └──  (Event.(Init.trans)) = State
inv4 S:     │                                                                                                           └──  range[(Init.trans)] = State
inv4 O:     │                                                                                                               └──  Init.trans.State = State
inv4 T:     │                                                                                                                   └──  Event.Init.trans = State
inv4 O:     │                                                                                                                       └──  Event.(Init.trans) = State
inv4 T:     │                                                                                                                           └──  Event.trans = State
inv4 T:     │                                                                                                                               └──  Event.trans
inv4 T:     │                                                                                                                                   └──  Event.State.trans
inv4 T:     │                                                                                                                                       └──  Event.(Init.trans)
inv4 T:     │                                                                                                                                           └──  State.trans
inv4 T:     │                                                                                                                                               └──  Init.trans
inv4 T:     │                                                                                                                                                   └──  ^(Init.trans)
inv4 T:     │                                                                                                                                                       └──  Event.^(Init.trans)
inv4 O:     │                                                                                                                                                           └──  Event.^(Init.trans) = State
inv4 T:     │                                                                                                                                                               └──  Event.^(Init.trans)
inv4 T:     │                                                                                                                                                                   └──  Init.trans = State
inv4 O:     │                                                                                                                                                                       └──  Init.trans.State = State
inv4 T:     │                                                                                                                                                                           └──  Event.Init.trans = State
inv4 O:     │                                                                                                                                                                               └──  Event.(Init.trans) = State
inv4 T:     │                                                                                                                                                                                   └──  ^Event.(Init.trans) = State
inv4 S:     │                                                                                                                                                                                       └──  Event^.(Init.trans) = State
inv4 O:     │                                                                                                                                                                                           └──  Event.^(Init.trans) = State
inv4 T:     │                                                                                                                                                                                               └──  Event.^trans = State
inv4 O:     │                                                                                                                                                                                                   └──  Event.^(Init.trans) = State
inv4 O:     │                                                                                                                                                                                                       └──  Event.(Init.trans) = State
inv4 T:     │                                                                                                                                                                                                           └──  Init.trans.*Event = State
inv4 T:     │                                                                                                                                                                                                               └──  Init.*trans = State
inv4 T:     │                                                                                                                                                                                                                   └──  trans = State
inv4 T:     │                                                                                                                                                                                                                       └──  trans.*Init = State
inv4 T:     │                                                                                                                                                                                                                           └──  Init.^trans = State
inv4 T:     │                                                                                                                                                                                                                               └──  Init.trans = State
inv4 T:     │                                                                                                                                                                                                                                   └──  (Init.trans).*Event = State
inv4 O:     │                                                                                                                                                                                                                                       └──  Event.(Init.trans) = State
inv4 O:     │                                                                                                                                                                                                                                           └──  Event.*(Init.trans) = State
inv4 O:     │                                                                                                                                                                                                                                               └──  Event.^(Init.trans) = State
inv4 T:     │                                                                                                                                                                                                                                                   └──  all s: State | some i: Init | s in i.^trans
inv4 T:     │                                                                                                                                                                                                                                                       └──  all s: State | some i: Init | s in Event.i.^trans
inv4 O:     │                                                                                                                                                                                                                                                           └──  all s: State | some i: Init | s in Event.(i.trans)
inv4 O:     │                                                                                                                                                                                                                                                               └──  all s: State | some i: Init | s in Event.^(i.trans)
inv4 O:     │                                                                                                                                                                                                                                                                   └──  all s: State | some i: Init | s in (i.trans.Event)
inv4 T:     │                                                                                                                                                                                                                                                                       └──  all s: State | some i: Init | s in (i.*trans.Event)
inv4 T:     │                                                                                                                                                                                                                                                                           └──  all s: State | some i: Init | s in (Event.^i.trans)
inv4 O:     │                                                                                                                                                                                                                                                                               └──  all s: State | some i: Init | s in Event.^(i.trans)
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 U:     │       └──  lone Init
inv2 T:     │           └──  lone Init.State
inv2 T:     │               └──  all s : State | lone s.Init
inv2 C:     │                   └──  one Init
inv3 C:     │                       └──  all s : State, e : Event | lone (e.(s.trans))
inv4 T:     │                           └──  all s1, s2 : State | (s1 in Init) implies(s2 in s1.^trans)
inv4 T:     │                               └──  all s1, s2 : State | (s1 in Init) implies(s2 in (s1.^trans))
inv4 T:     │                                   └──  all s1, s2 : State | (s1 in Init) implies (s2 in (s1.^trans))
inv4 T:     │                                       └──  all s1, s2 : State , e : Event | (s1 in Init) implies (s2 in (s1.e.^trans))
inv4 T:     │                                           └──  all s1, s2 : State , e : Event | (s1 in Init) implies (s2 in (e.(s1.^trans)))
inv4 T:     │                                               └──  all s1, s2 : State | (s1 in Init) implies (s2 in (s1.^trans))
inv6 C:     │                                                   └──  Event = (State.trans).State
inv1 B:     ├──  some State.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  lone Event.(State.trans)
inv2 U:     ├──  lone Init
inv3 B:     │   └──  all s : State | some e : Event | lone (s->e)
inv5 T:     │       └──  all s : State | (s.trans) = Event
inv5 B:     │           └──  State.trans = Event->State
inv5 T:     │               └──  all s : State | (s.trans) = Event
inv5 O:     │                   └──  trans:>State = Event<:trans
inv1 E:     ├──   
inv1 T:     ├──  always State.trans
inv1 T:     │   └──  all s:State | s.trans
inv1 B:     │       └──  all s:State | lone s.trans
inv1 T:     │           └──  State.trans
inv1 B:     │               └──  lone State.trans
inv1 B:     │                   └──  some State.trans
inv1 C:     │                       └──  all s:State | some s.trans
inv2 S:     │                           └──  all s:State | one s { Event.(s.trans) in Event.(State.trans)
inv1 C:     │                               └──  all s:State | some s.trans
inv2 B:     │                                   └──  one s:State | { Event.(s.trans) in Event.(State.trans)
inv2 S:     │                                       └──  one s:State | all s2.State | s not in Event.(s2.trans)
inv2 S:     │                                           └──  one s:State | all s2.State | s not in Event.(s2.trans)
inv2 C:     │                                               └──  one Init
inv3 T:     │                                                   └──  all s:State | lone s.(~trans)
inv3 T:     │                                                       └──  all s:State | lone s.~trans
inv3 O:     │                                                           └──  all s:State | lone s.trans
inv3 O:     │                                                               └──  all s:State | lone s.trans
inv3 S:     │                                                                   └──  all s:State | all e:Event |
inv3 T:     │                                                                       └──  all s:State | all e:Event | lone e in s.(State.~trans)
inv3 T:     │                                                                           └──  all s:State | all e:Event | lone s->e in s.(State.~trans)
inv3 T:     │                                                                               └──  lone State->Event in s.(State.~trans)
inv3 O:     │                                                                                   └──  all s:State | lone s.trans
inv3 O:     │                                                                                       └──  all s:State | lone (State-s).trans
inv3 E:     │                                                                                           └──   
inv3 S:     │                                                                                               └──  all e:event, s:State | lone e
inv3 U:     │                                                                                                   └──  all e:Event, s:State | lone e
inv3 T:     │                                                                                                       └──  all e:Event , s:State | lone e in s.(State.~trans)
inv3 T:     │                                                                                                           └──  all t:trans | lone t
inv3 T:     │                                                                                                               └──  all s:State | all e:Event | lone e->s in s.trans
inv3 S:     │                                                                                                                   └──  all s:State, all e:Event | lone e->s in s.trans
inv3 S:     │                                                                                                                       └──  all s:State all e:Event | lone e->s in s.trans
inv3 T:     │                                                                                                                           └──  all s:State | all e:Event | lone e->s in s.trans
inv3 B:     │                                                                                                                               └──  all s:State | lone e:Event |  e->s in s.trans
inv3 B:     │                                                                                                                                   └──  all s:State | all e:Event |  e->s in s.trans
inv3 B:     │                                                                                                                                       └──  all s:State | one e:Event |  e->s in s.trans
inv3 B:     │                                                                                                                                           └──  all s:State | one e:Event {  e->s in s.trans
inv3 B:     │                                                                                                                                               └──  all s:State | lone e:Event {  e->s in s.trans
inv3 B:     │                                                                                                                                                   └──  all s:State | lone e:Event |  e->s in s.trans
inv3 B:     │                                                                                                                                                       └──  all s:State | lone e:Event {  e->s in s.trans
inv3 B:     │                                                                                                                                                           └──  all s:State | lone e:Event {  e->s in State.trans
inv3 S:     │                                                                                                                                                               └──  all s:State | e1,e2:Event | e1->s in s.trans and e2->s in s.trans implies e1=e2
inv3 B:     │                                                                                                                                                                   └──  all s:State | all e1,e2:Event | e1->s in s.trans and e2->s in s.trans implies e1=e2
inv4 T:     │                                                                                                                                                                       └──  trans in Init.*trans
inv4 S:     │                                                                                                                                                                           └──  Node in Init.*trans
inv4 T:     │                                                                                                                                                                               └──  State in Init.*trans
inv4 T:     │                                                                                                                                                                                   └──  all s:State | s in Init.(*trans)
inv4 T:     │                                                                                                                                                                                       └──  all s:State | s in Init.(trans)
inv4 E:     │                                                                                                                                                                                           └──   
inv4 T:     │                                                                                                                                                                                               └──  State.(Event.trans) in Init.(Event.*trans)
inv4 T:     │                                                                                                                                                                                                   └──  Event.trans in Init.*trans
inv4 T:     │                                                                                                                                                                                                       └──  Event.trans in State.*trans
inv4 T:     │                                                                                                                                                                                                           └──  State.trans in Init.*trans
inv4 U:     │                                                                                                                                                                                                               └──  State.(Event.trans) in Init.*(Event.trans)
inv4 U:     │                                                                                                                                                                                                                   └──  State.(Event.trans) in Init.*(Event.trans)
inv4 B:     │                                                                                                                                                                                                                       └──  State in Init.*(Event.trans)
inv4 O:     │                                                                                                                                                                                                                           └──  State in Init.(Event.trans)
inv4 U:     │                                                                                                                                                                                                                               └──  Init.*(Event.trans) in State
inv4 T:     │                                                                                                                                                                                                                                   └──  Init.*trans in State
inv4 T:     │                                                                                                                                                                                                                                       └──  Init.Event.*trans in State
inv4 T:     │                                                                                                                                                                                                                                           └──  Init.(Event.*trans) in State
inv5 T:     │                                                                                                                                                                                                                                               └──  all s:State | s.(State.~trans) in Event
inv5 T:     │                                                                                                                                                                                                                                                   └──  all s:State | s.(State.~trans) in Event
inv5 U:     │                                                                                                                                                                                                                                                       └──  all s:State | s.~(State.trans) in Event
inv5 B:     │                                                                                                                                                                                                                                                           └──  all s:State | Event in s.~(State.trans)
inv5 O:     │                                                                                                                                                                                                                                                               └──  all s:State | Event in State.~(s.trans)
inv5 U:     │                                                                                                                                                                                                                                                                   └──  all s:State | Event.~(s.trans) in Event
inv5 O:     │                                                                                                                                                                                                                                                                       └──  all s:State | Event in Event.~(s.trans)
khM9mMJnnrXRPZESn M:     ├──  user added theme options. same as previous submission
inv1 T:     ├──  State.trans
inv1 T:     │   └──  all s : State | s.trans
inv1 B:     │       └──  some State.trans
inv4 T:     │           └──  no Init.~trans
inv4 T:     │               └──  no Init.~trans
inv4 T:     │                   └──  no Init.~trans
inv7 E:     │                       └──   
inv1 E:     ├──   
inv4 S:     ├──  all s: State.trans.Event | s.^{y,x: State | some x.trans.y
inv4 U:     │   └──  all s: State.trans.Event | s.^{y,x: State | some x.trans.y
inv4 U:     │       └──  all s: State.trans.Event | s.^{y,x: State | some e : Event | x->e->y in trans
inv4 U:     │           └──  all s: State.trans.Event | s.^{y,x: State | some e : Event | x->e->y in trans
inv3 O:     ├──  all y : State | lone y.trans
inv3 C:     │   └──  all y : State, e : Event | lone e.(y.trans)
inv1 B:     │       └──  some State.trans
inv1 C:     │           └──  all s : State | some s.trans
inv1 E:     ├──   
inv1 E:     ├──   
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 T:     │       └──  all s : State, e : Event | lone s.e.trans
inv3 T:     │           └──  all s : State, e : Event | lone e.s.trans
inv3 C:     │               └──  all s : State, e : Event | lone e.(s.trans)
inv4 T:     │                   └──  all s : State, e : Event | s in e.(Init.^trans)
inv4 T:     │                       └──  all s : State, e : Event | s in Init.^trans
inv1 E:     ├──   
inv1 E:     ├──   
8JskK3TqDYrGjrnWu N:     │   └──  user added extra characters to pred name
v5ECM2zEtsQNdXhpa N:     │       └──  user added extra characters to pred name
inv1 C:     │           └──  all s:State | some s.trans
inv2 C:     │               └──  one Init
inv3 O:     │                   └──  State.trans in Event -> lone State
inv4 C:     │                       └──  let adj = {x,y: State | some (x.trans).y
inv5 C:     │                           └──  all disj s,t:State | s.trans.State = t.trans.State
inv6 C:     │                               └──  all e:Event | some (State.trans.State & e)
inv7 O:     │                                   └──  let adj = {x,y: State | some (x.trans).y
inv7 O:     │                                       └──  let adj = {x,y: State | some (x.trans).y
inv3 C:     ├──  all s:State, e:Event | lone s.trans[e]
inv4 S:     │   └──  all s:State-Init | s in ^(trans.e).Init
inv4 B:     │       └──  all s:State-Init| some e:Event | s in ^(trans.e).Init
inv4 T:     │           └──  all s:State-Init| some e:Event | s in Init.^trans[e]
inv4 B:     │               └──  all s:State-Init| some e:Event | s in Init.trans[e]
inv5 U:     │                   └──  all e:Event, s1,s2:State | e in (Init.trans)[s1] implies e in (Init.trans)[s2]
inv5 B:     │                       └──  all e:Event, s1,s2:State | e in ~(Init.trans)[s1] implies e in ~(Init.trans)[s2]
inv5 B:     │                           └──  all e:Event, disj s1,s2:State | e in ~(Init.trans)[s1] implies e in ~(Init.trans)[s2]
inv6 T:     │                               └──  all e:Event | some s:State | some e in ~(Init.trans)[s]
inv6 O:     │                                   └──  all e:Event | some s:State | e in ~(Init.trans)[s]
inv6 O:     │                                       └──  all e:Event | one s:State | e in ~(Init.trans)[s]
inv4 B:     │                                           └──  all s:State-Init| some e:Event | s in Init.trans[e]
inv4 T:     │                                               └──  all s:State-Init| some e:Event | s in Init.^trans
inv4 S:     │                                                   └──  all s:State-Init| some e:Event | s in Init.trans^[e]
inv4 B:     │                                                       └──  all s:State-Init| some e:Event | s in e.^(Init.trans)
inv4 U:     │                                                           └──  all s:State-Init| some e:Event | s in e.^(State.trans)
inv4 T:     │                                                               └──  all s:State-Init| some e:Event | s in e.(Init.^trans)
inv4 T:     │                                                                   └──  all s:State-Init| some e:Event | s in ^e.(Init.trans)
inv4 B:     │                                                                       └──  all s:State-Init| some e:Event | s in ~(Init.trans)[e]
inv4 T:     │                                                                           └──  all s:State-Init| some e:Event | s in ~(Init.trans)
inv4 T:     │                                                                               └──  all s:State-Init| some e:Event | s in ^(s.e.Init.trans)
inv4 T:     │                                                                                   └──  all s:State-Init| some e:Event | s in (s.e.Init.trans)
inv4 S:     │                                                                                       └──  all s:State-Init| some e:Event | s in
inv4 S:     │                                                                                           └──  all s:State-Init| some e:Event | s in
inv5 B:     │                                                                                               └──  some e:Event, disj s1,s2:State | e in ~(Init.trans)[s1] implies e in ~(Init.trans)[s2]
inv5 B:     │                                                                                                   └──  some e:Event | all disj s1,s2:State | e in ~(Init.trans)[s1] implies e in ~(Init.trans)[s2]
WpED38PtanDPyMfqj N:     ├──  user added extra characters to pred name
AhpAiutAHB4djvs6R N:     │   └──  user added extra characters to pred name
SuTcx8uDR3T8o6Lub N:     │       └──  user added extra characters to pred name
inv2 C:     ├──  one Init
inv3 O:     │   └──  all s : State | lone s.trans
inv3 B:     │       └──  all s : State | # s.trans <=1
inv3 B:     │           └──  all s : State | #s.trans <=1
inv3 U:     │               └──  all s : State | lone s.trans.Event
inv3 C:     │                   └──  all s : State | all e : Event | lone s.trans[e]
inv3 O:     │                       └──  all s : State | lone s.trans[Event]
inv3 C:     │                           └──  all s : State, e : Event | lone s.trans[e]
inv4 T:     │                               └──  all s : State | s in Init.*trans
inv4 T:     │                                   └──  all s : State | s in Init.*(trans)
inv4 T:     │                                       └──  all s : State | s in Init.^(trans)
inv4 T:     │                                           └──  all s : State | s in Init.^(trans)
inv4 T:     │                                               └──  all s : State | s in Init.^(trans)
inv1 E:     ├──   
dvE9zyWB5zLLyQPo2 N:     │   └──  user added extra characters to pred name
siubqxh8fyBSw5Eim N:     │       └──  user added extra characters to pred name
3KqcTuR9xMmzzc4dn N:     │           └──  user added extra characters to pred name
E6iQyfiN975JsRn3E N:     │               └──  user added extra characters to pred name
7a3gZsnADP8MeCqA9 N:     │                   └──  user added extra characters to pred name
inv3 C:     ├──  all s : State, e : Event | lone e.(s.trans)
inv4 B:     │   └──  State  in Init
inv4 B:     │       └──  State in Init
inv4 S:     │           └──  all State in Init
inv4 T:     │               └──  all i : Init | i.trans
inv4 T:     │                   └──  all i : Init | Event.(i.trans)
inv4 T:     │                       └──  all s1,s2 : State | some e : Event | s1->e->s2  in trans   	State in Init.(^(all s1,s2 : State | some e : Event | s1->e->s2  in trans))
inv4 S:     │                           └──  all s1,s2 : State | some e : Event | s1->e->s2  in trans   	State in Init.(^( s1,s2 : State | some e : Event | s1->e->s2  in trans))
inv4 C:     │                               └──  State in Init.(^{s1,s2 : State | some e : Event | s1->e->s2  in trans
inv4 S:     │                                   └──  let t = { all s1,s2 : State | some e : Event | s1->e->s2  in trans
inv4 S:     │                                       └──  let t = { s1,s2 : State | some e : Event | s1->e->s2  in trans
inv4 S:     │                                           └──  let t = { all s1,s2 : State | some e : Event | s1->e->s2  in trans
inv4 T:     │                                               └──  let t = { all s1,s2 : State | some e : Event | s1->e->s2  in trans
inv4 C:     │                                                   └──  let t = { s1,s2 : State | some e : Event | s1->e->s2  in trans
inv1 C:     ├──  trans.State.Event = State
inv1 C:     │   └──  trans.State.Event = State
3jMykSibXRpu2aiW5 N:     ├──  user added extra characters to pred name
vMQu29YAxguXGbPde N:     │   └──  user added extra characters to pred name
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s:State | lone s.trans
inv3 T:     │           └──  all s:State | all e:Event | e in s.trans
inv3 T:     │               └──  all s:State | all e:Event | e in s.trans
inv3 T:     │                   └──  all s:State | all e:Event | e in s.trans
inv3 S:     │                       └──  all s:State | all Event in s.trans
inv1 E:     ├──   
inv6 E:     │   └──   
inv1 E:     ├──   
inv1 C:     │   └──  all s:State | some s.trans
inv2 B:     │       └──  one i:Init | i not in Event.(State.trans)
inv2 C:     │           └──  one Init
inv3 O:     │               └──  all s:State | lone Event.(s.trans)
inv3 C:     │                   └──  all s:State, e:Event | lone e.(s.trans)
inv4 O:     │                       └──  State in Event.(Init.trans)
inv5 B:     │                           └──  Event in State.~(State.trans)
inv5 U:     │                               └──  State.~(State.trans) in Event
inv5 U:     │                                   └──  State.(State.trans) in Event
inv5 O:     │                                       └──  all s:State | Event in State.~(s.trans)
inv5 U:     │                                           └──  all s:State | State.~(s.trans) in Event
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s:State,e:Event | lone e.(s.trans)
inv3 C:     │           └──  all s,s1,s2:State,e:Event | s->e->s1 in trans and s->e->s2 in trans implies s1=s2
inv3 C:     │               └──  all s:State,e:Event | lone e.(s.trans)
inv4 S:     │                   └──  State in Init.Trans.Event
inv4 O:     │                       └──  State in Init.trans.Event
inv4 O:     │                           └──  some Init.trans.Event
inv4 B:     │                               └──  some Init.trans
inv4 B:     │                                   └──  some Event.(Init.trans)
inv4 B:     │                                       └──  some Event.^(Init.trans)
inv4 B:     │                                           └──  all e:Event | State in e.^(Init.trans)
inv6 S:     │                                               └──  all e:Event| e in (State.Trans).State
inv6 T:     │                                                   └──  all e:Event| e in (State.trans)State
inv6 C:     │                                                       └──  all e:Event| e in (State.trans).State
inv6 C:     │                                                           └──  all e:Event| e in (State.trans).State
inv6 C:     │                                                               └──  all e:Event | some s1,s2:State | s1->e->s2 in trans
inv5 U:     │                                                                   └──  all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s3 in trans
inv5 T:     │                                                                       └──  all s1,s2:State |some e:Event | e.(s1.trans) implies e.(s2.trans)
inv5 B:     │                                                                           └──  all s1,s2:State |some e:Event |some e.(s1.trans) implies some e.(s2.trans)
inv5 C:     │                                                                               └──  all s1,s2:State,e:Event |some e.(s1.trans) implies some e.(s2.trans)
inv7 B:     │                                                                                   └──  all s1,s2:State | some e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 O:     │                                                                                       └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 B:     │                                                                                           └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans or s1->e2->s1 in trans
inv7 O:     │                                                                                               └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 T:     │                                                                                                   └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans and s1 in s1.trans
inv7 O:     │                                                                                                       └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans and s1 in e2.(s1.trans)
inv7 O:     │                                                                                                           └──  all e:Event,s1,s2:State |some e1:Event| s1->e->s2 in trans implies s2->e1->s1 in trans
Np4d3eQs6BwXFkHv3 N:     │                                                                                                               └──  user added extra characters to pred name
EWg8GugSryt2zxyvf N:     │                                                                                                                   └──  user added extra characters to pred name
inv7 O:     │                                                                                                                       └──  all s1,s2:State, e1,e2,e3,e4:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 O:     │                                                                                                                           └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 O:     │                                                                                                                               └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans   	all s:State,e1,e2:Event | s->e1->s in trans implies s->e2->s in trans
inv7 O:     │                                                                                                                                   └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans   	all s:State,e1,e2:Event | s->e1->s in trans implies s->e1->s in trans
inv7 O:     │                                                                                                                                       └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
mkKixwqvMr4RhirqZ M:     │                                                                                                                                           └──  user added theme options. same as previous submission
inv4 S:     ├──  all s: State | Init in trans*.s
inv4 S:     │   └──  all s: State | Init in (trans.s)*
inv4 T:     │       └──  all s: State | Init in (trans.s)
QsQGxB6AF5DyDdgQ9 N:     │           └──  user added extra characters to pred name
inv4 T:     │               └──  all s: State | s in Init or some e: Event | trans[e].s
inv4 T:     │                   └──  all s: State | s in Init or (some e: Event | trans[e].s)
inv4 T:     │                       └──  all s: State | (s in Init) or (some e: Event | trans[e].s)
inv1 C:     │                           └──  all s: State | some e: Event | some s.trans[e]
inv1 C:     │                               └──  all s: State | some e: Event | some s.trans[e]
inv1 C:     │                                   └──  all s: State | some e: Event | some s.trans[e]
inv2 C:     │                                       └──  one Init
inv3 C:     │                                           └──  all s: State | all e: Event | lone s.trans[e]
inv4 U:     │                                               └──  all s: State | (s in Init) or (some e: Event | some trans.s.e)
inv4 U:     │                                                   └──  all s: State | (s in Init) or (some trans.s.Event)
inv4 U:     │                                                       └──  all s: State | (s in Init and some trans.s.Event) or (some trans.s.Event)
inv4 U:     │                                                           └──  all s: State | (s in Init) or (some trans.s.Event)
inv5 C:     │                                                               └──  all s, m: State, e: Event | some s.trans[e] => some m.trans[e]
inv6 C:     │                                                                   └──  all e: Event | some s: State | some s.trans[e]
inv7 E:     │                                                                       └──   
inv4 U:     │                                                                           └──  all s: State | Init in trans.s.Event or (some trans.s.Event)
inv4 U:     │                                                                               └──  all s: State | s in Init or Init in trans.s.Event or (some trans.s.Event)
inv4 U:     │                                                                                   └──  all s: State | (s in Init) or (Init in trans.s.Event) or (some trans.s.Event)
inv4 U:     │                                                                                       └──  all s: State | (s in Init) or (some pre:State | (not pre in s) and (pre in trans.s.Event))
inv5 S:     ├──  all s : State | s.trans = State.trasn
inv5 O:     │   └──  all s : State | s.trans = State.trans
inv5 U:     │       └──  all s : State | s.trans in State.trans
inv5 T:     │           └──  all s : State | s.trans in State<:trans
inv5 T:     │               └──  State->Event
inv5 B:     │                   └──  some State->Event
inv5 O:     │                       └──  one State->Event
inv5 O:     │                           └──  State->Event in iden
inv5 B:     │                               └──  all s : State | some s->Event
inv5 S:     │                                   └──  all s : State | Event in s.(State->Event
inv5 U:     │                                       └──  all s : State | Event in s.(State->Event)
inv5 U:     │                                           └──  all s : State | Event = s.(State->Event)
inv1 E:     ├──   
inv4 E:     ├──   
inv5 E:     │   └──   
inv5 C:     │       └──  all s1, s2: State | s1.trans.State = s2.trans.State
inv6 C:     │           └──  Event = State.trans.State
inv7 S:     │               └──  some i: Initial, r: Event.State.trans | i in r.^trans
inv7 T:     │                   └──  some i: Init, r: Event.State.trans | i in r.^trans
inv7 T:     │                       └──  some i: Init, r: Event.(State.trans) | i in r.^trans
inv7 B:     │                           └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv7 S:     │                               └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv7 O:     │                                   └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv7 S:     │                                       └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv7 C:     │                                           └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv1 E:     ├──   
inv2 U:     ├──  some Init
inv2 C:     │   └──  one Init
inv3 B:     │       └──  all s : State, e : Event | some e.(s.trans)
inv3 B:     │           └──  all s : State, e : Event |  some e.(s.trans)
inv3 S:     │               └──  all s1,s2 : State, e : Event |  one s.trans.s
inv3 B:     │                   └──  all s1,s2 : State, e : Event |  one s1.trans.s2
inv1 O:     ├──  all x : State | some x.trans.Event
inv1 C:     │   └──  all x : State | some x.trans
inv2 U:     │       └──  all x, y : Init | x = y
inv2 U:     │           └──  all x, y : Init | x = y and some x
inv2 U:     │               └──  all x, y : Init | some x implies x = y
inv2 C:     │                   └──  one Init
inv3 U:     │                       └──  all x : Event, y : State | lone y.trans.x
inv3 O:     │                           └──  all  y : State | lone y.trans
inv3 U:     │                               └──  all  y : Event | lone trans.y
inv3 U:     │                                   └──  all x : State, y : Event | lone x.trans.y
inv3 U:     │                                       └──  all x : State, y : Event | lone (x.trans).y
inv3 T:     │                                           └──  all x : State, y : Event | lone x.trans.y.State
inv3 U:     │                                               └──  all x : State, y : Event | lone x.trans.y
inv3 O:     │                                                   └──  all x : State | lone x.trans
inv3 U:     │                                                       └──  all x : State, y : Event | lone (x.trans).y
inv3 S:     │                                                           └──  all x, z, v : State, y : Event,  | x->y->z in trans and x->y->v in trans implies z=v
inv3 C:     │                                                               └──  all x, z, v : State, y : Event  | x->y->z in trans and x->y->v in trans implies z=v
inv4 B:     │                                                                   └──  all x : Init | State in x.trans.Event
inv4 B:     │                                                                       └──  all x : Init | State in (x.trans).Event
inv4 T:     │                                                                           └──  all x : Init | State in *(x.trans)
inv4 B:     │                                                                               └──  all x : Init, y : Event | State in y.*(x.trans)
inv4 B:     │                                                                                   └──  all x : Init, y : Event | State in x.*(trans.y)
inv4 B:     │                                                                                       └──  all x  : Event | State in Init.*(trans.x)
inv4 B:     │                                                                                           └──  all x  : Event | State in Init.(*(trans.x))
inv4 B:     │                                                                                               └──  all x  : Event | State in *(Init.trans).x
inv1 E:     ├──   
inv1 C:     ├──  all s : State | some s.trans
inv2 U:     │   └──  lone Init
inv2 C:     │       └──  one Init
inv3 T:     │           └──  all s : State, e : Event | lone s.e.trans
inv1 T:     ├──  iden in ~trans.trans
inv1 T:     │   └──  let t = trans | iden in trans.trans
inv2 C:     │       └──  one Init
inv1 T:     │           └──  let t = trans | iden in (trans.trans :> Event)
inv1 T:     │               └──  let t = trans | iden in (trans.trans <: Event)
inv1 T:     │                   └──  let t = trans | iden in (trans.trans)
inv1 T:     │                       └──  let t = trans | iden in (trans.trans) :> State
inv1 T:     │                           └──  let t = trans | iden in (trans.trans) <: State
inv1 T:     │                               └──  all e : Event | trans.e.trans
inv1 T:     │                                   └──  all e : Event | trans.e
inv1 T:     │                                       └──  all e : Event | e
inv1 T:     │                                           └──  all e : Event | trans
inv1 T:     │                                               └──  all e : Event | trans.e
inv1 T:     │                                                   └──  all e : Event | e.trans
inv1 T:     │                                                       └──  all e : Event | trans.State
inv1 T:     │                                                           └──  all e : Event | trans.State
inv1 T:     │                                                               └──  all e : Event | trans.State.e
inv1 T:     │                                                                   └──  trans.State
inv1 O:     │                                                                       └──  let k = trans.State | iden in ~k.k
inv1 O:     │                                                                           └──  let k = trans.State | iden in k.~k
inv1 O:     │                                                                               └──  let k = State.trans | iden in k.~k
inv1 O:     │                                                                                   └──  let k = State.trans | iden in ~k.k
inv1 O:     │                                                                                       └──  let k = trans.State | iden in ~k.k
inv1 T:     │                                                                                           └──  let k = trans.State | iden[State] in ~k.k
inv1 T:     │                                                                                               └──  let k = trans.State | iden(State) in ~k.k
inv1 T:     │                                                                                                   └──  let k = trans.State | iden{State
inv1 O:     │                                                                                                       └──  let k = trans.State | iden in ~k.k
inv3 B:     │                                                                                                           └──  let k = trans.State | k.~k in iden
inv3 B:     │                                                                                                               └──  let k = trans.State | ~k.k in iden
inv3 B:     │                                                                                                                   └──  let k = trans.State | k.~k in iden
inv3 T:     │                                                                                                                       └──  let k = ~trans.State | k.~k in iden
inv3 B:     │                                                                                                                           └──  let k = ~(trans.State) | k.~k in iden
inv3 B:     │                                                                                                                               └──  let k = ~(trans.State) | ~k.k in iden
inv3 B:     │                                                                                                                                   └──  let k = trans.State | ~k.k in iden
inv3 O:     │                                                                                                                                       └──  let k = trans.State | iden in ~k.k
inv3 O:     │                                                                                                                                           └──  let k = trans.State | iden in k.~k
inv3 O:     │                                                                                                                                               └──  let k = trans.State | iden in ~k.k
inv1 C:     │                                                                                                                                                   └──  all s : State | some s.trans
inv1 T:     │                                                                                                                                                       └──  some (State :> trans)
inv1 T:     │                                                                                                                                                           └──  (State :> trans)
inv1 T:     │                                                                                                                                                               └──  (State:>trans)
inv1 T:     │                                                                                                                                                                   └──  let s = State <: trans | s.~s in iden
inv1 U:     │                                                                                                                                                                       └──  let s = State <: State.trans | s.~s in iden
inv1 B:     │                                                                                                                                                                           └──  let s = State <: trans.State | s.~s in iden
inv1 U:     │                                                                                                                                                                               └──  let s = State <: trans.Event | s.~s in iden
inv1 U:     │                                                                                                                                                                                   └──  let s = State <: Event.trans | s.~s in iden
inv3 O:     │                                                                                                                                                                                       └──  all s : State | lone s.trans
inv3 T:     │                                                                                                                                                                                           └──  all s : State.trans, e : Event | lone s.e
inv3 U:     │                                                                                                                                                                                               └──  all s : State, e : Event | lone s.trans.e
inv3 O:     │                                                                                                                                                                                                   └──  all s : State, e : Event | lone s.trans
inv3 O:     │                                                                                                                                                                                                       └──  all s : State, e : Event | lone trans
inv3 T:     │                                                                                                                                                                                                           └──  trans
inv3 O:     │                                                                                                                                                                                                               └──  all s : State | lone s.trans
inv3 T:     │                                                                                                                                                                                                                   └──  all s : State | s.trans
inv3 U:     │                                                                                                                                                                                                                       └──  all s : State, e : Event | lone s.trans.e
inv3 T:     │                                                                                                                                                                                                                           └──  all s : State, e : Event | lone e.s.trans
inv3 T:     │                                                                                                                                                                                                                               └──  all s : State, e : Event | lone s.e.trans
inv3 U:     │                                                                                                                                                                                                                                   └──  all s : State, e : Event | lone (s->e).trans
inv3 O:     │                                                                                                                                                                                                                                       └──  all s : State, e : Event | lone s.trans->e
inv3 T:     │                                                                                                                                                                                                                                           └──  all s : State | s.trans
inv3 S:     │                                                                                                                                                                                                                                               └──  all s : State | e.s.trans
inv3 T:     │                                                                                                                                                                                                                                                   └──  all s : State | Event.s.trans
inv3 T:     │                                                                                                                                                                                                                                                       └──  all s : State | Event.(s.trans)
inv3 O:     │                                                                                                                                                                                                                                                           └──  all s : State | lone Event.(s.trans)
inv3 B:     │                                                                                                                                                                                                                                                               └──  all s : State | lone (s.trans).State
inv3 C:     │                                                                                                                                                                                                                                                                   └──  all s : State, e : Event | lone e.(s.trans)
inv3 T:     │                                                                                                                                                                                                                                                                       └──  all s : State, e : Event | lone e.s.trans
inv3 C:     │                                                                                                                                                                                                                                                                           └──  all s : State, e : Event | lone e.(s.trans)
inv1 C:     │                                                                                                                                                                                                                                                                               └──  iden[State] in trans.State.Event
inv1 T:     │                                                                                                                                                                                                                                                                                   └──  iden[State]
inv1 T:     │                                                                                                                                                                                                                                                                                       └──  iden in trans.State.Event
inv1 T:     │                                                                                                                                                                                                                                                                                           └──  iden in trans.State.Event
inv1 E:     ├──   
inv3 E:     │   └──   
inv2 C:     ├──  one Init
inv1 C:     │   └──  all s : State | some Event.(s.trans)
inv1 T:     │       └──  all s : State | some Event.s.trans
inv3 C:     │           └──  all s : State, e : Event | lone e.(s.trans)
inv6 O:     │               └──  all e : Event | some trans.e
inv6 C:     │                   └──  all e : Event | some e.(State.trans)
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone e.(s.trans)
inv4 S:     │           └──  all s : State | State in e.(s.^trans)
inv4 S:     │               └──  all s : State | State in e.(s.^trans)
inv4 T:     │                   └──  all s : State, e : Event| State in e.(s.^trans)
inv4 B:     │                       └──  all s : State, e : Event| State in e.^(s.trans)
inv4 T:     │                           └──  all s : State, e : Event | State in ^(e.s.trans)
inv4 T:     │                               └──  all s : State, e : Event | State in ^(e.(s.trans))
inv4 B:     │                                   └──  all s : State, e : Event | State in e.^(s.trans)
inv4 S:     │                                       └──  State in e.(Init.^trans)
NXvZvAqTnqZKza3FA M:     │                                           └──  user added theme options. same as previous submission
inv4 U:     ├──  State-Init in Init.(Init->(State-Init))
inv4 U:     │   └──  no Init  implies no State
inv4 T:     │       └──  no Init  implies no State and  all i :Init |  i.trans & State
inv4 T:     │           └──  no Init  implies no State and  all i :Init|some e:Event |  e.(i.trans) & State
inv4 U:     │               └──  no Init  implies no State and  all i :Init|some e:Event | some e.(i.trans) & State
inv4 T:     │                   └──  no Init  implies no State and  all i :Init|(State-Init).^~(i.trans)
inv4 U:     │                       └──  no Init  implies no State and  all i :Init|some (State-Init).^~(i.trans)
inv4 U:     │                           └──  no Init  implies no State and  all i :Init|(State-Init)in  (State-Init).~(i.trans)
inv4 U:     │                               └──  no Init  implies no State and  all i :Init|(State-Init)in  (State).~(i.trans)
inv4 S:     │                                   └──  no Init  implies no State and (some e:Event | all s:(State-Init) | some(Init & trans^.(e->s)) )
inv4 T:     │                                       └──  no Init  implies no State and (some e:Event | all s:(State-Init) | some (Init & trans.(e->s)) )
inv4 T:     │                                           └──  no Init  implies no State and (some e:Event | all s:(State) | some (Init & trans.(e->s)) )
inv5 C:     │                                               └──  all disj s1,s2 :State |  no ((s1.trans).State) -((s2.trans).State) and no ((s2.trans).State) - ((s1.trans).State)
inv6 O:     │                                                   └──  all e:Event|some s:State | some trans.(e->s)
inv6 O:     │                                                       └──  some s:State |all e:Event| some trans.(e->s)
inv6 O:     │                                                           └──  all e:Event|some s:(State-Init) | some trans.(e->s)
inv6 O:     │                                                               └──  all e:Event|some s:State | some trans.(e->s)
inv6 O:     │                                                                   └──  all e:Event|some s:State | some trans.(e->s) or one trans.(e->s)
inv6 T:     │                                                                       └──  all e:Event |some s,s1:State | some (s1->e->s) in trans
inv6 C:     │                                                                           └──  all e:Event |some s,s1:State |  (s1->e->s) in trans
inv4 S:     │                                                                               └──  let adj={x,y:State | some e:Event |x->e->y in trans
inv4 S:     │                                                                                   └──  let adj={x,y:State | some e:Event |x->e->y in trans
inv4 S:     │                                                                                       └──  let adj={x,y:State | some e:Event |x->e->y in trans
inv4 S:     │                                                                                           └──  let adj={x,y:State | some e:Event |x->e->y in trans
inv4 B:     │                                                                                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 B:     │                                                                                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 B:     │                                                                                                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 B:     │                                                                                                           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 B:     │                                                                                                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 O:     │                                                                                                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv4 C:     │                                                                                                                       └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │                                                                                                                           └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │                                                                                                                               └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv7 B:     │                                                                                                                                   └──  let adj ={x,y:State | some e:Event |x->e->y in trans
inv1 S:     ├──  some s:State in s.trans
inv1 S:     │   └──  some s.trans
inv1 B:     │       └──  some State.trans
inv1 C:     │           └──  all s:State | some s.trans
inv2 C:     │               └──  one Init
inv4 T:     │                   └──  all s:State | s in ^Event.(Init.trans)
inv3 C:     │                       └──  all s:State, e:Event | lone e.(s.trans)
inv3 C:     │                           └──  all s:State, e:Event | lone e.(s.trans)
inv4 O:     │                               └──  all s:State | s in Event.(Init.trans)
inv6 T:     │                                   └──  all e:Event | some e.State.trans
inv4 O:     │                                       └──  all s:State | s in Event.(Init.trans)
inv3 C:     │                                           └──  all s:State, e:Event | lone e.(s.trans)
inv2 C:     │                                               └──  one Init
inv1 C:     │                                                   └──  all s:State | some s.trans
inv4 O:     │                                                       └──  all s:State | s in Event.(Init.trans)
inv6 T:     │                                                           └──  all e:Event | some e.State.trans
inv5 U:     │                                                               └──  all s:State | State.~(s.trans) in Event
inv5 O:     │                                                                   └──  all s:State | Event in State.~(s.trans)
inv4 O:     │                                                                       └──  all s:State | s in Event.(Init.trans)
inv3 C:     │                                                                           └──  all s:State, e:Event | lone e.(s.trans)
inv5 O:     │                                                                               └──  all s:State | Event in State.~(s.trans)
inv5 O:     │                                                                                   └──  all s:State | all e:Event | e in State.~(s.trans)
inv5 O:     │                                                                                       └──  all s:State | Event in State.~(s.trans)
inv6 T:     │                                                                                           └──  all e:Event | some s:State | e->s in trans
inv6 O:     │                                                                                               └──  all e:Event | some (State.trans).Event
inv6 O:     │                                                                                                   └──  all e:Event | some e.~(State.trans)
inv6 C:     │                                                                                                       └──  all e:Event | some s:State |  e in State.~(s.trans)
inv5 O:     │                                                                                                           └──  all s:State | Event in State.~(s.trans)
inv1 B:     ├──  trans in State some -> Event -> State
inv1 C:     │   └──  trans in State -> some Event -> State
inv2 C:     │       └──  #Init = 1
inv2 C:     │           └──  #Init = 1
inv3 O:     │               └──  trans in State -> lone Event -> State
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 T:     │       └──  all s : State, e : Event | lone s.trans <: e
inv3 T:     │           └──  all s : State, e : Event | lone (s.trans <: e)
inv3 T:     │               └──  all s : State, e : Event | lone (s.trans <: e)
inv3 T:     │                   └──  all s : State, e : Event | lone (s.trans <: e)
inv5 C:     │                       └──  all s1, s2 : State | s1.trans.State = s2.trans.State
inv3 T:     │                           └──  all s : State, e : Event | lone ((s.trans) <: e)
inv3 T:     │                               └──  all s : State, e : Event | lone (~(s.trans) <: e)
inv3 T:     │                                   └──  all s : State, e : Event | lone (~(s.trans) <: e)
inv3 T:     │                                       └──  all s : State, e : Event | lone (~(s.trans) <: e)
inv6 S:     │                                           └──  all e : Event | some s1 : State | e1 in s1.trans.State
inv6 C:     │                                               └──  all e : Event | some s1 : State | e in s1.trans.State
inv6 C:     │                                                   └──  all e : Event | some s : State | e in s.trans.State
inv6 S:     │                                                       └──  all e : Event | some s.trans.State <: e
inv6 C:     │                                                           └──  all e : Event | some State.trans.State <: e
inv3 C:     │                                                               └──  all s : State, e : Event | lone e.(s.trans)
inv3 S:     │                                                                   └──  all s : State, e : Event | lone e.(s.trans)
inv3 C:     │                                                                       └──  all s : State, e : Event | lone e.(s.trans)
inv4 S:     │                                                                           └──  None
inv4 S:     │                                                                               └──  None
inv4 S:     │                                                                                   └──  None
inv4 S:     │                                                                                       └──  None
inv4 S:     │                                                                                           └──  None
inv4 S:     │                                                                                               └──  None
inv4 S:     │                                                                                                   └──  None
inv4 S:     │                                                                                                       └──  None
inv4 S:     │                                                                                                           └──  None
inv4 S:     │                                                                                                               └──  None
inv7 S:     │                                                                                                                   └──  None
inv7 S:     │                                                                                                                       └──  None
inv7 S:     │                                                                                                                           └──  None
inv4 S:     │                                                                                                                               └──  None
inv4 S:     │                                                                                                                                   └──  None
inv4 S:     │                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                                           └──  None
inv4 S:     │                                                                                                                                                                               └──  None
inv4 S:     │                                                                                                                                                                                   └──  None
inv4 S:     │                                                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                                                                       └──  None
inv1 E:     ├──   
inv1 O:     │   └──  all s: State | #(s.trans) >= 1
inv1 C:     │       └──  all s: State | some s.trans
inv1 O:     │           └──  all s: State | #(s.trans) > 0
inv2 E:     │               └──   
inv2 C:     │                   └──  one Init
inv3 E:     │                       └──   
inv1 S:     │                           └──  all s: State | some s.trans) > 0
inv1 C:     │                               └──  all s: State | some s.trans
inv3 O:     │                                   └──  all s: State | lone s.trans
inv3 O:     │                                       └──  all s: State | one s.trans
inv3 O:     │                                           └──  all s: State | lone s.trans
inv3 T:     │                                               └──  all s: State, e: Event | lone e.s.trans
inv3 C:     │                                                   └──  all s: State, e: Event | lone e.(s.trans)
inv4 S:     │                                                       └──  all s: State | s in Init.trans^
inv4 T:     │                                                           └──  all s: State | s in ^Init.trans
inv4 S:     │                                                               └──  let adj = {s1,s2: State | some e s1.e.s2
inv4 S:     │                                                                   └──  let adj = {s1,s2: State | s1 -> e -> s2 in trans
inv4 S:     │                                                                       └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv4 T:     │                                                                           └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv4 C:     │                                                                               └──  let adj = {s1,s2: State | some e: Event | s1 -> e -> s2 in trans
inv1 S:     ├──  all State | trans != none
inv1 E:     ├──   
inv1 B:     ├──  some trans.State
inv1 B:     │   └──  all s : State | some trans.s
inv1 C:     │       └──  all s : State | some s.trans
inv1 B:     │           └──  some State.trans
tkRZpTr2swka9JvAs N:     ├──  user added extra characters to pred name
inv1 E:     ├──   
inv1 E:     ├──   
inv1 C:     ├──  all s: State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s: State | lone s.trans
inv3 C:     │           └──  all s: State, e: Event | lone s.trans[e]
inv4 T:     │               └──  all s: State | some (*trans.s & Init)
inv4 T:     │                   └──  all s: State | some (*trans[Event].s & Init)
inv4 B:     │                       └──  all s: State | some (*(trans[Event]).s & Init)
inv5 O:     │                           └──  all s: State | Event <: trans = trans
inv5 O:     │                               └──  all s: State | Event <: trans = trans
inv5 U:     │                                   └──  all s: State | Event <: s.trans = s.trans
inv6 O:     │                                       └──  all e: Event | some trans[e]
inv6 C:     │                                           └──  all e: Event | some State.trans[e]
inv7 T:     │                                               └──  all s: State | some s.*trans[Event] & Init
inv7 T:     │                                                   └──  all s: State | some (s.*trans[Event] & Init)
inv7 B:     │                                                       └──  all s: State | some (s.*(trans[Event]) & Init)
inv7 S:     │                                                           └──  all s: State | some (s.*(trans..Event) & Init)
inv7 T:     │                                                               └──  all s: State | some (s.*(s.trans.Event) & Init)
inv4 T:     │                                                                   └──  all s: State | some (*{ss: State, e: Event | ss.trans.e
inv4 T:     │                                                                       └──  all s: State | some (*{ss: State, e: Event | ss.trans
inv4 T:     │                                                                           └──  all s: State | some (*{ss: State | ss.trans.Event
inv4 T:     │                                                                               └──  all s: State | some (*{ss: State | ss.trans
inv4 T:     │                                                                                   └──  all s: State | some (*{s1, s2: State | some s1.trans[Event].s2
inv4 U:     │                                                                                       └──  all s: State | some (*{s1, s2: State | s2 in s1.trans[Event]
inv4 B:     │                                                                                           └──  all s: State | some (*{s1, s2: State | s1 in s2.trans[Event]
inv4 B:     │                                                                                               └──  all s: State | some (*{s1, s2: State | s1->s2 in trans[Event]
inv4 B:     │                                                                                                   └──  all s: State | some (*{s1, s2: State | s1->s2 in trans.Event
inv4 B:     │                                                                                                       └──  all s: State | some (*{s1, s2: State | s1->Event->s2 in trans
inv4 U:     │                                                                                                           └──  all s: State | some (*{s1, s2: State | some (s1 <: trans :> s2)
inv4 U:     │                                                                                                               └──  all s: State | some ((*{s1, s2: State | some (s1 <: trans :> s2)
inv4 S:     │                                                                                                                   └──  all s: State | some (*{s1, s2: State | some (s2 <: trans :> s1
inv4 B:     │                                                                                                                       └──  all s: State | some (*{s1, s2: State | some (s2 <: trans :> s1)
inv4 T:     │                                                                                                                           └──  Init.*trans = State
inv4 U:     │                                                                                                                               └──  Init.*{s1, s2: State | some e: Event | s1->e->s2 in trans
inv4 U:     │                                                                                                                                   └──  Init.*{s1, s2: State | some e: Event | s1->e->s2 in trans
inv4 T:     │                                                                                                                                       └──  Init.*{s1, s2: State | s1.trans.s2
inv4 U:     │                                                                                                                                           └──  Init.*{s1, s2: State | some s1.trans.s2
inv4 C:     │                                                                                                                                               └──  Init.^{s1, s2: State | some s1.trans.s2
inv5 C:     │                                                                                                                                                   └──  all s1, s2: State | s1.trans.State = s2.trans.State
inv7 O:     │                                                                                                                                                       └──  all s: State | s in Init.^{s1, s2: State | some s1.trans.s2
inv7 O:     │                                                                                                                                                           └──  all s: State | s in Init.*{s1, s2: State | some s1.trans.s2
inv7 U:     │                                                                                                                                                               └──  all s: State | s in Init.*{s1, s2: State | some s1.trans.s2
inv7 C:     │                                                                                                                                                                   └──  all s: State | s in Init.^{s1, s2: State | some s1.trans.s2
inv7 S:     │                                                                                                                                                                       └──  fun edge : State -> State {     s1, s2: State | some s1.trans.s2
inv6 S:     │                                                                                                                                                                           └──  all e: Event | some State.trans[e]
inv6 T:     │                                                                                                                                                                               └──  all e: Event | some State.trans[e]
inv7 S:     │                                                                                                                                                                                   └──  None
inv1 C:     ├──  all s : State | some s.trans
inv2 U:     │   └──  all s : State | one Init
inv2 T:     │       └──  all s : State | one s.Init
inv2 U:     │           └──  all i : Init | one i
inv2 U:     │               └──  all i : Init | lone i
inv2 C:     │                   └──  one Init
inv3 O:     │                       └──  all s : State | lone s.trans
inv3 B:     │                           └──  all s : State | lone trans.s
inv3 T:     │                               └──  all s : State | all t : trans.s | lone t
inv3 B:     │                                   └──  all s : State | some s.trans
inv3 S:     │                                       └──  all s,s' : State |lone s.trans.s'
inv3 B:     │                                           └──  all s,k : State |lone s.trans.k
inv3 B:     │                                               └──  all s,k : State |one s.trans.k
inv3 S:     │                                                   └──  all s : State |all (a,b),(x,y) : s.trans | b!=y
inv3 S:     │                                                       └──  all s : State |all (a,b),(x,y) : s.trans | b!=y
inv3 T:     │                                                           └──  all s : State | lone (trans&s.trans)
inv3 C:     │                                                               └──  all s : State, e : Event | lone e.(s.trans)
inv4 E:     │                                                                   └──   
inv5 U:     │                                                                       └──  all s : State | s.trans.s in Event
inv5 B:     │                                                                           └──  Event in State.trans.State
inv3 C:     │                                                                               └──  all s : State, e : Event | lone e.(s.trans)
9pueSrJ5xcmkLAuW8 M:     ├──  user added theme options. same as previous submission
inv1 C:     ├──  all s : State | some (s.trans)
inv1 T:     │   └──  trans.State = State
inv1 C:     │       └──  trans.State.Event = State
inv1 C:     │           └──  trans.State.Event = State
inv3 S:     │               └──  all s : State -> lone s.trans.Event
inv3 S:     │                   └──  all s : State -> lone s.trans.Event
inv3 S:     │                       └──  all s : State -> lone s.trans.Event
inv4 T:     │                           └──  Init.^trans.Event = State
inv4 O:     │                               └──  Init.^(trans.Event) = State
inv4 O:     │                                   └──  Init.^(trans.Event) = State
inv1 C:     │                                       └──  trans.State.Event = State
inv2 C:     │                                           └──  one Init
inv3 O:     │                                               └──  all s : State | lone s.trans
inv4 C:     │                                                   └──  Init.^{x,y: State | some (x.trans).y
inv3 U:     │                                                       └──  all s : State | lone s.trans.Event
inv3 O:     │                                                           └──  all s : State | lone s.trans
inv3 T:     │                                                               └──  all s : State | lone s.trans.State.Event
inv3 O:     │                                                                   └──  all s : State | lone Event.(s.trans)
inv3 B:     │                                                                       └──  all s : State | s.trans.State = Event
inv1 E:     ├──   
inv1 C:     ├──  all s: State | some s.trans
sxWiybmS8Cc2Y6oEo N:     │   └──  user added extra characters to pred name
ihSaFytveQ4RY8gXG M:     │       └──  user added theme options. same as previous submission
inv1 O:     ├──  all s:State | one s . trans
inv1 C:     │   └──  all s:State | some s . trans
inv2 C:     │       └──  one Init
inv3 T:     │           └──  trans in Event some -> one State
inv3 T:     │               └──  trans in Event some -> one State
inv3 O:     │                   └──  State.trans in Event some -> one State
inv3 O:     │                       └──  State.trans in Event  -> one State
inv3 O:     │                           └──  all s:State, e:Event | some (s->e).trans
inv3 O:     │                               └──  all s:State, e:Event | some s.trans.e
inv3 O:     │                                   └──  all s:State, e:Event | some s.trans.e
inv3 B:     │                                       └──  all s:State, e:Event | some e.(s.trans)
inv4 T:     │                                           └──  all s:State | s in Init.*trans
inv4 B:     │                                               └──  all s:State | s in Init.*(s.trans)
inv4 T:     │                                                   └──  all s:State | s in Init.*(State.trans.State)
inv4 T:     │                                                       └──  all s:State | s in Init.*(State.trans.Event)
inv4 T:     │                                                           └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                               └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                                   └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                                       └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                                           └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                                               └──  all s:State | s in Init.*(Event.State.trans)
inv4 T:     │                                                                                   └──  all s:State | s in Init.*(Event.State.trans)
inv5 O:     │                                                                                       └──  not some disj s1, s2:State | (s1.trans) != (s2.trans)
inv5 C:     │                                                                                           └──  not some disj s1, s2:State | (s1.trans).State != (s2.trans).State
inv6 T:     │                                                                                               └──  all e:Event| some s:State | some s.~trans.e
inv6 T:     │                                                                                                   └──  all e:Event| some s:State | some e.s.trans
inv6 C:     │                                                                                                       └──  all e:Event| some s:State | some e.(s.trans)
inv4 O:     │                                                                                                           └──  all s:State | s in Event.*(Init.trans)
inv1 E:     ├──   
inv1 E:     │   └──   
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  all s:State | some s.trans
inv1 B:     │       └──  some State.trans
inv1 T:     │           └──  some State.trans & State
inv1 B:     │               └──  some State.trans & Event->State
inv2 C:     │                   └──  one Init
inv3 U:     │                       └──  all s:State, e:Event | lone s.trans.e
inv3 U:     │                           └──  all s:State | lone s.trans.Event
inv3 B:     │                               └──  all s:State | lone s.trans.State
inv3 C:     │                                   └──  all s:State , e:Event| lone e->State & s.trans
inv3 O:     │                                       └──  all s:State| lone Event->State & s.trans
inv4 T:     │                                           └──  Init.trans.^Event = State
inv4 O:     │                                               └──  Init.trans.Event = State
inv4 T:     │                                                   └──  Init.trans.^Event
inv5 C:     │                                                       └──  all s:State, s1:State | s.trans.State = s1.trans.State
inv5 C:     │                                                           └──  all s:State, s1:State | s.trans.State = s1.trans.State
inv6 C:     │                                                               └──  State.trans.State = Event
inv7 T:     │                                                                   └──  all s:State | Init in s.~^trans
inv7 T:     │                                                                       └──  all s:State | Init.trans in s.~^trans
inv4 S:     ├──  State in Init.
inv1 C:     │   └──  all s : State | some (s.trans)
inv1 C:     │       └──  all s : State | some (s.trans)
inv2 U:     │           └──  lone Init
inv2 S:     │               └──  lone Init & lone State
inv2 B:     │                   └──  (lone Init) and (lone State)
inv2 C:     │                       └──  one Init
inv3 B:     │                           └──  all s : State | some e : Event | lone (s->e)
inv3 B:     │                               └──  all s : State | some e : Event | one (s->e)
inv5 B:     │                                   └──  State.trans = Event->State
inv3 B:     │                                       └──  all s : State | some e : Event | lone (s->e)
inv1 C:     │                                           └──  all s : State | some (s.trans)
inv2 C:     │                                               └──  one Init
inv6 T:     │                                                   └──  Event = trans.State
inv6 C:     │                                                       └──  Event = State.trans.State
inv6 C:     │                                                           └──  Event = (State.trans).State
inv3 U:     │                                                               └──  all s : State, e : Event | one (s->e)
inv1 C:     ├──  all s : State | some s.trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 C:     │       └──  one Init
inv3 C:     │           └──  all s : State, e : Event | lone (e <: s.trans)
inv4 E:     │               └──   
inv5 C:     │                   └──  all disj s1, s2 : State | State.~(s1.trans) = State.~(s2.trans)
inv6 C:     │                       └──  all e : Event | some s : State | some (e.(s.trans))
inv3 T:     │                           └──  all s : State, e : Event | lone (e <: s.trans)
inv3 T:     │                               └──  all s : State, e : Event | lone (e <: s.trans)
inv3 T:     │                                   └──  all s : State, e : Event | lone (e <: s.trans)
inv3 T:     │                                       └──  all s : State, e : Event | lone (e <: s.trans)
inv4 S:     │                                           └──  None
inv7 S:     │                                               └──  None
inv7 S:     │                                                   └──  None
inv7 S:     │                                                       └──  None
inv7 S:     │                                                           └──  None
inv7 S:     │                                                               └──  (all s : State.^onlyState | Init in s.^onlyStates)
inv7 S:     │                                                                   └──  None
inv7 S:     │                                                                       └──  None
inv7 S:     │                                                                           └──  None
inv1 C:     ├──  all s: State | some s.trans
inv1 C:     │   └──  all s: State | some s.trans
inv3 E:     ├──   
inv1 E:     ├──   
inv1 B:     ├──  some State.trans
inv2 C:     │   └──  one Init
inv1 C:     │       └──  all x : State | some x.trans
inv1 B:     │           └──  some State.trans
inv1 C:     │               └──  all x : State | some x.trans
inv3 O:     │                   └──  lone Event.(State.trans)
inv3 C:     │                       └──  all x : State, y : Event | lone y.(x.trans)
inv3 O:     │                           └──  lone Event.(State.trans)
inv5 B:     │                               └──  one Event.(State.trans)
inv6 C:     │                                   └──  all e : Event | some e.(State.trans)
inv3 O:     │                                       └──  lone Event.(State.trans)
inv1 C:     │                                           └──  all s : State | some s.trans
inv1 B:     │                                               └──  some trans
inv1 C:     │                                                   └──  all s : State | some s.trans
inv2 C:     │                                                       └──  one Init
inv3 O:     │                                                           └──  all s : State | lone Event.(s.trans)
inv3 O:     │                                                               └──  lone Event.(State.trans)
inv3 C:     │                                                                   └──  all s : State, e : Event | lone e.(s.trans)
inv6 C:     │                                                                       └──  all e : Event | some e.(State.trans)
inv5 O:     │                                                                           └──  all s : State, e : Event | one e.(s.trans)
inv5 B:     │                                                                               └──  all s : State | some e : Event | one e.(s.trans)
inv5 T:     │                                                                                   └──  all s1, s2 : State, e1, e2 : Event | some e1.(s1.trans) and e2.(s2.trans) implies e1 = e2
inv5 T:     │                                                                                       └──  all s1, s2 : State | all e1, e2 : Event | some e1.(s1.trans) and e2.(s2.trans) implies e1 = e2
inv5 B:     │                                                                                           └──  all s1, s2 : State | all e1, e2 : Event | some e1.(s1.trans) and some e2.(s2.trans) implies e1 = e2
inv5 S:     │                                                                                               └──  all s1, s2 : State | one e.(s1.trans) & e.(s2.trans)
inv5 B:     │                                                                                                   └──  all s1, s2 : State | one Event.(s1.trans) & Event.(s2.trans)
inv5 T:     │                                                                                                       └──  all s : State, e : Event | e in s.trans
inv5 T:     │                                                                                                           └──  all s : State, e : Event | s.trans in e
inv5 T:     │                                                                                                               └──  all s : State, e : Event | one e.s.trans
inv5 O:     │                                                                                                                   └──  all s : State, e : Event | one e.(s.trans)
inv5 T:     │                                                                                                                       └──  all s : State, e : Event | one (e.s).trans
inv5 O:     │                                                                                                                           └──  all s : State, e : Event | one e.(s.trans)
inv4 T:     │                                                                                                                               └──  all s : State | some s.trans implies Init.trans
inv1 E:     ├──   
cEafhonXEbBreFDda M:     │   └──  user added theme options. same as previous submission
inv1 S:     ├──  lone State.Trans
inv1 B:     │   └──  lone State.trans
inv1 B:     │       └──  some State.trans
inv1 C:     │           └──  all s: State | some s.trans
inv2 C:     │               └──  one Init
inv3 O:     │                   └──  all s: State | lone s.trans
inv3 B:     │                       └──  all s: State | lone (s.trans).State
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 U:     │       └──  ((State.trans).Event) in State
inv3 U:     │           └──  (Event.(State.trans)) in State
inv3 S:     │               └──  all s:State,e:event | lone e.(s.trans)
inv3 C:     │                   └──  all s:State,e:Event | lone e.(s.trans)
inv4 T:     │                       └──  State in Init.^trans
inv4 T:     │                           └──  State in Event.(Init.^trans)
inv4 T:     │                               └──  State in {x:State | some (Init.^trans).x
inv4 O:     │                                   └──  State in {x:State | some ^(Init.trans).x
inv4 O:     │                                       └──  State in {x:State | some Init.^(trans.x)
inv1 C:     ├──  all  s : State | some s.trans
inv1 C:     │   └──  all  s : State | some s.trans
inv2 B:     │       └──  no Init
inv2 C:     │           └──  one Init
inv2 C:     │               └──  one Init
inv3 O:     │                   └──  all s : State | lone s.trans
inv3 B:     │                       └──  all s : State | some s.trans
inv3 U:     │                           └──  all s : State, e : Event | lone s.(e.trans)
inv3 C:     │                               └──  all s : State, e : Event | lone e.(s.trans)
inv4 T:     │                                   └──  all s : State | s.trans in State
inv4 T:     │                                       └──  all s : State | Init.trans in State
inv3 C:     │                                           └──  all s : State, e : Event | lone e.(s.trans)
inv4 T:     │                                               └──  all s : State | some e : Event | s.(e.(Init.trans)) in State
inv4 U:     │                                                   └──  all s : State | some e : Event | e.(Init.trans) in State
inv4 U:     │                                                       └──  all s : State | some e : Event | e.(s.trans) in State
inv4 B:     │                                                           └──  all s : State | some e : Event | e.(s.trans) in Init
inv4 U:     │                                                               └──  all s : State | some e : Event | e.(s.trans) in State
inv5 S:     │                                                                   └──  all s : State |
inv5 T:     │                                                                       └──  all s : State | s.trans in Event
qveybDzJuSBR8dZnJ M:     │                                                                           ├──  user added theme options. same as previous submission
inv5 T:     │                                                                           │   └──  all s : State | s.trans in Event
inv1 C:     │                                                                           │       └──  all  s : State | some s.trans
inv2 C:     │                                                                           │           └──  one Init
inv3 C:     │                                                                           │               └──  all s : State, e : Event | lone e.(s.trans)
inv4 U:     │                                                                           │                   └──  all s : State | some e : Event | e.(s.trans) in State
inv1 C:     │                                                                           │                       └──  all  s : State | some s.trans
inv2 C:     │                                                                           │                           └──  one Init
inv3 C:     │                                                                           │                               └──  all s : State, e : Event | lone e.(s.trans)
inv4 U:     │                                                                           │                                   └──  all s : State | some e : Event | e.(s.trans) in State
inv5 C:     │                                                                           │                                       └──  all s1,s2 : State | s1.trans.State = s2.trans.State
inv6 C:     │                                                                           │                                           └──  all e : Event | some (trans.State).e
inv6 C:     │                                                                           │                                               └──  all e : Event | some (trans.State).e
inv5 C:     │                                                                           │                                                   └──  all s1,s2 : State | s1.trans.State = s2.trans.State
inv4 C:     │                                                                           │                                                       └──  let adj = { s1, s2 : State | some e : Event | s1->e->s2 in trans
inv1 C:     │                                                                           │                                                           └──  all  s : State | some s.trans
inv2 C:     │                                                                           │                                                               └──  one Init
inv3 C:     │                                                                           │                                                                   └──  all s : State, e : Event | lone e.(s.trans)
inv4 C:     │                                                                           │                                                                       └──  let adj = { s1, s2 : State | some e : Event | s1->e->s2 in trans
inv6 C:     │                                                                           │                                                                           └──  all e : Event | some (trans.State).e
inv5 C:     │                                                                           │                                                                               └──  all s1,s2 : State | s1.trans.State = s2.trans.State
3idug6hzR8xq8kGCQ M:     │                                                                           │                                                                                   └──  user added theme options. same as previous submission
inv5 T:     │                                                                           └──  all s : State | s.trans in Event
inv1 C:     │                                                                               └──  all  s : State | some s.trans
inv2 C:     │                                                                                   └──  one Init
inv3 C:     │                                                                                       └──  all s : State, e : Event | lone e.(s.trans)
inv4 U:     │                                                                                           └──  all s : State | some e : Event | e.(s.trans) in State
inv1 O:     ├──  always some State.trans.Event
inv1 O:     │   └──  always (all s: State | some s.trans.Event)
inv1 C:     │       └──  always (all s: State | some s.trans)
inv1 T:     │           └──  always (State in trans.(Event->State))
inv1 T:     │               └──  always (trans.(Event->State))
inv1 T:     │                   └──  always (State in trans)
inv1 O:     │                       └──  always (State in Event.trans.State)
inv2 C:     │                           └──  always one Init
inv3 O:     │                               └──  always (all s: State | lone s.trans)
inv3 U:     │                                   └──  always (all s: State, e: Event | lone s.trans.e)
inv3 S:     │                                       └──  always (all s: State | lone s.state.State)
inv3 B:     │                                           └──  always (all s: State | lone s.trans.State)
inv1 T:     │                                               └──  ~trans.trans in iden
inv1 T:     │                                                   └──  ~trans.trans in iden
inv1 T:     │                                                       └──  ~trans.trans in iden
inv1 E:     │                                                           └──   
inv3 B:     │                                                               └──  all s: State | lone s.trans.State
inv1 T:     │                                                                   └──  ~trans.trans in iden
inv1 B:     │                                                                       └──  ~(trans.State).(trans.State) in iden
inv1 C:     │                                                                           └──  all s: State | some s.trans
inv4 T:     │                                                                               └──  all s: State | State in Event.(s.*trans)
inv4 C:     │                                                                                   └──  Init.^{x, y: State | some (x.trans).y
inv5 C:     │                                                                                       └──  all s, ss: State | s.trans.State = ss.trans.State
inv6 C:     │                                                                                           └──  State.trans.State = Event
inv7 T:     │                                                                                               └──  all s: State | Init in (^trans.s).Event
inv7 S:     │                                                                                                   └──  all s: State | s in s.^{x, y: State | some (x.trans).y
inv7 B:     │                                                                                                       └──  all s: State | s in s.^{x, y: State | some (x.trans).y
inv7 B:     │                                                                                                           └──  all s: State | Init in ^{x, y: State | some (x.trans).y
inv7 B:     │                                                                                                               └──  all s: Event.(State.trans) | s in ^{x, y: State | some (x.trans).y
inv7 B:     │                                                                                                                   └──  all s: Event.(State.trans) | Init in ^{x, y: State | some (x.trans).y
inv7 B:     │                                                                                                                       └──  all s: Event.(State.trans) | s in ^{x, y: State | some (x.trans).y
xCfF5sug5a9PZG9Yi M:     │                                                                                                                           └──  user added theme options. same as previous submission
PHwPeBWMKkec75mvJ M:     │                                                                                                                               └──  user added theme options. same as previous submission
inv1 C:     │                                                                                                                                   └──  all s: State | some s.trans
inv7 B:     │                                                                                                                                       └──  all s: Event.(State.trans) | s in ^{x, y: State | some (x.trans).y
inv2 C:     ├──  one Init
inv2 C:     │   └──  one Init
inv1 C:     │       └──  all s: State | some s.trans
inv1 C:     ├──  all s:State | some s.trans
inv1 C:     │   └──  all s:State | some s.trans
inv2 C:     │       └──  one Init
inv3 C:     │           └──  all s,s1,s2:State,e:Event | s->e->s1 in trans and s->e->s2 in trans implies s1=s2
inv1 E:     ├──   
inv1 E:     ├──   
inv4 T:     ├──  State in Event.Init.trans
inv4 T:     │   └──  State in Event.Init.trans
inv4 T:     │       └──  State in Event.Init.trans
inv4 T:     ├──  all s: State | s in Init.trans
inv4 O:     │   └──  all s: State | s in Init.^(Event.trans)
inv1 C:     ├──  all s : State | some s.trans
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone e.(s.trans)
inv4 U:     │           └──  no trans[Event]
inv4 S:     │               └──  let ts : onlyStates[] |   		all s : State | s in Init.^ts
inv4 S:     │                   └──  None
inv4 S:     │                       └──  None
inv4 S:     │                           └──  None
inv4 S:     │                               └──  None
inv5 S:     │                                   └──  None
inv6 S:     │                                       └──  all e: Event, some s: State | e in getEventsOfState[s]
inv6 S:     │                                           └──  all e: Event, some s: State | e in getEventsOfState[s]
inv6 S:     │                                               └──  None
inv7 S:     │                                                   └──  None
inv1 C:     │                                                       └──  all s : State | some s.trans
inv1 C:     │                                                           └──  all s : State | some s.trans
hE7NhN6MuhrXzBPau N:     │                                                               └──  user added extra characters to pred name
inv7 S:     │                                                                   └──  None
inv7 S:     │                                                                       └──  None
iETmfwHrrquQccsxL M:     │                                                                           └──  user added theme options. same as previous submission
inv7 S:     │                                                                               └──  None
inv1 T:     ├──  all s:State , e:Event | some e->s in trans
inv1 T:     │   └──  all s:State , e:Event | some e->s in s.trans
inv1 T:     │       └──  all s:State , e:Event | some (e->s) in s.trans
inv1 U:     │           └──  all s:State , e:Event | some e->s
inv1 U:     │               └──  all s:State | some trans
inv1 C:     │                   └──  all s:State | some s.trans
inv1 B:     │                       └──  some State.trans
inv2 B:     │                           └──  one State
inv2 B:     │                               └──  all s:State | no s.trans
inv2 B:     │                                   └──  one State && all s:State | no s.trans
inv2 B:     │                                       └──  one State && no trans
inv2 C:     │                                           └──  one Init
inv3 T:     │                                               └──  all s:State, s1:State, e:Event | lone e->s1 in s.trans
inv3 U:     │                                                   └──  all s:State, s1:State, e:Event | lone e->s1
inv3 B:     │                                                       └──  all s:State | lone s.trans.State
inv3 S:     │                                                           └──  all s:State, all e:Event | lone s.trans.e
inv3 S:     │                                                               └──  all s:State, all e:Event | lone s.trans.Event
inv3 U:     │                                                                   └──  all s:State,e:Event | lone s.trans.e
inv3 U:     │                                                                       └──  all s:State,e:Event | lone s.trans.Event
inv3 U:     │                                                                           └──  all s:State | lone s.trans.Event
inv3 B:     │                                                                               └──  all s:State | lone s.trans.State
inv3 U:     │                                                                                   └──  all s:State, e:Event | lone s.trans.e
inv3 U:     │                                                                                       └──  all s:State, e:Event | lone s.trans.e
inv4 T:     │                                                                                           └──  all s:State | s.^trans = State
inv4 T:     │                                                                                               └──  all s:State | s.^s.trans = State
inv4 O:     │                                                                                                   └──  all s:State | s.^(s.trans) = State
inv4 T:     │                                                                                                       └──  all s:State | (s.trans).^State = State
inv4 T:     │                                                                                                           └──  all s:State | (s.trans).^Event = State
inv4 B:     │                                                                                                               └──  all s:State, s1:State, e:Event | e->s1 in s.trans
inv4 U:     │                                                                                                                   └──  all s:State, s1:State, e:Event | lone s.trans.Event
inv4 T:     │                                                                                                                       └──  all s:State, s1:State,e:Event, t:trans | s->e in trans
inv4 T:     │                                                                                                                           └──  all s:State, s1:State,e:Event, t:trans | s->e in trans
inv4 T:     │                                                                                                                               └──  all s:State, s1:State,e:Event, t:trans | s->e in s1.trans
inv4 T:     │                                                                                                                                   └──  all s:State, s1:State,e:Event, t:trans | s->e in s.trans
inv4 T:     │                                                                                                                                       └──  all s:State, s1:State,e:Event, t:trans | s->e in t
inv4 T:     │                                                                                                                                           └──  trans = Event->State
inv6 C:     │                                                                                                                                               └──  all e:Event | some s:State | e in s.trans.State
inv6 C:     │                                                                                                                                                   └──  all e:Event | e in State.trans.State
inv6 C:     │                                                                                                                                                       └──  Event = State.trans.State
inv3 B:     │                                                                                                                                                           └──  all s:State | Event = s.trans.State
inv3 B:     │                                                                                                                                                               └──  all s:State | lone s.trans.State
inv3 U:     │                                                                                                                                                                   └──  all s:State | s.trans.State in Event
inv3 T:     │                                                                                                                                                                       └──  all s:State, e:Event | lone  s.trans.State.e
inv5 C:     │                                                                                                                                                                           └──  all s:State, s1:State | s.trans.State = s1.trans.State
inv5 U:     │                                                                                                                                                                               └──  State.trans.State = State.trans.State
inv1 E:     ├──   
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  all s: State | some s.trans
inv2 C:     │       └──  one Init
inv3 S:     │           └──  all s: State | e: Event | lone s.trans.State
inv3 S:     │               └──  all s: State | e: Event | lone e.trans.s
inv2 C:     │                   └──  one Init
inv2 C:     │                       └──  one Init
inv4 O:     │                           └──  all s: State | s in Init.^(trans.Event)
inv4 O:     │                               └──  all s: State | s in Init.^(trans.Event)
inv3 U:     │                                   └──  all s: State | all e: Event | lone s.trans.e
inv1 E:     ├──   
inv1 E:     ├──   
inv1 E:     ├──   
inv1 E:     │   └──   
inv1 E:     │       └──   
inv3 T:     │           └──  all s : State, e: Event | lone e.s.trans
inv3 C:     │               └──  all s : State, e: Event | lone e.(s.trans)
inv3 O:     │                   └──  all s : State | lone Event.(s.trans)
inv3 C:     │                       └──  all s : State , e:Event | lone e.(s.trans)
inv4 T:     │                           └──  Init.^adj
inv4 S:     │                               └──  None
inv4 S:     │                                   └──  None
inv4 S:     │                                       └──  None
inv4 S:     │                                           └──  None
inv4 S:     │                                               └──  None
inv5 B:     │                                                   └──  all s,r :State | (r.trans).s = (s.trans).r
inv5 C:     │                                                       └──  all s,r :State | (r.trans).State = (s.trans).State
inv6 O:     │                                                           └──  all e: Event | some (trans.e).State
inv6 O:     │                                                               └──  all e: Event | some State.(trans.e)
inv6 C:     │                                                                   └──  all e: Event | some (trans.State).e
inv7 S:     │                                                                       └──  None
inv7 S:     │                                                                           └──  all s: in Init.^adj | some s.^adj & Init
inv7 S:     │                                                                               └──  None
inv1 T:     ├──  all s:State | s.trans != none
inv1 T:     │   └──  all s:State | s.trans != none
inv1 S:     │       └──  all s:State | s.trans = some
inv5 T:     ├──  all s1,s2 : State | no ((s1.Event)-(s2.Event))
inv5 T:     │   └──  all s1,s2 : State | no ((Event.s1)-(Event.s2))
inv1 E:     ├──   
inv1 E:     ├──   
inv7 O:     ├──  all x : State | (x.trans) in Event one -> one State
inv7 B:     │   └──  all x : Init | (x.trans) in Event one -> one State
inv7 B:     │       └──  all x : Init | (x.trans) in Event one -> one State
inv7 O:     │           └──  all x : Event | (trans.x) in State one -> one State
inv7 O:     │               └──  all x : Event | (trans.x) in State one -> one Init
inv7 T:     │                   └──  all x : Event | Init.^(~(trans.x))
inv7 T:     │                       └──  all x : Event | Init.(^(~(trans.x)))
inv7 O:     │                           └──  all x : Event | some Init.(^(~(trans.x)))
inv7 O:     │                               └──  all x : Event | some Init.(^(~(trans.x)))
inv7 B:     │                                   └──  all x : Event | some Init.(*(~(trans.x)))
inv7 B:     │                                       └──  all x : Event | some Init.(*(~(trans.x)))
inv7 B:     │                                           └──  all x : Event | some Init.(*(~(trans.x)))
inv7 B:     │                                               └──  all x : Event | some (*(~(trans.x))).Init
inv7 B:     │                                                   └──  all x : State | some Init.(*(~(x.trans)))
inv7 B:     │                                                       └──  all x : State | some Init.(*(~(x.trans)))
inv7 B:     │                                                           └──  all x : State | some (*(~(x.trans))).Init
inv7 U:     │                                                               └──  all x : State | no iden & (x.trans)
inv7 B:     │                                                                   └──  all x : State | (no iden & (x.trans)) and some ((*(~(x.trans))).Init)
inv7 O:     │                                                                       └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x
inv7 O:     │                                                                           └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x
inv7 O:     │                                                                               └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x and z != y
inv7 O:     │                                                                                   └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x and x != y
inv7 O:     │                                                                                       └──  all x : State, y : Init, z : Event | (trans in y one -> one z one -> one x) and x != y
inv7 B:     │                                                                                           └──  all x : State, y : Init, z : Event | (trans in y one -> one z one -> one x) implies x != y
inv1 C:     ├──  all s : State | some s.trans
inv2 T:     │   └──  all s : State | one i : Init | i in s.trans
inv2 B:     │       └──  all s : State | one i : Init | i in s
inv2 T:     │           └──  one s : Init | no s'.Init
inv2 B:     │               └──  all s : State | one i : Init | i in s
inv2 T:     │                   └──  all s : State | one i : Init | i in s.trans
inv1 C:     ├──  all s : State | some s.trans
inv1 B:     │   └──  some State.trans
inv1 C:     ├──  all s : State | some (s.trans)
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all s : State, e : Event | lone(e.(s.trans))
inv6 C:     │           └──  Event = (State.trans).State
inv4 T:     │               └──  State = ^(Init.trans)
inv4 O:     │                   └──  State = ^(Init.trans).State
inv4 O:     │                       └──  State = ^(Init.trans).State
inv4 O:     │                           └──  State in ^(Init.trans).State
inv5 O:     │                               └──  all s : State | State.(~(s.trans)) = Event
inv5 C:     │                                   └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv4 O:     │                                       └──  all s : State | s in State.(Init.trans)
inv4 O:     │                                           └──  all s : State | s in (Init.trans).State
inv4 O:     │                                               └──  all s : State | s in ^(Init.trans).State
inv4 T:     │                                                   └──  all s : State | s in Init.trans
inv4 O:     │                                                       └──  all s : State | s in Init.trans.State
inv4 O:     │                                                           └──  all s : State | s in Event.(Init.trans)
inv4 O:     │                                                               └──  all s : State | s in Event.^(Init.trans)
inv4 O:     │                                                                   └──  all s : State | s in Event.(Init.trans)
inv1 C:     │                                                                       └──  all s : State | some (s.trans)
inv2 C:     │                                                                           └──  one Init
inv3 C:     │                                                                               └──  all s : State, e : Event | lone(e.(s.trans))
inv5 C:     │                                                                                   └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv6 C:     │                                                                                       └──  Event = (State.trans).State
inv4 O:     │                                                                                           └──  State = Init.^(trans.State)
inv4 O:     │                                                                                               └──  all s : State | s in Init.^(trans.State)
inv4 O:     │                                                                                                   └──  all s : State | s in Init.^(trans.State)
inv4 O:     │                                                                                                       └──  State = Init.^(trans.State)
inv4 O:     │                                                                                                           └──  State = Init.^(State.trans)
inv4 T:     │                                                                                                               └──  State = Init.^(trans)
inv4 O:     │                                                                                                                   └──  State = Event.^(Init.trans)
inv4 O:     │                                                                                                                       └──  all s : State | some e : Event | s->e in ^(Init.trans)
inv4 T:     │                                                                                                                           └──  all s : State | some e : Event | s->e in Init.^(State.trans)
inv4 B:     │                                                                                                                               └──  all x : Init | State in Event.*(x.trans)
inv4 C:     │                                                                                                                                   └──  let t = { x,y : State | some z : Event | x->z->y in trans
inv4 T:     │                                                                                                                                       └──  let t = { all x,y : State | some z : Event | x->z->y in trans
inv4 C:     │                                                                                                                                           └──  let t = { s1, s2 : State | some e : Event | s1->e->s2 in trans
inv4 T:     │                                                                                                                                               └──  let t = { some s1, s2 : State | some e : Event | s1->e->s2 in trans
inv4 B:     │                                                                                                                                                   └──  let t = { s2, s1 : State | some e : Event | s1->e->s2 in trans
inv4 C:     │                                                                                                                                                       └──  State in Init.(^onlyStates)
inv4 S:     │                                                                                                                                                           └──  State in Init.(^onlyStates)
inv4 C:     │                                                                                                                                                               └──  State in Init.(^onlyStates)
inv4 C:     │                                                                                                                                                                   └──  State = Init.(^onlyStates)
inv4 C:     │                                                                                                                                                                       └──  State = Init.(^onlyStates)
inv4 C:     │                                                                                                                                                                           └──  State = Init.~(^onlyStates)
inv4 C:     │                                                                                                                                                                               └──  State = Init.(^onlyStates)
inv4 S:     │                                                                                                                                                                                   └──  State = Init.(^onlyStates)
inv4 C:     │                                                                                                                                                                                       └──  State = Init.(^onlyStates)
inv4 C:     │                                                                                                                                                                                           └──  State = Init.(^onlyStates)
inv7 S:     │                                                                                                                                                                                               └──  None
inv7 B:     │                                                                                                                                                                                                   └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 O:     │                                                                                                                                                                                                       └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x
inv7 U:     │                                                                                                                                                                                                           └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 T:     │                                                                                                                                                                                                               └──  all s1,s2:State, e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans and s1 in s1.trans
inv7 T:     │                                                                                                                                                                                                                   └──  all s1, s2 : State, e1, e2 : Event | (s1->e1->s2 in trans) implies ((s2->e2->s1 in trans) and (s1 in s1.trans))
inv7 O:     │                                                                                                                                                                                                                       └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 S:     │                                                                                                                                                                                                                           └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 B:     │                                                                                                                                                                                                                               └──  let t = {x,y : State | some z : Event | x->z->y in trans
inv7 U:     │                                                                                                                                                                                                                                   └──  let trans_bin = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                                       └──  all x : Event | (trans.x) in State one -> one State
inv7 B:     │                                                                                                                                                                                                                                           └──  all s1,s2:State | some e1,e2:Event  | s1->e1->s2 in trans implies s2->e2->s1 in trans
inv7 S:     │                                                                                                                                                                                                                                               └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 O:     │                                                                                                                                                                                                                                                   └──  let trans2 = {s1, s2 : State | some s1.trans.s2
inv7 B:     │                                                                                                                                                                                                                                                       └──  some (Event.(State.trans))
inv7 O:     │                                                                                                                                                                                                                                                           └──  all x : State, y : Init, z : Event | trans in y one -> one z one -> one x and z != y
inv1 C:     │                                                                                                                                                                                                                                                               └──  all s : State | some (s.trans)
inv2 C:     │                                                                                                                                                                                                                                                                   └──  one Init
inv3 C:     │                                                                                                                                                                                                                                                                       └──  all s : State, e : Event | lone(e.(s.trans))
inv4 C:     │                                                                                                                                                                                                                                                                           └──  State = Init.(^onlyStates)
inv5 C:     │                                                                                                                                                                                                                                                                               └──  all s1, s2 : State | State.(~(s1.trans)) = State.(~(s2.trans))
inv6 C:     │                                                                                                                                                                                                                                                                                   └──  Event = (State.trans).State
inv7 E:     │                                                                                                                                                                                                                                                                                       └──   
inv7 S:     │                                                                                                                                                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                           └──  None
inv1 E:     ├──   
inv5 O:     ├──  all x, y : State | x.trans = y.trans
inv5 O:     │   └──  all x, y : State | x.trans in y.trans
inv5 B:     │       └──  all x, y : State | some x.trans & y.trans
inv5 T:     │           └──  State in State<:trans
inv5 T:     │               └──  State in Event.(State<:trans)
inv5 T:     │                   └──  State in (State<:trans).Event
inv5 O:     │                       └──  State in State.(trans.Event)
inv5 T:     │                           └──  State in State.(trans<:Event)
inv1 E:     ├──   
AWv3Xj44MexiMGG3r N:     ├──  user added extra characters to pred name
XHrQQHy29ex4t6ZEz N:     │   └──  user added extra characters to pred name
QdfMz9aGGx8jDWNof N:     │       └──  user added extra characters to pred name
uL7HXbawRFBbDuMbb N:     │           └──  user added extra characters to pred name
nGWZ5w6oK9zDtFACy N:     │               └──  user added extra characters to pred name
QjysAxXLP9AZomQBA N:     │                   └──  user added extra characters to pred name
inv3 C:     │                       └──  all x : State, y : Event | lone y.(x.trans)
inv4 B:     │                           └──  all x : Init, y : Event | State in y.(x.trans)
inv4 B:     │                               └──  all x : Init, y : Event | State in y.*(x.trans)
inv4 B:     │                                   └──  all x : Init, y : Event | State in y.^(x.trans)
inv4 B:     │                                       └──  all x : Init, y : Event | State in y.(x.trans)
inv4 B:     │                                           └──  all x : Init | State in Event.*(x.trans)
inv4 B:     │                                               └──  all x : State | State in Event.*(x.trans)
inv4 B:     │                                                   └──  all x : State | State in Event.*(x.trans)
inv4 B:     │                                                       └──  all x : Init | State in Event.*(x.trans)
inv4 B:     │                                                           └──  all x : Init, y : State | State in y.^(x.trans)
inv4 B:     │                                                               └──  all x : Init, y : State | State in y.(x.trans)
inv4 B:     │                                                                   └──  all x : Init | State in Event.*(x.trans)
inv4 B:     │                                                                       └──  all x : Init | State in Event.*(x.trans) + x
inv4 S:     │                                                                           └──  all x : Init | State in lone Event.*(x.trans)
inv4 T:     │                                                                               └──  all x : Init, y : State | some (Event.(x.trans)).y
inv4 S:     │                                                                                   └──  None
inv4 S:     │                                                                                       └──  None
inv4 S:     │                                                                                           └──  None
inv4 S:     │                                                                                               └──  None
inv4 S:     │                                                                                                   └──  all x : Init | Node in (*(x.trans)).Event
inv4 B:     │                                                                                                       └──  all x : Init | State in (*(x.trans)).Event
inv4 S:     │                                                                                                           └──  all x : Init, all y : Event | State in *(x.trans).y
inv4 B:     │                                                                                                               └──  all x : Init, y : Event | State in *(x.trans).y
inv4 B:     │                                                                                                                   └──  all x : Init, y : Event | State in y.*(x.trans)
inv4 B:     │                                                                                                                       └──  all x : Init, y : Event | State in y.*(x.trans) + x
inv4 B:     │                                                                                                                           └──  all x : Init, y : Event | State in y.*(x.trans)
inv4 B:     │                                                                                                                               └──  all u : Init | State in u.*{ x : State, y : State | x->Event->y in trans
inv4 S:     │                                                                                                                                   └──  all u : Init | Node in  u.*{ x : State, y : State | x->Event->y in trans
inv4 B:     │                                                                                                                                       └──  all u : Init | State in u.*{ x : State, y : State | x->Event->y in trans
inv4 B:     │                                                                                                                                           └──  all u : Init | State in u.*{ x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                               └──  all u : Init | State in u.*{ x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                   └──  all u : Init | State in (u.*{ x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                       └──  some u : Init | State in u.*{ x : State, y : State | some e : Event | x->e->y in trans
inv4 S:     │                                                                                                                                                           └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 S:     │                                                                                                                                                               └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                                   └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                                       └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 T:     │                                                                                                                                                                           └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 T:     │                                                                                                                                                                               └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                                                   └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                                                       └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 B:     │                                                                                                                                                                                           └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 S:     │                                                                                                                                                                                               └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 O:     │                                                                                                                                                                                                   └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 C:     │                                                                                                                                                                                                       └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 C:     │                                                                                                                                                                                                           └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv4 C:     │                                                                                                                                                                                                               └──  let t = { x : State, y : State | some e : Event | x->e->y in trans
inv6 C:     │                                                                                                                                                                                                                   └──  Event in (State.trans).State
inv4 C:     │                                                                                                                                                                                                                       └──  State in Init.(^{ x : State, y : State | some e : Event | x->e->y in trans
inv1 S:     ├──  all State | trans != none
inv1 E:     ├──   
inv1 C:     ├──  all s:State | some s. trans
inv2 C:     │   └──  one Init
inv3 T:     │       └──  all e:Event| some e.~trans
inv3 T:     │           └──  all e:Event| lone e.~State.trans
inv3 T:     │               └──  all e:Event| lone e.State.trans
inv3 O:     │                   └──  all e:Event| lone e.(State.trans)
inv3 C:     │                       └──  all e:Event, s:State| lone e.(s.trans)
inv4 T:     │                           └──  all s:State | s in Init.^trans
inv4 T:     │                               └──  all s:State, i:Init | s in i.^trans
inv4 T:     │                                   └──  all s:State, i:Init | s in i.^trans
inv4 T:     │                                       └──  all s:State, i:Init | s in i.trans
inv4 B:     │                                           └──  all s:State, i:Init | s in (i.trans).State
inv4 B:     │                                               └──  all s:State, i:Init | s in State.(i.trans)
inv4 T:     │                                                   └──  all s:State, i:Init | s in (i.trans)->State
inv4 T:     │                                                       └──  all s:State, i:Init | s in State->(i.trans)
inv4 T:     │                                                           └──  all s:State, i:Init | s in (i.trans)
inv4 S:     │                                                               └──  all s:State, i:Init |  some (i.^trans :< s )
inv4 T:     │                                                                   └──  all s:State, i:Init |  some (i.^trans :> s )
inv4 T:     │                                                                       └──  all s:State, i:Init |  i.^(s.trans)
inv4 B:     │                                                                           └──  all s:State, i:Init |  some i.^(s.trans)
inv4 B:     │                                                                               └──  all s:State, i:Init |  some (i.^(s.trans))
inv4 B:     │                                                                                   └──  all s:State, i:Init |  some (Event.^(i.trans))
inv4 S:     │                                                                                       └──  all s1 : State |
inv4 S:     │                                                                                           └──  all s1 : State |  ^(Init.trans).s
inv4 T:     │                                                                                               └──  all s1 : State |  ^(Init.trans).s1
inv4 T:     │                                                                                                   └──  all s1 : State |  ^(Init.trans)
inv4 T:     │                                                                                                       └──  all s1 : State |  (Init.trans)
inv4 T:     │                                                                                                           └──  all s1 : State |  (Init.trans)
inv4 T:     │                                                                                                               └──  all s1 : State |  (Init.Event)
inv4 T:     │                                                                                                                   └──  all s1 : State |  (Init->Event)
inv4 T:     │                                                                                                                       └──  all s1 : State |  (Init->Event) in trans
inv4 T:     │                                                                                                                           └──  all s1 : State |  s1.(Init->Event) in trans
inv4 T:     │                                                                                                                               └──  all s1 : State |  s1.(Init->Event) in s1.trans
inv6 C:     │                                                                                                                                   └──  Event = (State.trans).State
inv4 O:     │                                                                                                                                       └──  all s1 : State |  some (Init.trans).s1
inv4 O:     │                                                                                                                                           └──  all s1 : State |  one (Init.trans).s1
inv4 B:     │                                                                                                                                               └──  all s1 : (State-Init) |  one (Init.trans).s1
inv4 B:     │                                                                                                                                                   └──  all s1 : (State-Init) |  some (Init.trans).s1
inv3 C:     │                                                                                                                                                       └──  all e:Event, s:State| lone e.(s.trans)
inv4 O:     │                                                                                                                                                           └──  all s1 : State |  some (^(Init.trans)).s1
inv4 T:     │                                                                                                                                                               └──  all s1 : State |  some ((Init.trans)).^s1
inv4 T:     │                                                                                                                                                                   └──  all s1 : State |  some ((Init.^trans)).s1
inv4 O:     │                                                                                                                                                                       └──  all s1 : State |  some ((Init.trans)).s1
inv5 T:     │                                                                                                                                                                           └──  all s:State | Event.(s.trans)
inv5 E:     │                                                                                                                                                                               └──   
inv5 T:     │                                                                                                                                                                                   └──  all s:State | Event.(s.trans)
inv5 T:     │                                                                                                                                                                                       └──  all s:State | Event->(s.trans)
inv5 T:     │                                                                                                                                                                                           └──  all s:State | Event.(s.trans)
inv5 T:     │                                                                                                                                                                                               └──  all s:State | (s.trans)->Event
inv5 T:     │                                                                                                                                                                                                   └──  all s:State | (s.trans).Event
inv6 C:     │                                                                                                                                                                                                       └──  Event = (State.trans).State
inv7 E:     │                                                                                                                                                                                                           └──   
inv7 T:     │                                                                                                                                                                                                               └──  all s1:State | Init in (s1.trans)
inv7 O:     │                                                                                                                                                                                                                   └──  all s1:State | Init in (s1.trans).State
inv4 O:     │                                                                                                                                                                                                                       └──  all s1 : State |  some ((Init.trans)).s1
inv1 T:     ├──  State in Event.trans
inv1 B:     │   └──  State in Event.(State.trans)
inv2 C:     │       └──  one Init
inv1 S:     │           └──  trans.
inv3 U:     │               └──  all s : State | (s.trans).State in Event
inv3 S:     │                   └──  all s : State | all disj e1, e2 : Event | e1 in (s.trans).State and e2 in (s.trans).State implies s1 = s2
inv3 B:     │                       └──  all s : State | all disj e1, e2 : Event | e1 in (s.trans).State and e2 in (s.trans).State implies e1 = e2
inv3 O:     │                           └──  all s : State | all disj e1, e2 : State | e1 in Event.(s.trans) and e2 in Event.(s.trans) implies e1 = e2
inv3 C:     │                               └──  all s: State | ~(s.trans).(s.trans) in iden
inv7 T:     │                                   └──  Init in Event.(State.^trans)
inv7 S:     │                                       └──  Init in Event.(State.trans)^
inv7 B:     │                                           └──  Init in Event.^(State.trans)
inv7 B:     │                                               └──  Init in Event.^(State.trans)
inv7 B:     │                                                   └──  Init in State.^{x,y: State | some x.trans.y
inv7 T:     │                                                       └──  Init in State.^{x,y: State | some x.~trans.y
inv7 T:     │                                                           └──  Init in ~trans
inv7 T:     │                                                               └──  Init in ~trans.Event
inv7 T:     │                                                                   └──  Init in ~trans.State
inv7 T:     │                                                                       └──  Init in ~(trans.State)
inv7 T:     │                                                                           └──  Init in ~(Event.(trans.State))
inv7 T:     │                                                                               └──  Init in ~(Event.(State.trans))
inv7 O:     │                                                                                   └──  Init in (Event.~(State.trans))
inv7 O:     │                                                                                       └──  one Init and Init in (Event.~(State.trans))
inv7 T:     │                                                                                           └──  trans = ~trans
inv7 T:     │                                                                                               └──  trans.Event
inv7 O:     │                                                                                                   └──  let ss = {x,y: State | some x.trans.y
inv7 T:     │                                                                                                       └──  let ss = {x : State | some Init.trans.x
inv7 O:     │                                                                                                           └──  let ss = {x,y : State | y in Init and some y.trans.x
inv7 T:     │                                                                                                               └──  all e : Event | some e.(Init.trans) implies e.~(Init.trans)
inv7 T:     │                                                                                                                   └──  all e : Event | some e.(Init.trans) implies ~(Init.trans).e
inv7 U:     │                                                                                                                       └──  all e : Event | some e.(Init.trans) implies some ~(Init.trans).e
inv7 U:     │                                                                                                                           └──  all e : Event | some e.(Init.trans) implies some (e->Init).trans
inv7 B:     │                                                                                                                               └──  all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 C:     │       └──  all e:Event, s:State | lone e.(s.trans)
inv4 S:     │           └──  all i:Init | some e:Event | State in e.(i.*tras)
inv4 S:     │               └──  all i:Init | some e:Event | State in e.(i.*tras)
inv4 T:     │                   └──  all i:Init | some e:Event | State in e.(i.*trans)
inv4 B:     │                       └──  all i:Init | some e:Event | State in e.*(i.trans)
inv4 B:     │                           └──  all i:Init | some e:Event | some Init implies State in e.*(i.trans)
inv4 B:     │                               └──  all i:Init | some e:Event | ( State in e.*(i.trans) ) or no Init
WMPxheBdmkHihMW5J N:     │                                   └──  user added extra characters to pred name
sjgCKpDB3nNMoHHja N:     │                                       └──  user added extra characters to pred name
7FSyKeL6Yj7GujK8S N:     │                                           └──  user added extra characters to pred name
nWdeoDaoeuJntSDKC N:     │                                               └──  user added extra characters to pred name
C3MWDcRmCprohSyr9 N:     │                                                   └──  user added extra characters to pred name
XWWWdTFCmurDYpLWk N:     │                                                       └──  user added extra characters to pred name
inv4 B:     │                                                           └──  all i:Init | some e:Event | no  (State  - (e.*(i.trans) ))
inv4 B:     │                                                               └──  all i:Init | some e:Event | some  Init implies no  (State  - (e.*(i.trans) ))
inv4 B:     │                                                                   └──  all i:Init | some e:Event | some  Init and no  (State  - (e.*(i.trans) ))
inv5 S:     │                                                                       └──  all
inv5 S:     │                                                                           └──  all s,s1:Stat|  s.trans in s1.trans
inv5 O:     │                                                                               └──  all s,s1:State|  s.trans in s1.trans
inv5 O:     │                                                                                   └──  all s,s1:State|  s.trans in s1.trans and s1.trans in s.trans
inv5 O:     │                                                                                       └──  all s,s1:State|  no( s.trans  - s1.trans )
inv5 C:     │                                                                                           └──  all s,s1:State|  no( (s.trans).State  -  (s1.trans).State   )
inv4 B:     │                                                                                               └──  all i:Init | some e:Event | no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                   └──  all i:Init| no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                       └──  all i:Init|some Init implies  no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                           └──  all i:Init| some Init implies   no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                               └──  all i:Init| some State implies   no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                                   └──  all i:Init| some State implies some Init and    no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                                       └──  all i:Init| some trans implies some Init and    no ((State-Init)  - (Event.^(i.trans)) )
inv4 U:     │                                                                                                                           └──  all i:Init| no trans implies one State or     no ((State-Init)  - (Event.^(i.trans)) )
inv4 T:     │                                                                                                                               └──  State in  Init.^trans
inv4 S:     │                                                                                                                                   └──  State in Events. (Init.^trans)
inv4 T:     │                                                                                                                                       └──  State in Event. (Init.^trans)
inv4 B:     │                                                                                                                                           └──  some Init and all i:Init|  no ((State-Init)  - (Event.^(i.trans)) )
inv4 B:     │                                                                                                                                               └──  some Init and  some (State-Init) and all i:Init|    no ((State-Init)  - (Event.^(i.trans)) )
inv4 S:     │                                                                                                                                                   └──  all  s : (State - Init)  | some e:Event |  some ( Init & trans^.(e->s) )
inv4 S:     │                                                                                                                                                       └──  all  s : (State - Init)  | some e:Event |  some ( Init & trans^.(e->s)
inv4 S:     │                                                                                                                                                           └──  all  s : (State - Init)  | some e:Event |  some ( Init & trans^.(e->s) )
inv4 S:     │                                                                                                                                                               └──  no ((States - Init)-(trans.~trans))
inv4 T:     │                                                                                                                                                                   └──  no ((State - Init)-(trans.~trans))
inv4 T:     │                                                                                                                                                                       └──  no ((State - Init)-(trans.~trans))
inv1 S:     ├──  all State | trans != none
inv7 O:     ├──  all s : State | Init in s.^{x,y : State | some (x.trans).y
inv7 T:     │   └──  all t : trans | Init in State.^{x,y : State | some (x.t).y
inv1 C:     ├──  all s : State | some s.trans
inv2 B:     │   └──  one s : State | no trans.s
inv2 B:     │       └──  one s : State | no trans.s
inv1 C:     │           └──  all s : State | some s.trans
inv2 B:     │               └──  one s : State | no trans.s
inv2 C:     │                   └──  one Init
inv3 O:     │                       └──  all s : State | lone s.trans
inv3 C:     │                           └──  all s : State, e : Event | lone s.trans[e]
inv4 T:     │                               └──  all i : Init, s : State | s in i.*trans[Event]
inv4 B:     │                                   └──  all i : Init, s : State | s in i.*(trans[Event])
inv3 S:     │                                       └──  all s : State, e : Event | lone s.trans[e]
inv4 S:     │                                           ├──  None
inv4 S:     │                                           │   └──  None
inv4 S:     │                                           │       └──  None
inv4 S:     │                                           │           └──  None
inv4 S:     │                                           │               └──  None
inv4 S:     │                                           │                   └──  None
inv5 O:     │                                           │                       └──  all s1, s2 : State | s1.trans = s2.trans
inv5 C:     │                                           │                           └──  all s1, s2 : State | s1.trans.State = s2.trans.State
inv6 C:     │                                           │                               └──  all e : Event | some s : State | some s.trans[e]
inv7 S:     │                                           │                                   └──  None
inv7 S:     │                                           │                                       └──  None
inv7 S:     │                                           │                                           └──  None
inv7 S:     │                                           │                                               └──  None
TpRbguLkCssWMzyy2 M:     │                                           │                                                   └──  user added theme options. same as previous submission
inv4 S:     │                                           ├──  None
inv3 C:     │                                           ├──  all s : State, e : Event | lone s.trans[e]
inv4 S:     │                                           └──  None
inv1 E:     ├──   
inv1 S:     ├──  all s: State |
inv2 C:     │   └──  one Init
inv1 B:     │       └──  all s: State | some trans.s
inv1 C:     │           └──  all s: State | some s.trans
inv3 B:     │               └──  all s: State| lone s.trans.State
inv3 B:     │                   └──  all s: State| some s.trans.State
inv4 B:     │                       └──  all e: Event | e.(Init.trans) = State
inv4 B:     │                           └──  all i: Init | Event.(i.trans) = State
inv4 B:     │                               └──  all i: Init, e: Event | e.(i.trans) = State
inv4 B:     │                                   └──  all i: Init | Event.(i.trans) = State
inv4 T:     │                                       └──  all e: Event | e.(Init.^trans) = State
inv4 C:     │                                           └──  Init.^{x, y: State | some (x.trans).y
inv5 C:     │                                               └──  all s,ss: State | (s.trans).State = (ss.trans).State
inv6 C:     │                                                   └──  Event in State.trans.State
inv7 T:     │                                                       └──  all s: State | s in Event.(s.^trans)
inv7 T:     │                                                           └──  all s: State | s in Event.(s.^trans)
inv7 T:     │                                                               └──  all s: State | s in Event.(s.*trans)
inv1 B:     ├──  some Init.trans
inv1 C:     │   └──  all s:State | some s.trans
inv2 B:     │       └──  one Init.trans
inv2 C:     │           └──  one Init
inv3 O:     │               └──  all s:State | lone s.trans
inv3 T:     │                   └──  all s:State | lone Event in State.~(s.trans)
inv3 B:     │                       └──  all s:State | lone State.~(s.trans)
inv3 C:     │                           └──  all s:State, e:Event | lone e.(s.trans)
inv4 T:     │                               └──  State in Init.^trans
inv4 T:     │                                   └──  State in Init.(^trans)
inv4 O:     │                                       └──  State in Init.^(Event.trans)
inv4 T:     │                                           └──  State in ^Init.(Event.trans)
inv4 O:     │                                               └──  all s:State | s in Event.(Init.trans)
inv4 T:     │                                                   └──  all s:State | s in ^Event.(Init.trans)
inv4 O:     │                                                       └──  all s:State | s in Event.^(Init.trans)
inv4 T:     │                                                           └──  all s:State | s in Event.(Init.^trans)
inv4 T:     │                                                               └──  State in ^(Event.(Init.trans))
inv4 T:     │                                                                   └──  State in ^(Init.trans)
inv4 O:     │                                                                       └──  State in Event.^(Init.trans)
inv5 O:     │                                                                           └──  all s:State | Event in State.~(s.trans)
inv5 U:     │                                                                               └──  all s:State | State.~(s.trans) in Event
inv6 C:     │                                                                                   └──  all e:Event | some s:State | e in State.~(s.trans)
inv5 O:     │                                                                                       └──  all s:State | Event in State.~(s.trans)
inv5 O:     │                                                                                           └──  all s:State | Event in State.~(s.trans) and Event in State.~(Init.trans)
inv4 T:     │                                                                                               └──  all s:State | s in Init.trans
inv4 T:     │                                                                                                   └──  all s:State | s in ^(Event.Init.trans)
inv4 T:     │                                                                                                       └──  all s:State | s in ^(Event.(Init.trans))
inv4 T:     │                                                                                                           └──  all s:State | s in ^(Event.(Init.trans)).trans
inv4 T:     │                                                                                                               └──  all s:State | s in ^((Event.(Init.trans)).trans)
inv4 O:     │                                                                                                                   └──  all s:State | some e:Event | s in e.^(Init.trans)
inv4 O:     │                                                                                                                       └──  all s:State | some e:Event | s in e.(Init.trans)
inv4 T:     │                                                                                                                           └──  all s:State | some e:Event | s in ^e.(Init.trans)
inv4 T:     │                                                                                                                               └──  State-Init in Event.Init.^trans
inv4 T:     │                                                                                                                                   └──  State-Init in Event.Init.trans
inv4 B:     │                                                                                                                                       └──  State-Init in Event.(Init.trans)
inv4 B:     │                                                                                                                                           └──  State-Init in Event.^(Init.trans)
inv4 T:     │                                                                                                                                               └──  State-Init in Event.(Init.^trans)
inv4 T:     │                                                                                                                                                   └──  State-Init in Event.(^Init.trans)
inv4 B:     │                                                                                                                                                       └──  State-Init in Event.^(Init.trans)
inv7 T:     │                                                                                                                                                           └──  Init in ^Event.~(State.trans)
inv4 B:     │                                                                                                                                                               └──  State-Init in Event.^(Init.trans)
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 B:     │       └──  all s:State | s->Event->State in trans
inv3 U:     │           └──  all s1,s2:State | all e:Event | lone s1->e->s2
inv3 S:     │               └──  all s1,s2:State, all e:Event | lone s1->e->s2
inv3 U:     │                   └──  all s1,s2:State | all e:Event | lone s1->e->s2
inv4 T:     │                       └──  all s:State | s in Init.trans
inv4 B:     │                           └──  all s:State | Event->s in Init.trans
inv4 T:     │                               └──  all s:State | Event->s in Init.^trans
inv4 T:     │                                   └──  all s:State | Event->s in ^trans.Init
inv4 T:     │                                       └──  all s:State | Event->s in ^trans.Init
inv4 B:     │                                           └──  all s:State | Event->s in Init.trans
inv6 S:     │                                               └──  all e:Event |
inv6 S:     │                                                   └──  all e:Event |
inv5 O:     │                                                       └──  all s:State | Event->State in s.trans
inv5 B:     │                                                           └──  all e:Event | Event->State in State.trans
inv5 B:     │                                                               └──  all e:Event | e->State in State.trans
inv5 O:     │                                                                   └──  all s1,s2 :State | Event->s2 in s1.trans
inv5 C:     │                                                                       └──  all s1,s2 :State | (s1.trans).State = (s2.trans).State
inv6 U:     │                                                                           └──  all e:Event | some (State.trans).State
inv6 B:     │                                                                               └──  some (State.trans).State
inv6 C:     │                                                                                   └──  all e:Event | some e.(State.trans)
inv7 T:     │                                                                                       └──  all s:State-Init | Init in ^(s.trans)
inv7 S:     │                                                                                           └──  all s:State-Init | Init in e.^(s.trans)
inv7 B:     │                                                                                               └──  all s:State-Init | Init in Event.^(s.trans)
inv7 B:     │                                                                                                   └──  all s:State-Init | Init in Event.(s.trans)
inv7 T:     │                                                                                                       └──  all s:State-Init | Init in Event.(s.^trans)
inv7 T:     │                                                                                                           └──  all s:State-Init | Init in Event.(s.~trans)
inv7 B:     │                                                                                                               └──  all s:State-Init | Init in Event.~(s.trans)
inv1 B:     ├──  some State.trans
inv1 C:     │   └──  all s : State | some s.trans
inv2 S:     │       └──  all i1,i2 : Initial | i1 = i2
inv2 U:     │           └──  all i1,i2 : Init | i1 = i2
inv2 S:     │               └──  no disj i1,i2 : Init
inv2 S:     │                   └──  no disj i1, i2 : Init
inv2 B:     │                       └──  all i : Init | State - Init = i
inv4 B:     │                           └──  all s : State | s in Init.*(trans.Event)
inv4 B:     │                               └──  all s : State | s in Init.*(trans[Event])
inv4 T:     │                                   └──  all s : State | s in Init.*(trans)
inv4 T:     │                                       └──  all s : State | s in Init.*(trans)
inv4 T:     │                                           └──  all s : State | s in Init.*(trans)
inv1 C:     │                                               └──  all s : State | some s.trans
inv2 S:     │                                                   └──  no disj i,j : Init
inv2 U:     │                                                       └──  no disj i,j : Init {
inv2 U:     │                                                           └──  all i,j : Init | i = j
inv2 S:     │                                                               └──  one i : Init
inv2 C:     │                                                                   └──  one i : Init {
inv2 C:     │                                                                       └──  one Init {
inv2 C:     │                                                                           └──  one Init
inv3 O:     │                                                                               └──  all s : State, e : Event | one s.trans.e
inv3 O:     │                                                                                   └──  all s : State, e : Event | one s.trans[e]
inv3 B:     │                                                                                       └──  all s : State {     	all disj e1,e2 : Event | some s.trans[e1] implies no s.trans[e2]
inv3 U:     │                                                                                           └──  all s : State, e : Event | lone s1 : State | s.trans[e] = s1
inv3 O:     │                                                                                               └──  all s : State, e : Event | no s.trans[e]
inv3 O:     │                                                                                                   └──  all s : State, e : Event | one s.trans[e]
inv3 C:     │                                                                                                       └──  all s : State, e : Event | lone s.trans[e]
inv4 T:     │                                                                                                           └──  all s : State | s in Init.*trans
inv4 O:     │                                                                                                               └──  all s : State | s in Init.trans[Event]
inv4 O:     │                                                                                                                   └──  all s : State | s in Init.(trans[Event])
inv4 O:     │                                                                                                                       └──  all s : State | s in Init.(Event.trans)
inv4 B:     │                                                                                                                           └──  all s : State | s in Init.*(Event.trans)
inv4 O:     │                                                                                                                               └──  all s : State | s in Init.trans[Event]
inv4 O:     │                                                                                                                                   └──  all s : State | s in Init.trans[Event] + Init.trans[Event].trans[Event]
inv4 C:     │                                                                                                                                       └──  all s : State | s in Init.trans[Event] + Init.trans[Event].trans[Event] + Init.trans[Event].trans[Event].trans[Event]
inv4 O:     │                                                                                                                                           └──  all s : State | s in Init.trans[Event] + Init.trans[Event].trans[Event]
inv4 O:     │                                                                                                                                               └──  all s : State | s in Init.(trans[Event]) + Init.trans[Event].trans[Event]
inv4 T:     │                                                                                                                                                   └──  all s : State | s in Init.*(trans)
inv4 T:     │                                                                                                                                                       └──  all s : State | s in Init.*(~trans)
inv4 B:     │                                                                                                                                                           └──  all s : State | s in Init.*(trans.State)
inv4 T:     │                                                                                                                                                               └──  all s : State | s in Init.*(trans.Event.State)
inv4 B:     │                                                                                                                                                                   └──  all s : State | s in Init.*(trans.State)
inv4 B:     │                                                                                                                                                                       └──  all s : State | s in Init.*(trans[State])
inv4 O:     │                                                                                                                                                                           └──  all s : State | s in Init.(trans[State])
inv4 T:     │                                                                                                                                                                               └──  all s : State | s in Init.(trans[Event][State])
inv4 T:     │                                                                                                                                                                                   └──  all s : State | s in Init.trans
inv4 O:     │                                                                                                                                                                                       └──  all s : State | s in Init.trans.Event
inv4 O:     │                                                                                                                                                                                           └──  all s : State | s in Init.trans[Event]
inv4 T:     │                                                                                                                                                                                               └──  all s : State | s in Init . *trans[Event]
inv4 T:     │                                                                                                                                                                                                   └──  all s : State | s in Init . *(trans.State.Event)
inv4 T:     │                                                                                                                                                                                                       └──  all s : State | s in Init.*(trans.State.Event)
inv4 B:     │                                                                                                                                                                                                           └──  all s : State | s in Init.*(trans [Event])
inv4 B:     │                                                                                                                                                                                                               └──  all s : State | some s.trans[Event]
inv4 B:     │                                                                                                                                                                                                                   └──  all s : State | some s.trans.State
inv4 B:     │                                                                                                                                                                                                                       └──  all s : State | s in s.trans[Event]
inv4 O:     │                                                                                                                                                                                                                           └──  all s : State | s in Init.trans[Event].trans[Event]
inv4 T:     │                                                                                                                                                                                                                               └──  all s : State | s in Init.*trans[Event]
inv4 U:     │                                                                                                                                                                                                                                   └──  all s : State | {
inv4 S:     │                                                                                                                                                                                                                                       └──  all s : State | s in Init.*tran
inv4 S:     │                                                                                                                                                                                                                                           └──  all s : State | s in Init.*tran1
inv4 S:     │                                                                                                                                                                                                                                               └──  all s : State | s in Init.*tran1
inv4 T:     │                                                                                                                                                                                                                                                   └──  all s : State | s in Init.*trans
inv4 S:     │                                                                                                                                                                                                                                                       └──  all s : State | let r[x] = x.tran[Event] | s in Init.*r
inv4 U:     │                                                                                                                                                                                                                                                           └──  all s : State | {
inv5 C:     │                                                                                                                                                                                                                                                               └──  all s1,s2 : State | s1.trans.State = s2.trans.State
inv5 C:     │                                                                                                                                                                                                                                                                   └──  all s1,s2 : State | s1.trans.State = s2.trans.State
inv5 C:     │                                                                                                                                                                                                                                                                       └──  all s1,s2 : State | s1.trans.State = s2.trans.State
inv6 C:     │                                                                                                                                                                                                                                                                           └──  all e : Event | some State.trans[e]
inv4 O:     │                                                                                                                                                                                                                                                                               └──  all s : State | s in Init.trans[Event]
inv4 O:     │                                                                                                                                                                                                                                                                                   └──  all s : State | s in Init.trans[Event] + Init.trans[Event].trans[Event]
inv4 C:     │                                                                                                                                                                                                                                                                                       └──  all s : State | s in Init.trans[Event] + Init.trans[Event].trans[Event] + Init.trans[Event].trans[Event].trans[Event]
inv7 O:     │                                                                                                                                                                                                                                                                                           └──  all s : State | Init in s.trans[Event] + s.trans[Event].trans[Event] + s.trans[Event].trans[Event].trans[Event]
inv7 O:     │                                                                                                                                                                                                                                                                                               └──  all s : State | Init in s + s.trans[Event] + s.trans[Event].trans[Event] + s.trans[Event].trans[Event].trans[Event]
inv4 S:     │                                                                                                                                                                                                                                                                                                   └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                       └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                           └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                               └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                   └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                       └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                           └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                               └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                                   └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                                       └──  all s : State | s in Init.*reachable
inv4 S:     │                                                                                                                                                                                                                                                                                                                                           └──  all s : State | s in Init .* reachable
inv4 S:     │                                                                                                                                                                                                                                                                                                                                               └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                                                   └──  all s : State | s in Init. *(reachable)
ftpet3g6F53K5YET6 N:     │                                                                                                                                                                                                                                                                                                                                                       └──  user added extra characters to pred name
inv4 S:     │                                                                                                                                                                                                                                                                                                                                                           └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                                                               └──  None
inv3 S:     │                                                                                                                                                                                                                                                                                                                                                                   └──  all s : State, e : Event | lone s.trans[e]
inv4 S:     │                                                                                                                                                                                                                                                                                                                                                                       └──  None
inv4 S:     │                                                                                                                                                                                                                                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                               └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                                   └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                                       └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                                           └──  None
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                                               └──  all s : State | s in Init.^reachable {       some i : Init | i in s.^reachable
inv7 S:     │                                                                                                                                                                                                                                                                                                                                                                                                                   └──  None
inv5 O:     ├──  Event in State
inv5 O:     │   └──  Event in State<:Event
inv5 T:     │       └──  Event in State.Event
inv5 T:     │           └──  Event in Event.State
inv5 O:     │               └──  Event in Event<:State
inv5 T:     │                   └──  all s : State | Event in s.trans
inv5 T:     │                       └──  all s : State | Event in s<:trans
inv5 T:     │                           └──  all s : State | Event in trans
inv5 S:     │                               └──  all s : State | Event in s.(trasn.Event)
inv5 O:     │                                   └──  all s : State | Event in s.(trans.Event)
inv4 B:     ├──  Init.(^{ s, ns : State | s->Event->ns in trans
inv7 B:     │   └──  ((State - Init) -> State) in ^{ s, ns : State | s->Event->ns in trans
inv6 C:     │       └──  State.(trans.State) = Event
inv5 C:     │           └──  all s : State | s.(trans.State) = State.(trans.State)
inv4 B:     │               └──  Init.(^{ s, ns : State | s->Event->ns in trans
inv4 B:     │                   └──  Init.(^{ s, ns : State | s->Event->ns in trans
inv3 O:     ├──  all s:State | s in Init.^(trans.Event)
inv4 O:     │   └──  all s:State | s in Init.^(trans.Event)
inv4 O:     │       └──  all s:State | s in Init.^(trans.Event)
inv4 O:     │           └──  all s:State | s in Init.^(Event.trans)
inv4 O:     │               └──  all s:State | s in Init.^(State.trans)
inv1 E:     ├──   
xMrWA4bPcTqxQ57Xz M:     │   └──  user added theme options. same as previous submission
inv1 C:     ├──  all s:State | some s.trans
inv2 C:     │   └──  one Init
inv3 O:     │       └──  all s:State | lone s.trans
inv3 B:     │           └──  all s:State | lone trans.s
inv3 O:     │               └──  all s:State | lone (s.trans)
q2Fi8uWEL8rK7QrzG M:     │                   └──  user added theme options. same as previous submission
inv3 O:     │                       ├──  all s:State | lone (s.trans)
inv4 T:     │                       │   └──  Init in State.^trans
inv4 T:     │                       │       └──  Init in State.^trans
inv4 T:     │                       │           └──  Init in State.^trans
inv4 T:     │                       ├──  all s:State | s :> Init.trans
inv4 T:     │                       │   └──  all s:State | s :> Init.trans
inv4 T:     │                       │       └──  all s:State | s :>(Init.trans)
inv4 T:     │                       │           └──  all s:State | s <:(Init.trans)
inv4 T:     │                       │               └──  all s:State | s in (Init.trans)
inv4 S:     │                       │                   └──  all s:State | s in :>(Init.trans)
inv4 T:     │                       │                       └──  all s:State | s :>(Init.trans)
inv4 T:     │                       │                           └──  all s:State | s :>(Init.^trans)
inv4 T:     │                       │                               └──  all s:State | s :>(Init.trans.^trans)
inv4 T:     │                       │                                   └──  all s:State | Init.trans :> s
inv4 T:     │                       │                                       └──  all s:State | Init <: s.trans
inv4 T:     │                       │                                           └──  all s:State | Init <: s.trans
inv6 C:     │                       ├──  all e:Event | some e<:State.trans
inv5 S:     │                       │   └──  all s:State | all e:Event | all e<:s.trans
inv5 T:     │                       │       └──  all s:State | all e:Event |  e<:s.trans
inv5 T:     │                       │           └──  all s:State | all e:Event |  e<:s.trans
inv5 O:     │                       │               └──  all s:State | all e:Event |  some e<:s.trans
inv5 O:     │                       │                   └──  all s:State | all e:Event |  some e<:s.trans
inv5 T:     │                       │                       └──  all s:State | s.trans
inv4 T:     │                       │                           └──  all s:State | Init.Event.s in trans
inv4 B:     │                       │                               └──  all s:State | Init->Event->s in trans
inv4 B:     │                       │                                   └──  all s:State | Init->Event->(s-Init) in trans
inv4 T:     │                       │                                       └──  all s:State | Init.trans:>s
inv4 T:     │                       │                                           └──  all s:State | Init.trans.trans:>s
inv3 O:     │                       └──  all s:State | lone (s.trans)
inv3 B:     │                           └──  all s:State | lone trans.s
inv3 O:     │                               └──  all s:State | lone s.trans
inv3 B:     │                                   └──  all s:State | lone trans.s
inv3 O:     │                                       └──  lone trans
inv3 B:     │                                           └──  lone trans.State
inv2 B:     ├──  one State
inv2 B:     │   └──  lone State
inv2 B:     │       └──  one State
inv2 U:     │           └──  all s : State | one s
inv2 U:     │               └──  all s : State | #s = 1
inv1 C:     ├──  all s:State | some s.trans
inv1 B:     │   └──  some State.trans
inv2 S:     │       └──  lone Iinit
inv2 U:     │           └──  lone Init
inv2 C:     │               └──  one Init
inv3 O:     │                   └──  all s:State | lone s.trans
inv1 B:     ├──  some trans
inv1 B:     │   └──  some State.trans
inv1 S:     │       └──  all s : State some s.trans
inv1 C:     │           └──  all s : State | some s.trans
inv2 C:     │               └──  one Init
inv2 C:     │                   └──  one Init
inv3 B:     │                       └──  lone State.trans.State
inv3 B:     │                           └──  lone trans.State
inv3 B:     │                               └──  one trans.State
inv3 B:     │                                   └──  one State.trans.State
inv3 B:     │                                       └──  lone (State.trans).State
inv3 B:     │                                           └──  one (State.trans).State
inv3 C:     │                                               └──  all s : State , e : Event | lone e.(s.trans)
inv3 S:     │                                                   └──  all s : State , e : Event | lone e.(s.trans)
inv3 S:     │                                                       └──  all s : State , e : Event | lone e.(s.trans)
inv4 S:     │                                                           └──  None
inv4 S:     │                                                               └──  None
inv5 S:     │                                                                   └──  all s,r : States | (s.trans).State = (r.trans).State
inv5 C:     │                                                                       └──  all s,r : State | (s.trans).State = (r.trans).State
inv6 S:     │                                                                           └──  all e : Event | some State(trans.e)
inv6 S:     │                                                                               └──  all e : Event | some State(trans.e)
inv6 C:     │                                                                                   └──  all e : Event | some s : State | e in (s.trans).State
inv6 C:     │                                                                                       └──  all e : Event | some (trans.State).e
inv1 C:     └──  all s:State | some s . trans
inv2 C:         └──  one Init
